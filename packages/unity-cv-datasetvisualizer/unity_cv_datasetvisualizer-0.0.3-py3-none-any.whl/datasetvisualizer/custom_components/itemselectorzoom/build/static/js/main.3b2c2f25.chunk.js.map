{"version":3,"sources":["ItemSelectorZoom.tsx","index.tsx"],"names":["ItemSelectorZoom","state","index","props","args","handleClick","side","forceBounds","setState","Streamlit","setComponentValue","handleIndexChange","value","Number","render","Arrow","styled","ArrowForwardIosIcon","FlippedArrow","transform","FixedMarginIconButton","IconButton","marginBottom","maxSize","style","width","dangerouslySetInnerHTML","__html","display","fontFamily","fontSize","color","TextField","label","id","defaultValue","type","variant","size","disabled","onChange","e","target","marginTop","position","overflow","marginLeft","marginRight","onClick","border","padding","borderRadius","fontWeight","max_size","this","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"mSAcMA,E,4MACGC,MAAQ,CAACC,MAAO,EAAKC,MAAMC,KAAX,O,EAYfC,YAAc,SAACC,GACrB,IACIJ,EAAQ,EAAKD,MAAMC,MACX,SAATI,EACDJ,GAHc,EAII,UAATI,IACTJ,GALc,GAOhBA,EAAQ,EAAKK,YAAYL,GACzB,EAAKM,UACH,iBAAO,CAACN,MAAOA,MACf,kBAAMO,IAAUC,kBAAkB,EAAKT,MAAMC,W,EAIzCS,kBAAoB,SAACC,GAC3B,IAAIV,EAAQ,EAAKK,YAAYM,OAAOD,IAEpC,EAAKJ,UACH,WACE,MAAQ,CAACN,MAAOA,MAElB,kBAAMO,IAAUC,kBAAkB,EAAKT,MAAMC,W,EAI1CY,OAAS,WAEd,IAAMC,EAAQC,YAAOC,IAAPD,CAA4B,IACpCE,EAAeF,YAAOC,IAAPD,CAA4B,CAC/CG,UAAW,mBAEPC,EAAwBJ,YAAOK,IAAPL,CAAmB,CAC/CM,aAAc,SAEVC,EAAU,EAAKpB,MAAMC,KAAX,YAChB,OACI,yBAAKoB,MAAO,CAACC,MAAO,SAClB,2BAAOC,wBAAyB,CAACC,OAAO,6DAGxC,yBAAKH,MAAO,CAACC,MAAO,MAAOG,QAAS,iBAClC,uBAAGJ,MAAO,CAACK,WAAY,8BAAiCC,SAAS,OAAQC,MAAO,oBAAhF,kBAGA,kBAACC,EAAA,EAAD,CACEC,MAAM,QACNC,GAAG,sBACHC,aAAa,GACbC,KAAK,SACLC,QAAQ,WACRC,KAAK,QACLP,MAAM,YACNQ,SAAU,EAAKpC,MAAMoC,SACrBC,SAAU,SAAAC,GAAC,OAAI,EAAK9B,kBAAkB8B,EAAEC,OAAO9B,QAC/CY,MAAO,CACLF,aAAc,OACdqB,UAAW,QACXZ,MAAM,cAIZ,yBAAKP,MAAO,CAACK,WAAY,4BAA6BJ,MAAO,MAAOG,QAAS,iBAC3E,yBAAKJ,MAAO,CAACO,MAAM,UAAYa,SAAU,WAAYnB,MAAO,QAASoB,SAAU,UAAWjB,QAAS,QAASkB,WAAY,OAAQC,YAAa,SAC3I,kBAAC3B,EAAD,CAAuBW,MAAM,UACNQ,SAAU,EAAKpC,MAAMoC,UAAiC,IAArB,EAAKtC,MAAMC,MAC5C8C,QAAS,kBAAM,EAAK3C,YAAY,SAChCmB,MAAO,CAACyB,OAAQ,iBAAkBC,QAAS,MAAOC,aAAa,MAAOJ,YAAa,SAExG,kBAAC7B,EAAD,CAAcY,SAAS,WAEzB,wBAAIN,MAAO,CAAEO,MAAM,OAAQqB,WAAY,SAAUxB,QAAS,iBAAmB,EAAK3B,MAAMC,OACxF,kBAACkB,EAAD,CAAuBW,MAAM,UACNQ,SAAU,EAAKpC,MAAMoC,UAAY,EAAKtC,MAAMC,MAAQ,IAAMqB,EAC1DyB,QAAS,kBAAM,EAAK3C,YAAY,UAChCmB,MAAO,CAACyB,OAAQ,iBAAkBC,QAAS,MAAOC,aAAa,MAAOL,WAAY,SAEvG,kBAAC/B,EAAD,CAAOe,SAAS,e,iDAvF9B,SAAoB5B,GAClB,IAAImD,EAAWC,KAAKnD,MAAMC,KAAX,YAAiC,EAMhD,OALIF,EAAQ,EACVA,EAAQ,EACCA,EAAQmD,IACjBnD,EAAQmD,GAEHnD,M,GAVoBqD,KAmGhBC,cAAwBxD,GC7GvCyD,IAAS3C,OACP,kBAAC,IAAM4C,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3b2c2f25.chunk.js","sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  StreamlitComponentBase\n} from \"streamlit-component-lib\"\nimport React, { ReactNode} from \"react\"\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled, TextField } from \"@material-ui/core\"\n\ninterface State {\n  index: number\n}\n\nclass ItemSelectorZoom extends StreamlitComponentBase<State> {\n  public state = {index: this.props.args[\"index\"]}\n\n  private forceBounds(index: number){\n    let max_size = this.props.args[\"datasetSize\"] - 1\n    if (index < 0){\n      index = 0\n    } else if (index > max_size) {\n      index = max_size\n    }\n    return index\n  }\n\n  private handleClick = (side: string): void => {\n    let increment = 1\n    let index = this.state.index\n    if(side === \"left\") {\n      index -= increment\n    } else if (side === \"right\") {\n      index += increment\n    }\n    index = this.forceBounds(index)\n    this.setState(\n      () => ({index: index}),\n      () => Streamlit.setComponentValue(this.state.index)\n    )\n  }\n\n  private handleIndexChange = (value: string) => {\n    let index = this.forceBounds(Number(value))\n\n    this.setState(\n      () => {\n        return ({index: index})\n      },\n      () => Streamlit.setComponentValue(this.state.index)\n    )\n  }\n\n  public render = (): ReactNode => {\n\n    const Arrow = styled(ArrowForwardIosIcon)({})\n    const FlippedArrow = styled(ArrowForwardIosIcon)({\n      transform: \"rotate(180deg)\"\n    })\n    const FixedMarginIconButton = styled(IconButton)({\n      marginBottom: \"10px\"\n    })\n    const maxSize = this.props.args[\"datasetSize\"]\n    return (\n        <div style={{width: \"100%\"}}>\n          <style dangerouslySetInnerHTML={{__html: `\n            .css-9eqr5v { display: none }\n          `}} />\n          <div style={{width: \"50%\", display: \"inline-block\"}}>\n            <p style={{fontFamily: \"\\\"IBM Plex Sans\\\", sans-serif\", fontSize:\"1rem\", color: \"rgb(38, 39, 48)\"}}>\n              Go to frame #:\n            </p>\n            <TextField\n              label=\"Index\"\n              id=\"outlined-size-small\"\n              defaultValue=\"\"\n              type=\"number\"\n              variant=\"outlined\"\n              size=\"small\"\n              color=\"secondary\"\n              disabled={this.props.disabled}\n              onChange={e => this.handleIndexChange(e.target.value)}\n              style={{\n                marginBottom: \"20px\",\n                marginTop: \"-10px\",\n                color:\"#F63366\"\n              }}\n            />\n          </div>\n          <div style={{fontFamily: \"IBM Plex Sans, sans-serif\", width: \"50%\", display: \"inline-block\" }}>\n            <div style={{color:\"#F63366\",  position: \"relative\", width: \"300px\", overflow: \"visible\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n              <FixedMarginIconButton color=\"inherit\"\n                                     disabled={this.props.disabled || this.state.index === 0}\n                                     onClick={() => this.handleClick(\"left\")}\n                                     style={{border: \"1px solid #DDD\", padding: \"2px\", borderRadius:\"5px\", marginRight: \"10px\"}}\n              >\n                <FlippedArrow fontSize=\"large\" />\n              </FixedMarginIconButton>\n              <h1 style={{ color:\"#666\", fontWeight: \"normal\", display: \"inline-block\" }}>{this.state.index}</h1>\n              <FixedMarginIconButton color=\"inherit\"\n                                     disabled={this.props.disabled || this.state.index + 1 === maxSize}\n                                     onClick={() => this.handleClick(\"right\")}\n                                     style={{border: \"1px solid #DDD\", padding: \"2px\", borderRadius:\"5px\", marginLeft: \"10px\"}}\n              >\n                <Arrow fontSize=\"large\" />\n              </FixedMarginIconButton>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(ItemSelectorZoom)\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ItemSelectorZoom from \"./ItemSelectorZoom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ItemSelectorZoom />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}