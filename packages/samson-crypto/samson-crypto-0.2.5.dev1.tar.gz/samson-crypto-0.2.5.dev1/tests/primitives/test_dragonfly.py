from samson.protocols.dragonfly import Dragonfly
from samson.utilities.bytes import Bytes
import unittest

class DragonflyTestCase(unittest.TestCase):
    def test_gauntlet(self):
        for _ in range(100):
            key = Bytes.random(16)
            df1 = Dragonfly(key)
            df2 = Dragonfly(key)
            ch1 = df1.get_challenge()
            ch2 = df2.get_challenge()

            self.assertEqual(df1.derive_key(ch2), df2.derive_key(ch1))


    # Tested manually using https://asecuritysite.com/encryption/dragonfly as reference
    # The sample run at the bottom the site is incorrect.
    # The sample code is slightly incorrect (I would think) since it does not take PE**A over q.
    # This shouldn't effect the result, but it dramatically effects the speed.
    def _run_test(self, key, a, A, b, B, expected_secret):
        df1 = Dragonfly(key=key)
        df1.a = a
        df1.A = A

        df2 = Dragonfly(key=key)
        df2.a = b
        df2.A = B

        ch1 = df1.get_challenge()
        ch2 = df2.get_challenge()

        self.assertEqual(df1.derive_key(ch2), df2.derive_key(ch1))
        self.assertEqual(df1.derive_key(ch2), expected_secret)



    def test_vec0(self):
        key             = Bytes(0xfdee07ef88aca880d4271162b17f5d33)
        a               = 250880770737930342654423648015633994074939873033766022255025496615874222504912585002901531095510336418438911262133400549266621007381535643199691275791842090378799960239317975624837710296651753134132422736875404767427124712994394367474497697660863250692488795143401712512374772037718465975003713618719088393557690641484754755736651966935322972829812360469191337882664848388098483511959473771896109846036444692130142651246180874459175630128674520712177027112581176647173537843307617757193071980434767333348677037194817887223746133438330946188424540358653058167718466705874176805116826776864557990198155301385201386719
        A               = 74011350333558236459726289914908198472943248594782512438333354169910535870589824343003071643959020542489838352238130008943220117652603220292832230147896124317364038170837745376063390027080533894732252085369673371142526854195195942514376881968460752392555870406359743193196736234871590313263977340931020030835562828573547578198801422822266793186825321274044588273221852302884073795786855978658042650714659793699489256012115479706456433413496958892586392613161240159582523407491156679144114831516047616410845426020133570723026949062035595742698513904891643249171937211500476604314628603686745410264224909069990352351
        b               = 23822931883698819639038744550478635813411324728604642244186835158905154240342303238286154946234480755872842902245182213623302446770177008484316380939430957531227520415592218685027421016366076952219512819494128022406504000372722072572299066534708247170589898952021241349376794877438438179221014315696101730946342189741133585622316925528317630022631409838378012418050676877737605657334871244030132343394426743550707015600399544121330814055165653071075976674334325828354492932784608673490577089541793464441247211533454564667407711237775694310404068329821347611088419889254111058921871873399296874706278018834673098611
        B               = 15316711980557689249132188961914840684551177283035023596012878329406028820008196060255908526764415291715518150478317255635755417524628347377007471319199749153539863552046417815075776231690259965594738883598070793536771282660351029810477537649981370756629705591450563342618849680794339185877695103342829389950904070458487326861507424604418485319379735522928669159420506367574077582416220487557460135792512098039116611718217234507722367293789931650843814211558765319936693921855500956792675697662158883313614510307030408486611122514673721114378002791528871114343373942801564639127620395190924396597479558025016485896
        expected_secret = 22578712144957623426628394773780589188344508965885331998192558523144219817721481788808284502483450618919549999412455831381598464903180645123537253933908015925887333691005683376654814957198564449430331872998984313417332162825242366795572911496365116620045289841712699894758535847261180909969691816345256482548757387370070600201000031104685468559050545273212017584018775518010977007618457997509255413612277320989757073343323591309905840543906781683449313282935495811847110083780629576946870795897860132469685758609721116391933587703113390137072429398347831515144603291946907358271528352299548475399036959305664042013092

        self._run_test(key, a, A, b, B, expected_secret)



    def test_vec1(self):
        key             = Bytes(0x5609d8aea0ff6e278290f465f58598c4)
        a               = 86064436973832734765211283251803054648525436219030939944863804068188811690577068420744027277610235164677778216506234776144775076646051920244942252347265793784638141924579700075689060073904263768699034260660070408828132282902708276257124783850332089764251360297767937493854645417109493834492550394573129913952476427552756437792041423351535156578533993336953631888119853597348106749041779453108277395748920715895335607029606497361036580848978478177424493297376871946698735619238990010770379242508579686015276643646615664765251500593577734608705702907207922959439412988077625991600768411533183216404217378269701242281
        A               = 29940220888342764964467586519874445881282803512519903760579250597321691768276618260993426676524136886646620405748185695293934224565344582589249504106973349763836113689638219648608400382429022593849523899633402851856257370830485199934269323647566967365551438064338057664300409618295504962863333137215051334038868205138863096182078963457240308449834827060663247630997696787493573973273902737243501815980227765282312163206263273593559299752941583357745442659855465829985483162740635479053799794575524119279145117824879473068302269022054284759920732514867059463903188401472386701528646815703421048682723704642241472666
        b               = 72950278527733998077447575224315150082952538436789160411940942634400140205510634128064596726807283262057435096689465274587831174277452646956188389284817360184403176815825835412875935787642050537592721296349787697785281124825849116945719800910605673921709525036131049341982113407231973725661102999257428745161621676687891005241235349254271018685905786488562315653018469600324937308965866952129154881060194400377193243225599509593801905096080593775292307380370991190273244601347025779101983785766526057267100490652048925905989265439214037865203813372730631115902216573678023479324629251355904864552463488189499909697
        B               = 173000800402203465966963575253132508235749226148737045448468841379497670911676922458036212519449755026691855859615315519384265915754405339451396053427598257635450535045222167976205303228384381663339072354550519121002414253913579905550215247724045134652482442925558446308401161336545790901365186455957578948528300387988528340466171189599323742645398207950424008244556341091636153113456940619981223728578721286650371243191115664778833292064981460328870200688938073822532466404208329698340624514671220410692399009819860737942477766223822985390743262234786571108309461525000228226086363916841014924188081604728953911155
        expected_secret = 4641083819569825943243595549779854862953282342402278056130037857358074164036194799851632144583330935155711650742906799022668226078641988213196642638780764305945207136851030094773852143874866259903654820997219452766488732837326620545120377458823236826030545401556758117793450349302857728355736986739882645355053436672763656282414164312123774448620888584786439561404558630495209443189954340434326245246652802440169806789931519180234271486520973277317908853934071635975658783044328556874169352910905205944418119401962051222559751291446214737242504408705307094045107626087888079753834413347801017188045432143418735797164

        self._run_test(key, a, A, b, B, expected_secret)



    def test_vec2(self):
        key             = Bytes(0xb71b3e3f3a73a511fc1391e543075410)
        a               = 221761208202466334946671903954812876304745161886274180193504226180528201877253915200475410843836668419573704361359588719595378790369265840256034871991081445764916172644548214288473322997365513856189015903173633864455255417295675097210406526607476883564332367991189085685716916766593541339105715509872432644623367725430584570973221336770527837918225935956691462507940212512313806780880107407988719495447198957546199570199366335037081335261912441407906350235649824487374005456831651824948560856676734855586283443102423312479405198515210633979597326823519710849389084523189012727623517693878078784462149264839919525909
        A               = 15214158634444462125322832901537361363609552732157915591532718305456646950475264326921637718314940129478275655914030119646827086707464266246762086177204118907438691725505645424747099099147209998075582487785769515459331816743738382166560458309764678781689430889239995968432228234883745551930524699035209196926030092567418843264423553395916189588369465650090764926709371053546078880194019967356563230181292778933866233100914334515571831170711143079114510734192263465981539646592786359687245316598566500462430529635196355455763565649025756033312043437316156776788480295656206972831051124271122811616900138741998333198
        b               = 157452624969549939706364636898237872214522423295363966511436432431429072980825250732076993001412418362594039561634291213552125638962046322873387250781681042619287621338502749913600765901028982579677933054048904920670091133628606383426493472089338160599786069611244242536473672968397922544368347876397098338988779409644598946476039723463005401902155367221218551190571726962433718379746302843793521152501980088907538385163473995582231966697491424620633971818628230418244863177515499980682698547603190978811109290854131601443148767492447768223537832911617821151758613551179486350076627322559299552565192188001067203565
        B               = 72036809006253658535907474347323380582278711325368246644947717467921816201042889869331846409247871815630807416309151669961785341435283362199762862681011762221906333098650239263785911032699616029090392527936348907608321663789207040251480627095496839766536717016033805139347346162054198610881776990421409287887322861627116478540554544238898490660148443659862090121268571524525674982434727730188776816217917803551398864755312678465157413076586589350553018259782250388057227726504638755756846131784659657588672790137289717623032002315427363855450287280544552637947581936864371607507408485570297392628613373870566873629
        expected_secret = 779604148284381353570954476169345546767018212605464596093866360886562013398776781734744792861246166971343017695893717696456658158821691742378193271472442528496818490048875897829844361294139203525654205259412436977738166810153880026688901614391517080209429403848687532658470537435187895782709773828676418829108805932802706059091809291759517109325835506930618379276542892861690377081602678592438166981444763727801078630104583409853378824567984222961129861386803570526133038929004213481032146223958760021341926351218598621102341345998950924214730278022992602453505722692174869096477215920931975214004194256819319478778

        self._run_test(key, a, A, b, B, expected_secret)
