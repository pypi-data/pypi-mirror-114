"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc

from .query_pb2 import *
class QueryStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Counts:grpc.UnaryUnaryMultiCallable[
        global___QueryCountsRequest,
        global___QueryCountsResponse] = ...

    Data:grpc.UnaryUnaryMultiCallable[
        global___QueryDataRequest,
        global___QueryDataResponse] = ...

    DataSource:grpc.UnaryUnaryMultiCallable[
        global___QueryDataSourceRequest,
        global___QueryDataSourceResponse] = ...

    OracleScript:grpc.UnaryUnaryMultiCallable[
        global___QueryOracleScriptRequest,
        global___QueryOracleScriptResponse] = ...

    Request:grpc.UnaryUnaryMultiCallable[
        global___QueryRequestRequest,
        global___QueryRequestResponse] = ...

    PendingRequests:grpc.UnaryUnaryMultiCallable[
        global___QueryPendingRequestsRequest,
        global___QueryPendingRequestsResponse] = ...

    Validator:grpc.UnaryUnaryMultiCallable[
        global___QueryValidatorRequest,
        global___QueryValidatorResponse] = ...

    Reporters:grpc.UnaryUnaryMultiCallable[
        global___QueryReportersRequest,
        global___QueryReportersResponse] = ...

    ActiveValidators:grpc.UnaryUnaryMultiCallable[
        global___QueryActiveValidatorsRequest,
        global___QueryActiveValidatorsResponse] = ...

    Params:grpc.UnaryUnaryMultiCallable[
        global___QueryParamsRequest,
        global___QueryParamsResponse] = ...

    RequestSearch:grpc.UnaryUnaryMultiCallable[
        global___QueryRequestSearchRequest,
        global___QueryRequestSearchResponse] = ...

    RequestPrice:grpc.UnaryUnaryMultiCallable[
        global___QueryRequestPriceRequest,
        global___QueryRequestPriceResponse] = ...

    RequestVerification:grpc.UnaryUnaryMultiCallable[
        global___QueryRequestVerificationRequest,
        global___QueryRequestVerificationResponse] = ...

    RequestPool:grpc.UnaryUnaryMultiCallable[
        global___QueryRequestPoolRequest,
        global___QueryRequestPoolResponse] = ...


class QueryServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Counts(self,
        request: global___QueryCountsRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryCountsResponse: ...

    @abc.abstractmethod
    def Data(self,
        request: global___QueryDataRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryDataResponse: ...

    @abc.abstractmethod
    def DataSource(self,
        request: global___QueryDataSourceRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryDataSourceResponse: ...

    @abc.abstractmethod
    def OracleScript(self,
        request: global___QueryOracleScriptRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryOracleScriptResponse: ...

    @abc.abstractmethod
    def Request(self,
        request: global___QueryRequestRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryRequestResponse: ...

    @abc.abstractmethod
    def PendingRequests(self,
        request: global___QueryPendingRequestsRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryPendingRequestsResponse: ...

    @abc.abstractmethod
    def Validator(self,
        request: global___QueryValidatorRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryValidatorResponse: ...

    @abc.abstractmethod
    def Reporters(self,
        request: global___QueryReportersRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryReportersResponse: ...

    @abc.abstractmethod
    def ActiveValidators(self,
        request: global___QueryActiveValidatorsRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryActiveValidatorsResponse: ...

    @abc.abstractmethod
    def Params(self,
        request: global___QueryParamsRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryParamsResponse: ...

    @abc.abstractmethod
    def RequestSearch(self,
        request: global___QueryRequestSearchRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryRequestSearchResponse: ...

    @abc.abstractmethod
    def RequestPrice(self,
        request: global___QueryRequestPriceRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryRequestPriceResponse: ...

    @abc.abstractmethod
    def RequestVerification(self,
        request: global___QueryRequestVerificationRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryRequestVerificationResponse: ...

    @abc.abstractmethod
    def RequestPool(self,
        request: global___QueryRequestPoolRequest,
        context: grpc.ServicerContext,
    ) -> global___QueryRequestPoolResponse: ...


def add_QueryServicer_to_server(servicer: QueryServicer, server: grpc.Server) -> None: ...
