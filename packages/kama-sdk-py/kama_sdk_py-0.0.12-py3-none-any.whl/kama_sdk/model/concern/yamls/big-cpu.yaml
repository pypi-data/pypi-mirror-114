kind: Concern
id: sdk.concern.cpu
cached:
  mem_dump:
    kind: PromDataSupplier
    step: 5m
    source: "sum(
              rate(
                container_cpu_usage_seconds_total{
                  namespace='${get::ns}'
                 }[20m]
               )
             )"

  grouped_by_deployment_dump:
    kind: PromDataSupplier
    type: vector
    source: "sum(
              rate(
                container_cpu_usage_seconds_total{
                  namespace='${get::ns}'
                 }[20m]
               )
             ) by (pod)"

  grouped_by_deployment_hum:
    kind: PromVectorsToGroupsSupplier
    source: get::self>>grouped_by_deployment_dump
    humanizer: kind::CoresHumanizer
    with_unit: true

  mem_timeseries:
    kind: PromMatrixToSeriesSupplier
    source: get::props mem_dump
    humanizer: kind::CoresHumanizer

  mem_timeseries_no_hum:
    kind: PromMatrixToSeriesSupplier
    source: get::props mem_dump

  mem_latest:
    kind: TimeseriesAggregationSupplier
    source: get::props mem_timeseries_no_hum

  friendly_mem_latest:
    kind: QuantityHumanizationSupplier
    source: get::props mem_latest
    backend: kind::CoresHumanizer

  cluster_avail_dump:
    kind: PromDataSupplier
    source: "sum(kube_node_status_capacity_memory_bytes) - sum(kube_node_status_allocatable_memory_bytes)"

  cluster_avail_sum:
    kind: TimeseriesAggregationSupplier
    source:
      kind: PromMatrixToSeriesSupplier
      source: get::props cluster_avail_dump

  cluster_avail_sum_hum:
    kind: QuantityHumanizationSupplier
    source: get::props cluster_avail_sum
    backend: kind::CoresHumanizer

  pct_used:
    kind: PercentageSupplier
    numerator: get::props mem_latest
    denominator: get::props cluster_avail_sum
    rounding: 2
    print_debug: [numerator, denominator]

---

id: sdk.concern-card-adapter.cpu
kind: ConcernCardAdapter
spec:
  type: Block
  title: Application + Plugins CPU
  elements:
    - type: Section
      width: 1
      elements:
        - type: "Text"
          text: Responsible for
          style: [centered]

        - type: "Text"
          text: get::props concern=>friendly_mem_latest
          style: { fontSize: '20px', centered: true, bold: true }

        - type: Tag
          text: "${get::self>>concern=>pct_used}%
          of total
          ${get::self>>concern=>cluster_avail_sum_hum} Usage"
          style: { centered: true, mt: '4px' }

    - type: Section
      width: 2
      style: { pr: '40px' }
      elements:
        - type: TimeseriesGraph
          data: get::props concern=>mem_timeseries
          style:
            width: 100%
            height: 100%

    - type: Section
      width: 1
      elements:
        - type: Donut
          data: get::self>>concern>>grouped_by_deployment_hum
