# Generated by Django 3.2.5 on 2021-07-26 18:06

from django.db import migrations, models
import easy_thumbnails.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseTemplateCacheTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_template_part', models.CharField(choices=[('HEAD', 'Head'), ('BODY', 'Body'), ('NAVBAR', 'Navbar'), ('IO_PREVIEW', 'Image objects preview'), ('IO_VIEW', 'Image objects view'), ('IO_GALARY', 'Image objects galary'), ('POSTS_PREVIEW', 'Posts preview'), ('POSTS_VIEW', 'Posts view'), ('PRICE_VIEW', 'Price view'), ('PRICE_PREVIEW', 'Price preview')], db_index=True, default='HEAD', max_length=100, unique=True, verbose_name='Base template part (unique)')),
                ('seconds', models.IntegerField(verbose_name='Value of seconds cache')),
            ],
            options={
                'verbose_name': 'CACHE-time',
                'verbose_name_plural': 'CACHE-time',
            },
        ),
        migrations.CreateModel(
            name='CSS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(default='This css is needed for ...', max_length=100, verbose_name='Label')),
                ('content', models.FileField(upload_to='css', verbose_name='file css')),
            ],
            options={
                'verbose_name': 'CSS файл',
                'verbose_name_plural': 'CSS файлы',
            },
        ),
        migrations.CreateModel(
            name='DjangoAnalyticalServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(choices=[('YANDEX_METRIKA_COUNTER_ID', 'YANDEX_METRIKA_COUNTER_ID'), ('GOOGLE_ANALYTICS_GTAG_PROPERTY_ID', 'GOOGLE_ANALYTICS_GTAG_PROPERTY_ID')], default='YANDEX_METRIKA_COUNTER_ID', max_length=100, unique=True, verbose_name='Service')),
                ('value', models.TextField(default='80821312', max_length=100)),
            ],
            options={
                'verbose_name': 'Сервис аналитики',
                'verbose_name_plural': 'Сервисы аналитики',
            },
        ),
        migrations.CreateModel(
            name='Favicon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favicon', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='favicon')),
                ('label', models.TextField(default='This favicon is needed for ...', max_length=100, verbose_name='Label')),
                ('tile_color', models.CharField(default='#2b5797', max_length=100, verbose_name='TileColor for msapplication and macos')),
                ('app_name', models.CharField(default='My application', max_length=100, verbose_name='Application name')),
                ('theme_color', models.CharField(default='#ffffff', max_length=100, verbose_name='Theme color')),
            ],
            options={
                'verbose_name': 'Значок сайта',
                'verbose_name_plural': 'Значки сайта',
            },
        ),
        migrations.CreateModel(
            name='Font',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(default='This font is ...', max_length=100, verbose_name='Label')),
                ('content', models.FileField(upload_to='fonts', verbose_name='file font')),
            ],
            options={
                'verbose_name': 'Шрифт',
                'verbose_name_plural': 'Шрифты',
            },
        ),
        migrations.CreateModel(
            name='HTMLBodyScript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(default='This script is needed for ...', max_length=100, verbose_name='Label')),
                ('content', models.TextField(default='This code snippet will be inserted into the body section of the base template', help_text='This code snippet will be inserted into the body section of the base template', unique=True, verbose_name='Body script content')),
                ('order', models.PositiveSmallIntegerField(default=1, help_text='Ordering in template', verbose_name='Sort order')),
            ],
            options={
                'verbose_name': 'HTML скрипт (body)',
                'verbose_name_plural': 'HTML скрипты (body)',
            },
        ),
        migrations.CreateModel(
            name='HTMLHeadLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(default='This link is needed for ...', max_length=100, verbose_name='Label')),
                ('content', models.TextField(default='This code snippet will be inserted into the head section of the base template', help_text='This code snippet will be inserted into the head section of the base template', unique=True, verbose_name='Head link content')),
                ('order', models.PositiveSmallIntegerField(default=1, help_text='Ordering in template', verbose_name='Sort order')),
            ],
            options={
                'verbose_name': 'Head link',
                'verbose_name_plural': 'Head links',
            },
        ),
        migrations.CreateModel(
            name='HTMLHeadMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(default='This meta is needed for ...', max_length=100, verbose_name='Label')),
                ('content', models.TextField(default='This code snippet will be inserted into the head section of the base template', help_text='This code snippet will be inserted into the head section of the base template', unique=True, verbose_name='Head meta content')),
                ('order', models.PositiveSmallIntegerField(default=1, help_text='Ordering in template', verbose_name='Sort order')),
            ],
            options={
                'verbose_name': 'Head meta',
                'verbose_name_plural': 'Head meta',
            },
        ),
        migrations.CreateModel(
            name='Verifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(choices=[('yandex-verification', 'yandex-verification'), ('google-site-verification', 'google-site-verification')], default='yandex-verification', max_length=100, unique=True, verbose_name='Service')),
                ('value', models.TextField(default='01a933e67426668b', max_length=300)),
            ],
            options={
                'verbose_name': 'Подтверждение сайта',
                'verbose_name_plural': 'Подтверждения сайта',
            },
        ),
    ]
