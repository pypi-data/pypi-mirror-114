# Generated by Django 3.2.5 on 2021-07-26 18:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Navbar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='My navbar', max_length=50, verbose_name='Label for navbar')),
                ('css_framework', models.CharField(choices=[('BS4', 'Bootstrap 4'), ('BS5', 'Bootstrap 5')], default='BS5', max_length=100, verbose_name='CSS framework')),
                ('position', models.CharField(choices=[('top', 'top'), ('bottom', 'bottom')], default='top', max_length=100, verbose_name='Navbar position (fixed top/fixed bottom)')),
                ('ul_position', models.CharField(choices=[('mx-auto', 'center'), ('me-auto', 'left'), ('ms-auto', 'right')], default='mx-auto', max_length=100, verbose_name='Navbar position (left/center/right)')),
                ('navbar_expand', models.CharField(choices=[(' ', 'None'), ('-sm', 'sm'), ('-md', 'md'), ('-lg', 'lg'), ('-xl', 'xl'), ('-xxl', 'xxl')], default=' ', max_length=100, verbose_name='Navbar expand')),
                ('navbar_bg', models.CharField(choices=[(' ', 'None'), ('bg-primary', 'Primary'), ('bg-secondary', 'Secondary'), ('bg-success', 'Success'), ('bg-warning', 'Warning'), ('bg-info', 'Info'), ('bg-light', 'Light'), ('bg-dark', 'Dark'), ('bg-white', 'White')], default=' ', max_length=100, verbose_name='Navbar background')),
                ('navbar_style', models.CharField(choices=[(' ', 'None'), ('navbar-dark', 'Dark'), ('navbar-light', 'Light')], default=' ', max_length=100, verbose_name='Navbar style')),
                ('nav_extraclass', models.CharField(default='my-navbar-nav-class', max_length=512, verbose_name='Nav class for customisation')),
                ('ul_extraclass', models.CharField(default='my-navbar-ul-class', max_length=512, verbose_name='Ul class for customisation')),
                ('is_collapsed', models.BooleanField(default=False, verbose_name='Is collapsed navbar')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is use this navbar')),
            ],
        ),
        migrations.CreateModel(
            name='NavbarItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='My navbar item', max_length=50, verbose_name='Label for navbar item')),
                ('url', models.CharField(default='#', max_length=1024, verbose_name='Url')),
                ('order', models.IntegerField(default=1, unique=True, verbose_name='Ordering in navbar')),
                ('type', models.CharField(choices=[('btn', 'Button'), ('nav-link', 'Link')], default='link', max_length=100)),
                ('btn_style', models.CharField(blank=True, choices=[(' ', 'None'), ('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-white', 'White')], default='btn-primary', max_length=100, null=True, verbose_name='Button style (if type button)')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is use this navbar item')),
                ('navbar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='base_navbar.navbar', verbose_name='Navbar')),
            ],
        ),
        migrations.CreateModel(
            name='Offcanvas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='My offcanvas', max_length=50, verbose_name='Label for offcanvas')),
                ('placement', models.CharField(choices=[('offcanvas-start', 'left'), ('offcanvas-end', 'right'), ('offcanvas-top', 'top'), ('offcanvas-bottom', 'bottom')], default='top', max_length=100, verbose_name='Offcanvas placement')),
                ('text', models.TextField(blank=True, max_length=2048, null=True, verbose_name='Text for offcanvas')),
                ('extraclass', models.CharField(default='my-offcanvas-extra-class', max_length=512, verbose_name='For customisation')),
                ('body_extraclass', models.CharField(default='my-offcanvas-body-extra-class', max_length=512, verbose_name='For customisation')),
                ('header_extraclass', models.CharField(default='my-offcanvas-header-extra-class', max_length=512, verbose_name='For customisation')),
                ('title_extraclass', models.CharField(default='my-offcanvas-title-extra-class', max_length=512, verbose_name='For customisation')),
            ],
        ),
        migrations.CreateModel(
            name='OffcanvasItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='My offcanvas item', max_length=50, verbose_name='Label for offcanvas item')),
                ('url', models.CharField(default='#', max_length=1024, verbose_name='Url')),
                ('order', models.IntegerField(default=1, unique=True, verbose_name='Ordering in offcanvas')),
                ('extraclass', models.CharField(default='my-offcanvas-item-extra-class', max_length=512, verbose_name='For customisation')),
                ('btn_style', models.CharField(blank=True, choices=[(' ', 'None'), ('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-white', 'White')], default='btn-primary', max_length=100, null=True, verbose_name='Button style')),
                ('w', models.CharField(default='w-75', max_length=50, verbose_name='Width')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is use this offcanvas item')),
                ('offcanvas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='base_navbar.offcanvas', verbose_name='Offcanvas')),
            ],
        ),
        migrations.CreateModel(
            name='SVG_html',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='My SVG html', max_length=50, verbose_name='Label for SVG html')),
                ('content', models.TextField(default='SVG', max_length=4096, verbose_name='SVG html')),
            ],
            options={
                'verbose_name': 'SVG',
                'verbose_name_plural': 'SVG',
            },
        ),
        migrations.CreateModel(
            name='OffcanvasItemChild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='My offcanvas child item', max_length=50, verbose_name='Label for offcanvas child item')),
                ('url', models.CharField(default='#', max_length=1024, verbose_name='Url')),
                ('order', models.IntegerField(default=1, unique=True, verbose_name='Ordering in offcanvas item')),
                ('extraclass', models.CharField(default='my-offcanvas-item-child-extra-class', max_length=512, verbose_name='For customisation')),
                ('w', models.CharField(default='w-75', max_length=50, verbose_name='Width')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is use this navbar item child')),
                ('offcanvas_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='base_navbar.offcanvasitem', verbose_name='Offcanvas item')),
                ('svg_html', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='offcanvas_child_items', to='base_navbar.svg_html')),
            ],
        ),
        migrations.AddField(
            model_name='offcanvasitem',
            name='svg_html',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='offcanvas_items', to='base_navbar.svg_html'),
        ),
        migrations.CreateModel(
            name='NavbarItemChild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='My navbar item', max_length=50, verbose_name='Label for navbar item')),
                ('url', models.CharField(default='#', max_length=1024, verbose_name='Url')),
                ('order', models.IntegerField(default=1, unique=True, verbose_name='Ordering in navbar item')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is use this navbar item child')),
                ('navbar_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='base_navbar.navbaritem', verbose_name='Navbar item')),
                ('svg_html', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='navbar_child_items', to='base_navbar.svg_html')),
            ],
        ),
        migrations.AddField(
            model_name='navbaritem',
            name='offcanvas',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base_navbar.offcanvas'),
        ),
        migrations.AddField(
            model_name='navbaritem',
            name='svg_html',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='navbar_items', to='base_navbar.svg_html'),
        ),
        migrations.AddField(
            model_name='navbar',
            name='svg_toggler_icon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base_navbar.svg_html', verbose_name='toggler icon from SVG html model'),
        ),
    ]
