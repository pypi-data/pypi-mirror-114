{"version":3,"sources":["newsWidgetModel.es6.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,GAAG,KAAH,CAAS,UAAT,GAAsB,GAAG,KAAH,CAAS,MAAT,CAAgB,MAAhB,CAAuB;AACzC,cAAU,EAAE,QAAF,CAAW;AACjB,kBAAU,CADO;AAEjB,mBAAW,IAFM;AAGjB,iBAAS,IAHQ;AAIjB,gBAAQ,IAJS;AAKjB,sBAAc;AALG,KAAX,EAMP,GAAG,KAAH,CAAS,MAAT,CAAgB,SAAhB,CAA0B,QANnB,CAD+B;;AASzC;;;;;;;;;;AAUA,YAnByC,sBAmB9B;AAAA;;AACP,aAAK,OAAL,CAAa,aAAb;;AAEA,UAAE,IAAF,CAAO,KAAK,GAAL,CAAS,QAAT,CAAP,EAA2B;AACvB,qBAAS;AACL,qBAAK;AADA,aADc;AAIvB,sBAAU,KAJa;AAKvB,qBAAS,uBAAQ;AACb,oBAAM,WAAW,MAAK,GAAL,CAAS,UAAT,CAAjB;AACA,oBAAM,SAAS,EAAE,IAAF,EAAQ,IAAR,cAAwB,QAAxB,OAAf;;AAEA,sBAAK,GAAL,CAAS,WAAT,EAAsB,EAAE,GAAF,CAAM,MAAN,EAAc,gBAAQ;AACxC,wBAAM,QAAQ,EAAE,IAAF,CAAd;;AAEA,2BAAO;AACH,8BAAM,OAAO,MAAM,IAAN,CAAW,SAAX,EAAsB,IAAtB,EAAP,EACO,8BADP,CADH;AAGH,+BAAO,MAAM,IAAN,CAAW,OAAX,EAAoB,IAApB,EAHJ;AAIH,6BAAK,MAAM,IAAN,CAAW,MAAX,EAAmB,IAAnB;AAJF,qBAAP;AAMH,iBATqB,CAAtB;AAUH,aAnBsB;AAoBvB,mBAAO,iBAAM;AACT,sBAAK,GAAL,CAAS,WAAT,EAAsB,EAAtB;AACH;AAtBsB,SAA3B;AAwBH;AA9CwC,CAAvB,CAAtB","file":"newsWidgetModel.js","sourcesContent":["/**\n * State and operations for the administration UI's news widget.\n *\n * Model Attributes:\n *     maxItems (number):\n *         The maximum number of items to parse from the feed.\n *\n *     newsItems (Array of object):\n *         The list of news items to render. Each entry represents a news item,\n *         and is an object with the following keys:\n *\n *         ``date`` (:js:class:`Moment`):\n *             The parsed date.\n *\n *          ``title`` (string):\n *              The title of the news entry.\n *\n *          ``url`` (string):\n *              The URL to the news page for the item.\n *\n *     newsURL (string):\n *         The URL to the news page, for linking in the browser.\n *\n *     rssURL (string):\n *         The URL to the news RSS feed.\n *\n *     subscribeURL (string):\n *         The URL to a subscription page for the news feed or newsletter.\n */\nRB.Admin.NewsWidget = RB.Admin.Widget.extend({\n    defaults: _.defaults({\n        maxItems: 5,\n        newsItems: null,\n        newsURL: null,\n        rssURL: null,\n        subscribeURL: null,\n    }, RB.Admin.Widget.prototype.defaults),\n\n    /**\n     * Load the latest news from the server.\n     *\n     * This will attempt to load the news feed and populate the ``newsItems``\n     * attribute with the results. If there's an error when loading,\n     * ``newsItems`` will be set to an empty array.\n     *\n     * Before attempting to load the news, this will trigger the\n     * ``loadingNews`` event.\n     */\n    loadNews() {\n        this.trigger('loadingNews');\n\n        $.ajax(this.get('rssURL'), {\n            accepts: {\n                xml: 'application/rss+xml',\n            },\n            dataType: 'xml',\n            success: data => {\n                const maxItems = this.get('maxItems');\n                const $items = $(data).find(`item:lt(${maxItems})`);\n\n                this.set('newsItems', _.map($items, item => {\n                    const $item = $(item);\n\n                    return {\n                        date: moment($item.find('pubDate').text(),\n                                     'ddd, DD MMM YYYY HH:mm:ss ZZ'),\n                        title: $item.find('title').text(),\n                        url: $item.find('link').text(),\n                    };\n                }));\n            },\n            error: () => {\n                this.set('newsItems', []);\n            },\n        });\n    },\n});\n"]}