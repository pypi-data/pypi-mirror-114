{"version":3,"sources":["defaultReviewerModelTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,qCAAN,EAA6C,YAAW;AACpD,QAAI,cAAJ;;AAEA,eAAW,YAAW;AAClB,gBAAQ,IAAI,GAAG,eAAP,EAAR;AACH,KAFD;;AAIA,aAAS,OAAT,EAAkB,YAAW;AACzB,WAAG,cAAH,EAAmB,YAAW;AAC1B,gBAAM,OAAO,MAAM,KAAN,CAAY;AACrB,sBAAM,IADe;AAErB,kCAAkB;AACd,wBAAI,EADU;AAEd,0BAAM,qBAFQ;AAGd,gCAAY;AAHE;AAFG,aAAZ,CAAb;;AASA,mBAAO,IAAP,EAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,mBAAO,KAAK,EAAZ,EAAgB,IAAhB,CAAqB,EAArB;AACA,mBAAO,KAAK,IAAZ,EAAkB,IAAlB,CAAuB,qBAAvB;AACA,mBAAO,KAAK,SAAZ,EAAuB,IAAvB,CAA4B,SAA5B;AACH,SAdD;AAeH,KAhBD;;AAkBA,aAAS,QAAT,EAAmB,YAAW;AAC1B,iBAAS,YAAT,EAAuB,YAAW;AAC9B,eAAG,YAAH,EAAiB,YAAW;AACxB,sBAAM,GAAN,CAAU,MAAV,EAAkB,KAAlB;AACA,oBAAM,OAAO,MAAM,MAAN,EAAb;AACA,uBAAO,KAAK,IAAZ,EAAkB,IAAlB,CAAuB,KAAvB;AACH,aAJD;AAKH,SAND;;AAQA,iBAAS,iBAAT,EAA4B,YAAW;AACnC,eAAG,YAAH,EAAiB,YAAW;AACxB,sBAAM,GAAN,CAAU,WAAV,EAAuB,SAAvB;AACA,oBAAM,OAAO,MAAM,MAAN,EAAb;AACA,uBAAO,KAAK,UAAZ,EAAwB,IAAxB,CAA6B,SAA7B;AACH,aAJD;AAKH,SAND;AAOH,KAhBD;AAiBH,CA1CD","file":"defaultReviewerModelTests.js","sourcesContent":["suite('rb/resources/models/DefaultReviewer', function() {\n    let model;\n\n    beforeEach(function() {\n        model = new RB.DefaultReviewer();\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                default_reviewer: {\n                    id: 42,\n                    name: 'my-default-reviewer',\n                    file_regex: '/foo/.*',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.name).toBe('my-default-reviewer');\n            expect(data.fileRegex).toBe('/foo/.*');\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('name field', function() {\n            it('With value', function() {\n                model.set('name', 'foo');\n                const data = model.toJSON();\n                expect(data.name).toBe('foo');\n            });\n        });\n\n        describe('fileRegex field', function() {\n            it('With value', function() {\n                model.set('fileRegex', '/foo/.*');\n                const data = model.toJSON();\n                expect(data.file_regex).toBe('/foo/.*');\n            });\n        });\n    });\n});\n"]}