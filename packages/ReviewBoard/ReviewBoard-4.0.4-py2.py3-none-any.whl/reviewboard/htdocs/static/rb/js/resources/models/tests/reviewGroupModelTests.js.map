{"version":3,"sources":["reviewGroupModelTests.es6.js"],"names":[],"mappings":"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","file":"reviewGroupModelTests.js","sourcesContent":["suite('rb/resources/models/ReviewGroup', function() {\n    describe('setStarred', function() {\n        const url = '/api/users/testuser/watched/groups/';\n        let callbacks;\n        let group;\n        let session;\n\n        beforeEach(function() {\n            RB.UserSession.instance = null;\n            session = RB.UserSession.create({\n                username: 'testuser',\n                watchedReviewGroupsURL: url,\n            });\n\n            group = new RB.ReviewGroup({\n                id: 1,\n            });\n\n            callbacks = {\n                success: function() {},\n                error: function() {},\n            };\n\n            spyOn(session.watchedGroups, 'addImmediately').and.callThrough();\n            spyOn(session.watchedGroups, 'removeImmediately').and.callThrough();\n            spyOn(RB, 'apiCall').and.callThrough();\n            spyOn(callbacks, 'success');\n            spyOn(callbacks, 'error');\n        });\n\n        it('true', function() {\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('POST');\n                expect(request.url).toBe(url);\n\n                request.success({\n                    stat: 'ok',\n                });\n            });\n\n            group.setStarred(true, callbacks);\n\n            expect(session.watchedGroups.addImmediately).toHaveBeenCalled();\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalled();\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('false', function() {\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('DELETE');\n                expect(request.url).toBe(url + '1/');\n\n                request.success({\n                    stat: 'ok',\n                });\n            });\n\n            group.setStarred(false, callbacks);\n\n            expect(session.watchedGroups.removeImmediately).toHaveBeenCalled();\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalled();\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n    });\n\n    describe('addUser', function() {\n        let callbacks;\n        let group;\n\n        beforeEach(function() {\n            group = new RB.ReviewGroup({\n                id: 1,\n                name: 'test-group',\n            });\n\n            callbacks = {\n                success: function() {},\n                error: function() {},\n            };\n\n            spyOn(RB, 'apiCall').and.callThrough();\n            spyOn(callbacks, 'success');\n            spyOn(callbacks, 'error');\n        });\n\n        it('Loaded group', function() {\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('POST');\n                expect(request.data.username).toBe('my-user');\n\n                request.success({\n                    stat: 'ok',\n                });\n            });\n\n            group.addUser('my-user', callbacks);\n\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalled();\n        });\n\n        it('Unloaded group', function() {\n            spyOn($, 'ajax');\n\n            group.set('id', null);\n            expect(group.isNew()).toBe(true);\n\n            group.addUser('my-user', callbacks);\n\n            expect(RB.apiCall).not.toHaveBeenCalled();\n            expect($.ajax).not.toHaveBeenCalled();\n            expect(callbacks.error).toHaveBeenCalled();\n        });\n    });\n\n    describe('removeUser', function() {\n        let callbacks;\n        let group;\n\n        beforeEach(function() {\n            group = new RB.ReviewGroup({\n                id: 1,\n                name: 'test-group',\n            });\n\n            callbacks = {\n                success: function() {},\n                error: function() {},\n            };\n\n            spyOn(RB, 'apiCall').and.callThrough();\n            spyOn(callbacks, 'success');\n            spyOn(callbacks, 'error');\n        });\n\n        it('Loaded group', function() {\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('DELETE');\n\n                request.success();\n            });\n\n            group.removeUser('my-user', callbacks);\n\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalled();\n        });\n\n        it('Unloaded group', function() {\n            spyOn($, 'ajax');\n\n            group.set('id', null);\n            expect(group.isNew()).toBe(true);\n\n            group.removeUser('my-user', callbacks);\n\n            expect(RB.apiCall).not.toHaveBeenCalled();\n            expect($.ajax).not.toHaveBeenCalled();\n            expect(callbacks.error).toHaveBeenCalled();\n        });\n    });\n});\n"]}