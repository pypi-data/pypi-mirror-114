{"version":3,"sources":["reviewReplyEditorModelTests.es6.js"],"names":[],"mappings":"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","file":"reviewReplyEditorModelTests.js","sourcesContent":["suite('rb/reviewRequestPage/models/ReviewReplyEditor', function() {\n    let reviewReply;\n    let review;\n    let editor;\n\n    beforeEach(function() {\n        review = new RB.Review({\n            loaded: true,\n            links: {\n                replies: {\n                    href: '/api/review/123/replies/',\n                },\n            },\n        });\n\n        reviewReply = review.createReply();\n\n        spyOn(review, 'ready').and.callFake(\n            (options, context) => options.ready.call(context));\n\n        spyOn(reviewReply, 'ensureCreated').and.callFake(\n            (options, context) => options.success.call(context));\n\n        spyOn(reviewReply, 'ready').and.callFake(\n            (options, context) => options.ready.call(context));\n    });\n\n    describe('Event handling', function() {\n        describe('reviewReply changes', function() {\n            beforeEach(function() {\n                editor = new RB.ReviewRequestPage.ReviewReplyEditor({\n                    contextType: 'body_top',\n                    review: review,\n                    reviewReply: reviewReply,\n                    text: 'My Text',\n                });\n            });\n\n            it('Sets up events on new reviewReply', function() {\n                spyOn(editor, 'listenTo').and.callThrough();\n\n                const reviewReply = new RB.ReviewReply();\n                editor.set('reviewReply', reviewReply);\n\n                expect(editor.listenTo.calls.count()).toEqual(2);\n                expect(editor.listenTo.calls.argsFor(0)[1]).toEqual('destroyed');\n                expect(editor.listenTo.calls.argsFor(1)[1]).toEqual('published');\n            });\n\n            it('Removes events from old reviewReply', function() {\n                editor.set('reviewReply', new RB.ReviewReply());\n\n                expect(editor._listeningTo.hasOwnProperty(reviewReply._listenId))\n                    .toBe(false);\n            });\n        });\n    });\n\n    describe('Methods', function() {\n        describe('save', function() {\n            function testBodySave(options) {\n                editor = new RB.ReviewRequestPage.ReviewReplyEditor({\n                    contextType: options.contextType,\n                    review: review,\n                    reviewReply: reviewReply,\n                    richText: options.richText,\n                    text: 'My Text',\n                });\n\n                spyOn(editor, 'trigger');\n                spyOn(reviewReply, 'save').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                editor.save();\n\n                expect(editor.get('replyObject')).toBe(reviewReply);\n                expect(editor.get('hasDraft')).toBe(true);\n                expect(editor.get('text')).toBe('My Text');\n                expect(editor.get('richText')).toBe(true);\n                expect(reviewReply.get(options.textAttr)).toBe('My Text');\n                expect(reviewReply.get(options.richTextAttr)).toBe(\n                    options.richText);\n                expect(reviewReply.ready).toHaveBeenCalled();\n                expect(reviewReply.save).toHaveBeenCalled();\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            }\n\n            function testCommentSave(options) {\n                editor = new RB.ReviewRequestPage.ReviewReplyEditor({\n                    contextType: options.contextType,\n                    hasDraft: false,\n                    review: review,\n                    reviewReply: reviewReply,\n                    richText: options.richText,\n                    text: 'My Text',\n                });\n\n                spyOn(editor, 'trigger');\n                spyOn(options.model.prototype, 'ready').and.callFake(\n                    (options, context) => options.ready.call(context));\n                spyOn(options.model.prototype, 'save').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                editor.save();\n\n                const replyObject = editor.get('replyObject');\n\n                expect(editor.get('hasDraft')).toBe(true);\n                expect(editor.get('text')).toBe('My Text');\n                expect(editor.get('richText')).toBe(true);\n                expect(replyObject instanceof options.model).toBe(true);\n                expect(replyObject.get('text')).toBe('My Text');\n                expect(replyObject.get('richText')).toBe(options.richText);\n                expect(options.model.prototype.ready).toHaveBeenCalled();\n                expect(options.model.prototype.save).toHaveBeenCalled();\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            }\n\n            it('With existing reply object', function() {\n                const replyObject = new RB.DiffCommentReply();\n\n                editor = new RB.ReviewRequestPage.ReviewReplyEditor({\n                    contextType: 'diff_comments',\n                    hasDraft: false,\n                    replyObject: replyObject,\n                    review: review,\n                    reviewReply: reviewReply,\n                    text: 'My Text',\n                });\n\n                spyOn(editor, 'trigger');\n                spyOn(replyObject, 'ready').and.callFake(\n                    (options, context) => options.ready.call(context));\n                spyOn(replyObject, 'save').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                editor.save();\n\n                expect(editor.get('hasDraft')).toBe(true);\n                expect(editor.get('replyObject')).toBe(replyObject);\n                expect(replyObject.get('text')).toBe('My Text');\n                expect(replyObject.ready).toHaveBeenCalled();\n                expect(replyObject.save).toHaveBeenCalled();\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            });\n\n            it('With empty text', function() {\n                const replyObject = new RB.DiffCommentReply({\n                    text: 'Orig Text',\n                });\n\n                editor = new RB.ReviewRequestPage.ReviewReplyEditor({\n                    contextType: 'diff_comments',\n                    review: review,\n                    reviewReply: reviewReply,\n                });\n\n                spyOn(editor, 'trigger');\n                spyOn(editor, 'resetStateIfEmpty');\n                spyOn(replyObject, 'ready').and.callFake(\n                    (options, context) => options.ready.call(context));\n                spyOn(replyObject, 'save');\n\n                editor.set({\n                    hasDraft: false,\n                    replyObject: replyObject,\n                    text: '',\n                });\n                editor.save();\n\n                expect(editor.get('hasDraft')).toBe(false);\n                expect(editor.get('replyObject')).toBe(replyObject);\n                expect(replyObject.get('text')).toBe('Orig Text');\n                expect(replyObject.ready).toHaveBeenCalled();\n                expect(replyObject.save).not.toHaveBeenCalled();\n                expect(editor.resetStateIfEmpty).toHaveBeenCalled();\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n            });\n\n            describe('With body_top', function() {\n                function testSave(richText) {\n                    testBodySave({\n                        contextType: 'body_top',\n                        textAttr: 'bodyTop',\n                        richTextAttr: 'bodyTopRichText',\n                        richText: richText,\n                    });\n                }\n\n                it('richText=true', function() {\n                    testSave(true);\n                });\n\n                it('richText=false', function() {\n                    testSave(false);\n                });\n            });\n\n            describe('With body_bottom', function() {\n                function testSave(richText) {\n                    testBodySave({\n                        contextType: 'body_bottom',\n                        textAttr: 'bodyBottom',\n                        richTextAttr: 'bodyBottomRichText',\n                        richText: richText,\n                    });\n                }\n\n                it('richText=true', function() {\n                    testSave(true);\n                });\n\n                it('richText=false', function() {\n                    testSave(false);\n                });\n            });\n\n            describe('With diff comments', function() {\n                function testSave(richText) {\n                    testCommentSave({\n                        contextType: 'diff_comments',\n                        model: RB.DiffCommentReply,\n                        richText: richText,\n                    });\n                }\n\n                it('richText=true', function() {\n                    testSave(true);\n                });\n\n                it('richText=false', function() {\n                    testSave(false);\n                });\n            });\n\n            describe('With file attachment comments', function() {\n                function testSave(richText) {\n                    testCommentSave({\n                        contextType: 'file_attachment_comments',\n                        model: RB.FileAttachmentCommentReply,\n                        richText: richText,\n                    });\n                }\n\n                it('richText=true', function() {\n                    testSave(true);\n                });\n\n                it('richText=false', function() {\n                    testSave(false);\n                });\n            });\n\n            describe('With general comments', function() {\n                function testSave(richText) {\n                    testCommentSave({\n                        contextType: 'general_comments',\n                        model: RB.GeneralCommentReply,\n                        richText: richText,\n                    });\n                }\n\n                it('richText=true', function() {\n                    testSave(true);\n                });\n\n                it('richText=false', function() {\n                    testSave(false);\n                });\n            });\n\n            describe('With screenshot comments', function() {\n                function testSave(richText) {\n                    testCommentSave({\n                        contextType: 'screenshot_comments',\n                        model: RB.ScreenshotCommentReply,\n                        richText: richText,\n                    });\n                }\n\n                it('richText=true', function() {\n                    testSave(true);\n                });\n\n                it('richText=false', function() {\n                    testSave(false);\n                });\n            });\n        });\n\n        describe('resetStateIfEmpty', function() {\n            let replyObject;\n\n            beforeEach(function() {\n                replyObject = new RB.DiffCommentReply();\n\n                editor = new RB.ReviewRequestPage.ReviewReplyEditor({\n                    contextType: 'diff_comments',\n                    hasDraft: true,\n                    replyObject: replyObject,\n                    review: review,\n                    reviewReply: reviewReply,\n                });\n\n                spyOn(editor, 'trigger');\n                spyOn(replyObject, 'destroy').and.callFake(\n                    (options, context) => options.success.call(context));\n            });\n\n            it('Without empty text', function() {\n                editor.set('text', 'My Text');\n                editor.resetStateIfEmpty();\n\n                expect(replyObject.destroy).not.toHaveBeenCalled();\n                expect(editor.get('hasDraft')).toBe(true);\n                expect(editor.trigger).not.toHaveBeenCalledWith('resetState');\n            });\n\n            describe('With empty text', function() {\n                it('With no reply object', function() {\n                    editor.set('replyObject', null);\n                    editor.resetStateIfEmpty();\n\n                    expect(replyObject.destroy).not.toHaveBeenCalled();\n                    expect(editor.get('hasDraft')).toBe(false);\n                    expect(editor.trigger).toHaveBeenCalledWith('resetState');\n                });\n\n                it('With new reply object', function() {\n                    replyObject.set('id', null);\n                    editor.resetStateIfEmpty();\n\n                    expect(replyObject.destroy).not.toHaveBeenCalled();\n                    expect(editor.get('hasDraft')).toBe(false);\n                    expect(editor.trigger).toHaveBeenCalledWith('resetState');\n                });\n\n                it('With existing reply object', function() {\n                    replyObject.set('id', 123);\n                    editor.resetStateIfEmpty();\n\n                    expect(replyObject.destroy).toHaveBeenCalled();\n                    expect(editor.get('hasDraft')).toBe(false);\n                    expect(editor.trigger).toHaveBeenCalledWith('resetState');\n                });\n\n                describe('With context type', function() {\n                    beforeEach(function() {\n                        replyObject.set('id', 123);\n\n                        spyOn(editor, '_resetState');\n                        spyOn(reviewReply, 'discardIfEmpty');\n                    });\n\n                    it('body_top', function() {\n                        editor.set('contextType', 'body_top');\n                        editor.resetStateIfEmpty();\n\n                        expect(replyObject.destroy).not.toHaveBeenCalled();\n                        expect(editor._resetState).toHaveBeenCalledWith(true);\n                    });\n\n                    it('body_bottom', function() {\n                        editor.set('contextType', 'body_bottom');\n                        editor.resetStateIfEmpty();\n\n                        expect(replyObject.destroy).not.toHaveBeenCalled();\n                        expect(editor._resetState).toHaveBeenCalledWith(true);\n                    });\n\n                    it('diff_comments', function() {\n                        editor.set('contextType', 'diff_comments');\n                        editor.resetStateIfEmpty();\n\n                        expect(replyObject.destroy).toHaveBeenCalled();\n                        expect(editor._resetState).toHaveBeenCalledWith();\n                    });\n\n                    it('file_attachment_comments', function() {\n                        editor.set('contextType', 'file_attachment_comments');\n                        editor.resetStateIfEmpty();\n\n                        expect(replyObject.destroy).toHaveBeenCalled();\n                        expect(editor._resetState).toHaveBeenCalledWith();\n                    });\n\n                    it('general_comments', function() {\n                        editor.set('contextType', 'general_comments');\n                        editor.resetStateIfEmpty();\n\n                        expect(replyObject.destroy).toHaveBeenCalled();\n                        expect(editor._resetState).toHaveBeenCalledWith();\n                    });\n\n                    it('screenshot_comments', function() {\n                        editor.set('contextType', 'screenshot_comments');\n                        editor.resetStateIfEmpty();\n\n                        expect(replyObject.destroy).toHaveBeenCalled();\n                        expect(editor._resetState).toHaveBeenCalledWith();\n                    });\n                });\n            });\n        });\n    });\n});\n"]}