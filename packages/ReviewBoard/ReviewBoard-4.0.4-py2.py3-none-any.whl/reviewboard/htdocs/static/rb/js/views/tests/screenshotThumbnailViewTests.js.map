{"version":3,"sources":["screenshotThumbnailViewTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,8BAAN,EAAsC,YAAW;AAC7C,QAAI,cAAJ;AACA,QAAI,aAAJ;;AAEA,eAAW,YAAW;AAClB,gBAAQ,IAAI,GAAG,UAAP,EAAR;AACA,cAAM,GAAN,GAAY,mBAAZ;AACA,cAAM,EAAN,GAAW,GAAX;AACA,cAAM,UAAN,CAAiB,EAAjB,GAAsB,GAAtB;AACA,cAAM,GAAN,CAAU,QAAV,EAAoB,IAApB;;AAEA,YAAM,WACF,wDADJ;;AAGA,eAAO,IAAI,GAAG,mBAAP,CAA2B;AAC9B,gBAAI,EAAE,QAAF,EAAY,QAAZ,CAAqB,aAArB,CAD0B;AAE9B,mBAAO;AAFuB,SAA3B,CAAP;AAIA,aAAK,MAAL;;AAEA,cAAM,KAAN,EAAa,SAAb,EAAwB,GAAxB,CAA4B,WAA5B;AACA,cAAM,IAAN,EAAY,SAAZ,EAAuB,GAAvB,CAA2B,WAA3B;AACH,KAlBD;;AAoBA,aAAS,SAAT,EAAoB,YAAW;AAC3B,WAAG,uBAAH,EAA4B,YAAW;AACnC,iBAAK,QAAL,CAAc,YAAd,CAA2B,WAA3B;AACA,mBAAO,KAAK,OAAZ,EAAqB,oBAArB,CAA0C,WAA1C;AACH,SAHD;;AAKA,WAAG,wBAAH,EAA6B,YAAW;AACpC,iBAAK,QAAL,CAAc,YAAd,CAA2B,WAA3B;AACA,mBAAO,KAAK,OAAZ,EAAqB,oBAArB,CAA0C,WAA1C;;AAEA,iBAAK,QAAL,CAAc,YAAd,CAA2B,QAA3B;AACA,mBAAO,KAAK,OAAZ,EAAqB,oBAArB,CAA0C,SAA1C;AACH,SAND;;AAQA,WAAG,cAAH,EAAmB,YAAW;AAC1B,kBAAM,KAAN,EAAa,MAAb;;AAEA,iBAAK,QAAL,CAAc,YAAd,CAA2B,WAA3B;AACA,mBAAO,KAAK,OAAZ,EAAqB,oBAArB,CAA0C,WAA1C;;AAEA,iBAAK,GAAL,CAAS,IAAT,CAAc,OAAd,EACK,GADL,CACS,KADT,EAEK,cAFL,CAEoB,OAFpB;AAGA,iBAAK,QAAL,CAAc,YAAd,CAA2B,QAA3B;;AAEA,mBAAO,KAAK,OAAZ,EAAqB,oBAArB,CAA0C,SAA1C;AACA,mBAAO,MAAM,GAAN,CAAU,SAAV,CAAP,EAA6B,IAA7B,CAAkC,KAAlC;AACA,mBAAO,MAAM,IAAb,EAAmB,gBAAnB;AACH,SAdD;;AAgBA,WAAG,QAAH,EAAa,YAAW;AACpB,kBAAM,KAAN,EAAa,SAAb,EAAwB,GAAxB,CAA4B,WAA5B;AACA,kBAAM,CAAN,EAAS,MAAT,EAAiB,GAAjB,CAAqB,QAArB,CAA8B;AAAA,uBAAW,QAAQ,OAAR,EAAX;AAAA,aAA9B;AACA,kBAAM,KAAK,GAAX,EAAgB,SAAhB,EAA2B,GAA3B,CAA+B,QAA/B,CAAwC;AAAA,uBAAQ,MAAR;AAAA,aAAxC;;AAEA,kBAAM,IAAN,EAAY,QAAZ;;AAEA,iBAAK,GAAL,CAAS,IAAT,CAAc,UAAd,EAA0B,KAA1B;;AAEA,mBAAO,EAAE,IAAT,EAAe,gBAAf;AACA,mBAAO,MAAM,OAAb,EAAsB,gBAAtB;AACA,mBAAO,MAAM,OAAN,CAAc,KAAd,CAAoB,OAApB,CAA4B,CAA5B,EAA+B,CAA/B,CAAP,EAA0C,IAA1C,CAA+C,YAA/C;AACA,mBAAO,KAAK,GAAL,CAAS,OAAhB,EAAyB,gBAAzB;AACA,mBAAO,KAAK,MAAZ,EAAoB,gBAApB;AACH,SAdD;AAeH,KA7CD;AA8CH,CAtED","file":"screenshotThumbnailViewTests.js","sourcesContent":["suite('rb/views/ScreenshotThumbnail', function() {\n    let model;\n    let view;\n\n    beforeEach(function() {\n        model = new RB.Screenshot();\n        model.url = '/screenshots/123/';\n        model.id = 123;\n        model.attributes.id = 123;\n        model.set('loaded', true);\n\n        const template =\n            '<div><a class=\"edit\"></a><a class=\"delete\">X</a></div>';\n\n        view = new RB.ScreenshotThumbnail({\n            el: $(template).appendTo($testsScratch),\n            model: model,\n        });\n        view.render();\n\n        spyOn(model, 'trigger').and.callThrough();\n        spyOn(view, 'trigger').and.callThrough();\n    });\n\n    describe('Actions', function() {\n        it('Begin caption editing', function() {\n            view.$caption.inlineEditor('startEdit');\n            expect(view.trigger).toHaveBeenCalledWith('beginEdit');\n        });\n\n        it('Cancel caption editing', function() {\n            view.$caption.inlineEditor('startEdit');\n            expect(view.trigger).toHaveBeenCalledWith('beginEdit');\n\n            view.$caption.inlineEditor('cancel');\n            expect(view.trigger).toHaveBeenCalledWith('endEdit');\n        });\n\n        it('Save caption', function() {\n            spyOn(model, 'save');\n\n            view.$caption.inlineEditor('startEdit');\n            expect(view.trigger).toHaveBeenCalledWith('beginEdit');\n\n            view.$el.find('input')\n                .val('Foo')\n                .triggerHandler('keyup');\n            view.$caption.inlineEditor('submit');\n\n            expect(view.trigger).toHaveBeenCalledWith('endEdit');\n            expect(model.get('caption')).toBe('Foo');\n            expect(model.save).toHaveBeenCalled();\n        });\n\n        it('Delete', function() {\n            spyOn(model, 'destroy').and.callThrough();\n            spyOn($, 'ajax').and.callFake(options => options.success());\n            spyOn(view.$el, 'fadeOut').and.callFake(done => done());\n\n            spyOn(view, 'remove');\n\n            view.$el.find('a.delete').click();\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(model.destroy).toHaveBeenCalled();\n            expect(model.trigger.calls.argsFor(0)[0]).toBe('destroying');\n            expect(view.$el.fadeOut).toHaveBeenCalled();\n            expect(view.remove).toHaveBeenCalled();\n        });\n    });\n});\n"]}