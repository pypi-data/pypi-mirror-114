{"version":3,"sources":["screenshotCommentModelTests.es6.js"],"names":[],"mappings":"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","file":"screenshotCommentModelTests.js","sourcesContent":["suite('rb/resources/models/ScreenshotComment', function() {\n    const strings = RB.ScreenshotComment.strings;\n    let model;\n\n    beforeEach(function() {\n        /* Set some sane defaults needed to pass validation. */\n        model = new RB.ScreenshotComment({\n            screenshotID: 16,\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n            x: 0,\n            y: 0,\n            width: 1,\n            height: 1,\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                screenshot_comment: {\n                    id: 42,\n                    issue_opened: true,\n                    issue_status: 'resolved',\n                    text_type: 'markdown',\n                    text: 'foo',\n                    x: 10,\n                    y: 20,\n                    w: 30,\n                    h: 40,\n                    thumbnail_url: '/thumbnail.png',\n                    screenshot: {\n                        id: 10,\n                        filename: 'image.png',\n                    },\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.issueOpened).toBe(true);\n            expect(data.issueStatus).toBe(RB.BaseComment.STATE_RESOLVED);\n            expect(data.richText).toBe(true);\n            expect(data.text).toBe('foo');\n            expect(data.x).toBe(10);\n            expect(data.y).toBe(20);\n            expect(data.width).toBe(30);\n            expect(data.height).toBe(40);\n            expect(data.thumbnailURL).toBe('/thumbnail.png');\n            expect(data.screenshot).not.toBe(undefined);\n            expect(data.screenshot.id).toBe(10);\n            expect(data.screenshot.get('filename')).toBe('image.png');\n            expect(data.screenshotID).toBe(10);\n        });\n    });\n\n    describe('toJSON', function() {\n        it('BaseComment.toJSON called', function() {\n            spyOn(RB.BaseComment.prototype, 'toJSON').and.callThrough();\n            model.toJSON();\n            expect(RB.BaseComment.prototype.toJSON).toHaveBeenCalled();\n        });\n\n        it('x field', function() {\n            model.set('x', 10);\n            const data = model.toJSON();\n            expect(data.x).toBe(10);\n        });\n\n        it('y field', function() {\n            model.set('y', 10);\n            const data = model.toJSON();\n            expect(data.y).toBe(10);\n        });\n\n        it('w field', function() {\n            model.set('width', 10);\n            const data = model.toJSON();\n            expect(data.w).toBe(10);\n        });\n\n        it('h field', function() {\n            model.set('height', 10);\n            const data = model.toJSON();\n            expect(data.h).toBe(10);\n        });\n\n        describe('force_text_type field', function() {\n            it('With value', function() {\n                model.set('forceTextType', 'html');\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe(undefined);\n            });\n        });\n\n        describe('include_text_types field', function() {\n            it('With value', function() {\n                model.set('includeTextTypes', 'html');\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe(undefined);\n            });\n        });\n    });\n\n    describe('validate', function() {\n        it('Inherited behavior', function() {\n            spyOn(RB.BaseComment.prototype, 'validate');\n            model.validate({});\n            expect(RB.BaseComment.prototype.validate).toHaveBeenCalled();\n        });\n\n        describe('x', function() {\n            describe('Valid values', function() {\n                it('0', function() {\n                    expect(model.validate({\n                        x: 0,\n                    })).toBe(undefined);\n                });\n\n                it('> 0', function() {\n                    expect(model.validate({\n                        x: 10,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('< 0', function() {\n                    expect(model.validate({\n                        x: -1,\n                    })).toBe(strings.INVALID_X);\n                });\n            });\n        });\n\n        describe('y', function() {\n            describe('Valid values', function() {\n                it('0', function() {\n                    expect(model.validate({\n                        y: 0,\n                    })).toBe(undefined);\n                });\n\n                it('> 0', function() {\n                    expect(model.validate({\n                        y: 10,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('< 0', function() {\n                    expect(model.validate({\n                        y: -1,\n                    })).toBe(strings.INVALID_Y);\n                });\n            });\n        });\n\n        describe('width', function() {\n            describe('Valid values', function() {\n                it('> 0', function() {\n                    expect(model.validate({\n                        width: 10,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('0', function() {\n                    expect(model.validate({\n                        width: 0,\n                    })).toBe(strings.INVALID_WIDTH);\n                });\n\n                it('< 0', function() {\n                    expect(model.validate({\n                        width: -1,\n                    })).toBe(strings.INVALID_WIDTH);\n                });\n            });\n        });\n\n        describe('height', function() {\n            describe('Valid values', function() {\n                it('> 0', function() {\n                    expect(model.validate({\n                        height: 10,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('0', function() {\n                    expect(model.validate({\n                        height: 0,\n                    })).toBe(strings.INVALID_HEIGHT);\n                });\n\n                it('< 0', function() {\n                    expect(model.validate({\n                        height: -1,\n                    })).toBe(strings.INVALID_HEIGHT);\n                });\n            });\n        });\n    });\n});\n"]}