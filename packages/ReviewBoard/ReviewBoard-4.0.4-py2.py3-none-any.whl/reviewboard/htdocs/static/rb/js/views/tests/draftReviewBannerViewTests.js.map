{"version":3,"sources":["draftReviewBannerViewTests.es6.js"],"names":[],"mappings":"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","file":"draftReviewBannerViewTests.js","sourcesContent":["suite('rb/views/DraftReviewBannerView', function() {\n    const template = dedent`\n        <div id=\"review-banner\" hidden class=\"hidden\">\n         <div class=\"banner\">\n          <h1>You have a pending review.</h1>\n          <input id=\"review-banner-edit\" type=\"button\"\n                 value=\"Edit Review\" />\n          <input id=\"review-banner-publish-container\" type=\"button\"\n                 value=\"Publish\" />\n          <input id=\"review-banner-discard\" type=\"button\"\n                 value=\"Discard\" />\n         </div>\n        </div>'\n    `;\n    let model;\n    let view;\n\n    beforeEach(function() {\n        model = new RB.DraftReview();\n        view = new RB.DraftReviewBannerView({\n            el: $(template).appendTo($testsScratch),\n            model: model,\n        });\n\n        view.render();\n    });\n\n    afterEach(function() {\n        view.remove();\n    });\n\n    describe('Button states', function() {\n        let $buttons;\n\n        beforeEach(function() {\n            $buttons = view.$('input');\n        });\n\n        describe('Enabled', function() {\n            it('Default', function() {\n                expect($buttons.prop('disabled')).toBe(false);\n            });\n\n            it('When saved', function() {\n                $buttons.prop('disabled', true);\n                model.trigger('saved');\n                expect($buttons.prop('disabled')).toBe(false);\n            });\n\n            it('When destroyed', function() {\n                $buttons.prop('disabled', true);\n                model.trigger('destroyed');\n                expect($buttons.prop('disabled')).toBe(false);\n            });\n        });\n\n        describe('Disabled', function() {\n            it('When saving', function() {\n                model.trigger('saving');\n                expect($buttons.prop('disabled')).toBe(true);\n            });\n\n            it('When destroying', function() {\n                model.trigger('destroying');\n                expect($buttons.prop('disabled')).toBe(true);\n            });\n        });\n    });\n\n    describe('Button events', function() {\n        it('Edit Review', function() {\n            spyOn(RB.ReviewDialogView, 'create');\n\n            view.$('#review-banner-edit').click();\n\n            expect(RB.ReviewDialogView.create).toHaveBeenCalled();\n            expect(RB.ReviewDialogView.create.calls.argsFor(0)[0].review)\n                .toBe(model);\n        });\n\n        it('Publish', function() {\n            spyOn(model, 'publish');\n\n            view.$('#review-banner-publish').click();\n\n            expect(model.publish).toHaveBeenCalled();\n        });\n\n        it('Publish to Submitter Only', function() {\n            spyOn(model, 'publish');\n\n            /*\n             * The alternative buttons from the split button are added to the\n             * <body>.\n             */\n            $('#review-banner-publish-submitter-only').click();\n\n            expect(model.publish).toHaveBeenCalled();\n        });\n\n        it('Publish and Archive', function() {\n            spyOn(model, 'publish');\n            spyOn(view, '_onPublishClicked').and.callThrough();\n\n            /*\n             * The alternative buttons from the split button are added to the\n             * <body>.\n             */\n            $('#review-banner-publish-and-archive').click();\n\n            expect(model.publish).toHaveBeenCalled();\n            expect(view._onPublishClicked).toHaveBeenCalledWith({\n                publishAndArchive: true\n            });\n        });\n\n        it('Discard', function() {\n            let $buttons = $();\n\n            spyOn(model, 'destroy');\n            spyOn($.fn, 'modalBox').and.callFake(options => {\n                options.buttons.forEach($btn => {\n                    $buttons = $buttons.add($btn);\n                });\n\n                /* Simulate the modalBox API for what we need. */\n                return {\n                    modalBox: cmd => {\n                        expect(cmd).toBe('buttons');\n                        return $buttons;\n                    }\n                };\n            });\n\n            view.$('#review-banner-discard').click();\n            expect($.fn.modalBox).toHaveBeenCalled();\n\n            $buttons.filter('input[value=\"Discard\"]').click();\n            expect(model.destroy).toHaveBeenCalled();\n        });\n    });\n\n    describe('Methods', function() {\n        it('show', function() {\n            expect(view.$el.hasClass('hidden')).toBe(true);\n            expect(view.$el.prop('hidden')).toBe(true);\n\n            view.show();\n            expect(view.$el.hasClass('hidden')).toBe(false);\n            expect(view.$el.prop('hidden')).toBe(false);\n        });\n\n        it('hide', function() {\n            view.$el\n                .addClass('hidden')\n                .prop('hidden', true);\n\n            view.hide();\n            expect(view.$el.hasClass('hidden')).toBe(true);\n            expect(view.$el.prop('hidden')).toBe(true);\n        });\n    });\n});\n"]}