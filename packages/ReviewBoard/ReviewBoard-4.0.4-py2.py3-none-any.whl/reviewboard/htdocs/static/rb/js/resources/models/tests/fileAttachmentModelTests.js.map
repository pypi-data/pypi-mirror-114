{"version":3,"sources":["fileAttachmentModelTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,oCAAN,EAA4C,YAAW;AACnD,QAAI,cAAJ;;AAEA,eAAW,YAAW;AAClB,gBAAQ,IAAI,GAAG,cAAP,CAAsB;AAC1B,0BAAc,IAAI,GAAG,YAAP,CAAoB;AAC9B,0BAAU;AADoB,aAApB;AADY,SAAtB,CAAR;AAKH,KAND;;AAQA,aAAS,QAAT,EAAmB,YAAW;AAC1B,iBAAS,eAAT,EAA0B,YAAW;AACjC,eAAG,YAAH,EAAiB,YAAW;AACxB,sBAAM,GAAN,CAAU,SAAV,EAAqB,KAArB;AACA,oBAAM,OAAO,MAAM,MAAN,EAAb;AACA,uBAAO,KAAK,OAAZ,EAAqB,IAArB,CAA0B,KAA1B;AACH,aAJD;AAKH,SAND;;AAQA,iBAAS,YAAT,EAAuB,YAAW;AAC9B,eAAG,0BAAH,EAA+B,YAAW;AACtC,uBAAO,MAAM,KAAN,EAAP,EAAsB,IAAtB,CAA2B,IAA3B;;AAEA,sBAAM,GAAN,CAAU,MAAV,EAAkB,KAAlB;AACA,oBAAM,OAAO,MAAM,MAAN,EAAb;AACA,uBAAO,KAAK,IAAZ,EAAkB,IAAlB,CAAuB,KAAvB;AACH,aAND;;AAQA,eAAG,+BAAH,EAAoC,YAAW;AAC3C,sBAAM,EAAN,GAAW,GAAX;AACA,sBAAM,UAAN,CAAiB,EAAjB,GAAsB,GAAtB;AACA,uBAAO,MAAM,KAAN,EAAP,EAAsB,IAAtB,CAA2B,KAA3B;;AAEA,sBAAM,GAAN,CAAU,MAAV,EAAkB,KAAlB;AACA,oBAAM,OAAO,MAAM,MAAN,EAAb;AACA,uBAAO,KAAK,IAAZ,EAAkB,IAAlB,CAAuB,SAAvB;AACH,aARD;AASH,SAlBD;AAmBH,KA5BD;;AA8BA,aAAS,OAAT,EAAkB,YAAW;AACzB,WAAG,cAAH,EAAmB,YAAW;AAC1B,gBAAM,OAAO,MAAM,KAAN,CAAY;AACrB,sBAAM,IADe;AAErB,iCAAiB;AACb,wBAAI,EADS;AAEb,6BAAS,SAFI;AAGb,yBAAK,aAHQ;AAIb,8BAAU,UAJG;AAKb,gCAAY,WALC;AAMb,8BAAU,GANG;AAOb,+BAAW;AAPE;AAFI,aAAZ,CAAb;;AAaA,mBAAO,IAAP,EAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,mBAAO,KAAK,EAAZ,EAAgB,IAAhB,CAAqB,EAArB;AACA,mBAAO,KAAK,OAAZ,EAAqB,IAArB,CAA0B,SAA1B;AACA,mBAAO,KAAK,WAAZ,EAAyB,IAAzB,CAA8B,aAA9B;AACA,mBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,UAA3B;AACA,mBAAO,KAAK,SAAZ,EAAuB,IAAvB,CAA4B,WAA5B;AACA,mBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,GAA3B;AACA,mBAAO,KAAK,aAAZ,EAA2B,IAA3B,CAAgC,eAAhC;AACH,SAtBD;AAuBH,KAxBD;AAyBH,CAlED","file":"fileAttachmentModelTests.js","sourcesContent":["suite('rb/resources/models/FileAttachment', function() {\n    let model;\n\n    beforeEach(function() {\n        model = new RB.FileAttachment({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('caption field', function() {\n            it('With value', function() {\n                model.set('caption', 'foo');\n                const data = model.toJSON();\n                expect(data.caption).toBe('foo');\n            });\n        });\n\n        describe('file field', function() {\n            it('With new file attachment', function() {\n                expect(model.isNew()).toBe(true);\n\n                model.set('file', 'abc');\n                const data = model.toJSON();\n                expect(data.path).toBe('abc');\n            });\n\n            it('With existing file attachment', function() {\n                model.id = 123;\n                model.attributes.id = 123;\n                expect(model.isNew()).toBe(false);\n\n                model.set('file', 'abc');\n                const data = model.toJSON();\n                expect(data.path).toBe(undefined);\n            });\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                file_attachment: {\n                    id: 42,\n                    caption: 'caption',\n                    url: 'downloadURL',\n                    filename: 'filename',\n                    review_url: 'reviewURL',\n                    revision: 123,\n                    thumbnail: 'thumbnailHTML',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.caption).toBe('caption');\n            expect(data.downloadURL).toBe('downloadURL');\n            expect(data.filename).toBe('filename');\n            expect(data.reviewURL).toBe('reviewURL');\n            expect(data.revision).toBe(123);\n            expect(data.thumbnailHTML).toBe('thumbnailHTML');\n        });\n    });\n});\n"]}