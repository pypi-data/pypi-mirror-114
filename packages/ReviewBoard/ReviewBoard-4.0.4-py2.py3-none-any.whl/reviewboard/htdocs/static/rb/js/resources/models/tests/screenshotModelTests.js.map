{"version":3,"sources":["screenshotModelTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,gCAAN,EAAwC,YAAW;AAC/C,QAAI,cAAJ;;AAEA,eAAW,YAAU;AACjB,gBAAQ,IAAI,GAAG,UAAP,CAAkB;AACtB,0BAAc,IAAI,GAAG,YAAP,CAAoB;AAC9B,0BAAU;AADoB,aAApB;AADQ,SAAlB,CAAR;AAKH,KAND;;AAQA,aAAS,gBAAT,EAA2B,YAAW;AAClC,WAAG,cAAH,EAAmB,YAAW;AAC1B,kBAAM,GAAN,CAAU,SAAV,EAAqB,YAArB;;AAEA,mBAAO,MAAM,cAAN,EAAP,EAA+B,IAA/B,CAAoC,YAApC;AACH,SAJD;;AAMA,WAAG,eAAH,EAAoB,YAAW;AAC3B,kBAAM,GAAN,CAAU,UAAV,EAAsB,YAAtB;;AAEA,mBAAO,MAAM,cAAN,EAAP,EAA+B,IAA/B,CAAoC,YAApC;AACH,SAJD;;AAMA,WAAG,2BAAH,EAAgC,YAAW;AACvC,kBAAM,GAAN,CAAU;AACN,yBAAS,YADH;AAEN,0BAAU;AAFJ,aAAV;;AAKA,mBAAO,MAAM,cAAN,EAAP,EAA+B,IAA/B,CAAoC,YAApC;AACH,SAPD;AAQH,KArBD;;AAuBA,aAAS,OAAT,EAAkB,YAAW;AACzB,WAAG,cAAH,EAAmB,YAAW;AAC1B,gBAAM,OAAO,MAAM,KAAN,CAAY;AACrB,sBAAM,IADe;AAErB,4BAAY;AACR,wBAAI,EADI;AAER,6BAAS,YAFD;AAGR,8BAAU,aAHF;AAIR,gCAAY;AAJJ;AAFS,aAAZ,CAAb;;AAUA,mBAAO,IAAP,EAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,mBAAO,KAAK,EAAZ,EAAgB,IAAhB,CAAqB,EAArB;AACA,mBAAO,KAAK,OAAZ,EAAqB,IAArB,CAA0B,YAA1B;AACA,mBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,aAA3B;AACA,mBAAO,KAAK,SAAZ,EAAuB,IAAvB,CAA4B,aAA5B;AACH,SAhBD;AAiBH,KAlBD;;AAoBA,aAAS,QAAT,EAAmB,YAAW;AAC1B,iBAAS,eAAT,EAA0B,YAAW;AACjC,eAAG,YAAH,EAAiB,YAAW;AACxB,sBAAM,GAAN,CAAU,SAAV,EAAqB,KAArB;AACA,oBAAM,OAAO,MAAM,MAAN,EAAb;AACA,uBAAO,KAAK,OAAZ,EAAqB,IAArB,CAA0B,KAA1B;AACH,aAJD;AAKH,SAND;AAOH,KARD;AASH,CA/DD","file":"screenshotModelTests.js","sourcesContent":["suite('rb/resources/models/Screenshot', function() {\n    let model;\n\n    beforeEach(function(){\n        model = new RB.Screenshot({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    });\n\n    describe('getDisplayName', function() {\n        it('With caption', function() {\n            model.set('caption', 'My Caption');\n\n            expect(model.getDisplayName()).toBe('My Caption');\n        });\n\n        it('With filename', function() {\n            model.set('filename', 'myfile.png');\n\n            expect(model.getDisplayName()).toBe('myfile.png');\n        });\n\n        it('With caption and filename', function() {\n            model.set({\n                caption: 'My Caption',\n                filename: 'myfile.png'\n            });\n\n            expect(model.getDisplayName()).toBe('My Caption');\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                screenshot: {\n                    id: 42,\n                    caption: 'my-caption',\n                    filename: 'my-filename',\n                    review_url: '/review-ui/',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.caption).toBe('my-caption');\n            expect(data.filename).toBe('my-filename');\n            expect(data.reviewURL).toBe('/review-ui/');\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('caption field', function() {\n            it('With value', function() {\n                model.set('caption', 'foo');\n                const data = model.toJSON();\n                expect(data.caption).toBe('foo');\n            });\n        });\n    });\n});\n"]}