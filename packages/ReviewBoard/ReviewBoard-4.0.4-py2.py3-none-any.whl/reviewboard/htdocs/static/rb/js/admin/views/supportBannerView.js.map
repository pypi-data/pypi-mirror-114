{"version":3,"sources":["supportBannerView.es6.js"],"names":[],"mappings":";;AAAA;;;AAGA,GAAG,iBAAH,GAAuB,SAAS,IAAT,CAAc,MAAd,CAAqB;AACxC,kBAAc,EAAE,QAAF,kFAGX;AACC;AADD,KAHW,CAD0B;;AAQxC,gBAAY,EAAE,QAAF,8EAIT;AACC,oEADD;AAEC,kLAFD;AAGC;AAHD,KAJS,CAR4B;;AAkBxC;;;;;;;;;;;;AAYA,cA9BwC,sBA8B7B,OA9B6B,EA8BpB;AAChB,YAAM,MAAM,IAAI,IAAJ,EAAZ;;AAEA,gBAAQ,MAAR,CAAe,GAAG,iBAAH,CAAqB,QAArB,KAAkC,IAAjD;AACA,WAAG,iBAAH,CAAqB,QAArB,GAAgC,IAAhC;;AAEA,UAAE,OAAF,CAAU,IAAV,EAAgB,UAAhB;;AAEA,eAAO,gBAAP,CAAwB,OAAxB,EAAiC,KAAK,QAAtC,EAAgD,IAAhD;;AAEA,aAAK,OAAL,GAAe,EAAE,YAAF,EACV,IADU,CACL,KADK,EACE,GAAG,iBAAH,CAAqB,UAArB,GAAkC,GAAlC,GAAwC,EAAE,KAAF,CAAQ;AACzD,4BAAgB,QAAQ,WADiC;AAEzD,sBAAU,uCAF+C;AAGzD,eAAG,IAAI,OAAJ,EAHsD,CAGtC;AAHsC,SAAR,CAD1C,EAMV,GANU,CAMN,CANM,CAAf;;AAQA;;;;AAIA,iBAAS,IAAT,CAAc,WAAd,CAA0B,KAAK,OAA/B;AAEH,KAtDuC;;;AAwDxC;;;;;;;;;;AAUA,YAlEwC,oBAkE/B,CAlE+B,EAkE5B;AACR,YAAI,EAAE,MAAF,KAAa,KAAK,OAAtB,EAA+B;AAC3B,iBAAK,MAAL,CAAY;AACR,sBAAM,KAAK,UADH;AAER,2BAAW;AAFH,aAAZ;;AAKA,mBAAO,mBAAP,CAA2B,OAA3B,EAAoC,KAAK,QAAzC,EAAmD,IAAnD;AACH;AACJ,KA3EuC;;;AA6ExC;;;;;;;;;;;;;;AAcA,UA3FwC,kBA2FjC,OA3FiC,EA2FxB;AACZ,kBAAU,EAAE,MAAF,CAAS;AACf,uBAAW,SADI;AAEf,kBAAM,KAAK;AAFI,SAAT,EAGP,OAHO,CAAV;;AAKA,aAAK,GAAL,CACK,KADL,GAEK,IAFL,CAEU,QAAQ,IAFlB,EAGK,IAHL,CAGU,OAHV,EAGmB,QAAQ,SAH3B;;AAKA,eAAO,IAAP;AACH,KAvGuC;;;AAyGxC;;;;;;;;;;;;;;;;AAgBA,WAzHwC,mBAyHhC,OAzHgC,EAyHvB;AACb,eAAO,mBAAP,CAA2B,OAA3B,EAAoC,KAAK,QAAzC,EAAmD,IAAnD;;AAEA,aAAK,MAAL,CAAY;AACR,uBAAW,QAAQ,YAAR,GAAuB,UAD1B;AAER,kBAAM,QAAQ;AAFN,SAAZ;AAIH;AAhIuC,CAArB,EAiIpB;AACC,cAAU,IADX;AAEC,gBAAY;AAFb,CAjIoB,CAAvB","file":"supportBannerView.js","sourcesContent":["/**\n * Show the current support status for the Review Board install.\n */\nRB.SupportBannerView = Backbone.View.extend({\n    _loadingHTML: _.template(dedent`\n        <h2><%- titleText %></h2>\n        <p><span class=\"fa fa-spin fa-spinner\"></span></p>\n    `)({\n        titleText: gettext('Retrieving support information...'),\n    }),\n\n    _errorHTML: _.template(dedent`\n        <h2><%- titleText %></h2>\n        <p><%- bodyText %></p>\n        <p><%= fileText %></p>\n    `)({\n        titleText: gettext('Failed to retrieve support information'),\n        bodyText: gettext('We could not communicate with the Beanbag, Inc. server to retrieve your support information. You may be behind a firewall or have no Internet access.'),\n        fileText: gettext('You may file an issue on our <a href=\"https://reviewboard.googlegroups.com\">community support tracker.</a>'),\n    }),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options passed to the view.\n     *\n     * Option Args:\n     *     supportData (string):\n     *         An encoded payload containing information used to look up\n     *         information on an active support contract for the server.\n     */\n    initialize(options) {\n        const now = new Date();\n\n        console.assert(RB.SupportBannerView.instance === null);\n        RB.SupportBannerView.instance = this;\n\n        _.bindAll(this, '_onError');\n\n        window.addEventListener('error', this._onError, true);\n\n        this._script = $('<script />')\n            .attr('src', RB.SupportBannerView.supportURL + '?' + $.param({\n                'support-data': options.supportData,\n                callback: 'RB.SupportBannerView.instance.receive',\n                _: now.valueOf(),  // Cache bust.\n            }))\n            .get(0);\n\n        /*\n         * If we use jQuery's appendTo, we end up with two <script> tags being\n         * added to the document.\n         */\n        document.body.appendChild(this._script);\n\n    },\n\n    /**\n     * Handle a DOM error.\n     *\n     * If the specified error targets the script tag (e.g., if it could not\n     * be loaded), then an error will be displayed in the banner\n     *\n     * Args:\n     *     e (Event):\n     *         The event that triggered this function.\n     */\n    _onError(e) {\n        if (e.target === this._script) {\n            this.render({\n                html: this._errorHTML,\n                className: 'error',\n            });\n\n            window.removeEventListener('error', this._onError, true);\n        }\n    },\n\n    /**\n     * Render the view\n     *\n     * Args:\n     *     options (object):\n     *         The rendering options.\n     *\n     * Option Args:\n     *     html (string)\n     *         The html to render in the banner.\n     *\n     *     className (string):\n     *         The name of the class to add to the banner.\n     */\n    render(options) {\n        options = _.extend({\n            className: 'loading',\n            html: this._loadingHTML,\n        }, options);\n\n        this.$el\n            .empty()\n            .html(options.html)\n            .attr('class', options.className);\n\n        return this;\n    },\n\n    /**\n     * Receive the data from the server.\n     *\n     * This is invoked via a JSONP callback.\n     *\n     * Args:\n     *     options (object):\n     *         The options received from the server.\n     *\n     * Option Args:\n     *     supportLevel (string):\n     *         The level of support the server has.\n     *\n     *     html (string):\n     *         The HTML to render in the banner.\n     */\n    receive(options) {\n        window.removeEventListener('error', this._onError, true);\n\n        this.render({\n            className: options.supportLevel + '-support',\n            html: options.html,\n        });\n    },\n}, {\n    instance: null,\n    supportURL: 'https://www.beanbaginc.com/support/reviewboard/_status/',\n});\n"]}