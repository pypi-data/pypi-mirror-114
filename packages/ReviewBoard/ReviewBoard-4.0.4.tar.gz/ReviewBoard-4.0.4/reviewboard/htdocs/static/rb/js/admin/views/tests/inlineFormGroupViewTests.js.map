{"version":3,"sources":["inlineFormGroupViewTests.es6.js"],"names":[],"mappings":"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","file":"inlineFormGroupViewTests.js","sourcesContent":["suite('rb/admin/views/InlineFormGroupView', function() {\n    const inlineTemplate = _.template(dedent`\n        <div class=\"rb-c-admin-form-inline <%- classes || '' %>\">\n         <h3 class=\"rb-c-admin-form-inline__title\">\n          <span class=\"rb-c-admin-form-inline__title-prefix\"></span>\n          <span class=\"rb-c-admin-form-inline__title-object\"></span>\n          <span class=\"rb-c-admin-form-inline__title-index\"></span>\n          <span class=\"rb-c-admin-form-inline__actions\">\n           <span class=\"rb-c-admin-form-inline__delete-action\"></span>\n          </span>\n         </h3>\n         <fieldset>\n          <div>\n           <label for=\"myprefix-<%- index %>-foo\"></label>\n           <input id=\"myprefix-<%- index %>-foo\"\n                  name=\"myprefix-<%- index %>-foo\">\n          </div>\n          <div>\n           <label for=\"myprefix-<%- index %>-bar\"></label>\n           <input id=\"myprefix-<%- index %>-bar\"\n                  name=\"myprefix-<%- index %>-bar\">\n          </div>\n         </fieldset>\n        </div>\n    `);\n\n    const template = _.template(dedent`\n        <div class=\"rb-c-admin-form-inline-group\">\n         <h2 class=\"rb-c-admin-form-inline-group__title\"></h2>\n         <div class=\"rb-c-admin-form-inline-group__inlines\">\n          <input type=\"hidden\"\n                 id=\"id_myprefix-TOTAL_FORMS\"\n                 name=\"myprefix-TOTAL_FORMS\"\n                 value=\"<%- totalForms %>\">\n          <input type=\"hidden\"\n                 id=\"id_myprefix-INITIAL_FORMS\"\n                 name=\"myprefix-INITIAL_FORMS\"\n                 value=\"<%- initialForms %>\">\n          <input type=\"hidden\"\n                 id=\"id_myprefix-MIN_NUM_FORMS\"\n                 name=\"myprefix-MIN_NUM_FORMS\"\n                 value=\"<%- minNumForms %>\">\n          <input type=\"hidden\"\n                 id=\"id_myprefix-MAX_NUM_FORMS\"\n                 name=\"myprefix-MAX_NUM_FORMS\"\n                 value=\"<%- maxNumForms %>\">\n\n          <% for (let i = 0; i < numInlines; i++) { %>\n           <%= inlineTemplate({\n               classes: '',\n               index: i\n           }) %>\n          <% } %>\n          <%= inlineTemplate({\n              classes: '-is-template',\n              index: '__prefix__'\n          }) %>\n         </div>\n         <div class=\"rb-c-admin-form-inline-group__actions\">\n          <a href=\"#\" class=\"rb-c-admin-form-inline-group__add-action\"></a>\n         </div>\n        </div>\n    `);\n\n    let $el;\n    let model;\n    let view;\n\n    function buildView(options) {\n        $el =\n            $(template(_.extend({\n                initialForms: 0,\n                inlineTemplate: inlineTemplate,\n                maxNumForms: '',\n                minNumForms: 0,\n                numInlines: 0,\n                totalForms: 0,\n            }, options)))\n            .appendTo($testsScratch);\n\n        view = new RB.Admin.InlineFormGroupView({\n            el: $el,\n            model: model,\n        });\n        view.render();\n    }\n\n    beforeEach(function() {\n        model = new RB.Admin.InlineFormGroup({\n            prefix: 'myprefix',\n        });\n    });\n\n    describe('State', function() {\n        it('Populated on render', function() {\n            buildView({\n                numInlines: 2,\n                initialForms: 2,\n                minNumForms: 1,\n                maxNumForms: 5,\n                totalForms: 2,\n            });\n\n            expect($el.find('.rb-c-admin-form-inline').length).toBe(2);\n            expect(view._$inlineTemplate.length).toBe(1);\n            expect(view._$inlineTemplate.hasClass('-is-template')).toBeFalse();\n\n            expect(model.get('initialInlines')).toBe(2);\n            expect(model.get('maxInlines')).toBe(5);\n            expect(model.get('minInlines')).toBe(1);\n\n            expect(model.inlines.length).toBe(2);\n            expect(view._inlineViews.length).toBe(2);\n\n            let inline = model.inlines.at(0);\n            expect(inline.get('index')).toBe(0);\n            expect(inline.get('isInitial')).toBeTrue();\n            expect(view._inlineViews[0].model).toBe(inline);\n\n            inline = model.inlines.at(1);\n            expect(inline.get('index')).toBe(1);\n            expect(inline.get('isInitial')).toBeTrue();\n            expect(view._inlineViews[1].model).toBe(inline);\n        });\n\n        it('Updated when inlines added', function() {\n            buildView({\n                numInlines: 1,\n                initialForms: 1,\n                totalForms: 1,\n            });\n\n            const $totalForms = $el.find('#id_myprefix-TOTAL_FORMS');\n            const $addButton =\n                $el.find('.rb-c-admin-form-inline-group__add-action');\n\n            expect($el.find('.rb-c-admin-form-inline').length).toBe(1);\n            expect($totalForms.val()).toBe('1');\n\n            $addButton.click();\n            expect($el.find('.rb-c-admin-form-inline').length).toBe(2);\n            expect($totalForms.val()).toBe('2');\n\n            $addButton.click();\n            expect($el.find('.rb-c-admin-form-inline').length).toBe(3);\n            expect($totalForms.val()).toBe('3');\n        });\n\n        it('Updated when inlines added', function() {\n            buildView({\n                numInlines: 2,\n                initialForms: 2,\n                totalForms: 2,\n            });\n\n            const $totalForms = $el.find('#id_myprefix-TOTAL_FORMS');\n\n            expect(model.inlines.length).toBe(2);\n            expect($totalForms.val()).toBe('2');\n\n            model.inlines.at(0).destroy();\n\n            const $inlines = $el.find('.rb-c-admin-form-inline');\n            expect($inlines.length).toBe(1);\n            expect(model.inlines.length).toBe(1);\n            expect($totalForms.val()).toBe('1');\n            expect($inlines[0].id).toBe('myprefix-0');\n        });\n    });\n\n    describe('UI', function() {\n        describe('Add Button', function() {\n            let $addButton;\n\n            beforeEach(function() {\n                buildView({\n                    numInlines: 1,\n                    initialForms: 1,\n                    minNumForms: 0,\n                    maxNumForms: 3,\n                    totalForms: 1,\n                });\n\n                $addButton =\n                    $el.find('.rb-c-admin-form-inline-group__add-action');\n                expect($addButton.length).toBe(1);\n            });\n\n            it('When under limit', function() {\n                expect($addButton.is(':visible')).toBeTrue();\n\n                view.addInlineForm();\n                expect($addButton.is(':visible')).toBeTrue();\n            });\n\n            it('When limit hit', function() {\n                expect($addButton.is(':visible')).toBeTrue();\n\n                view.addInlineForm();\n                view.addInlineForm();\n                expect($addButton.is(':visible')).toBeFalse();\n            });\n        });\n    });\n});\n"]}