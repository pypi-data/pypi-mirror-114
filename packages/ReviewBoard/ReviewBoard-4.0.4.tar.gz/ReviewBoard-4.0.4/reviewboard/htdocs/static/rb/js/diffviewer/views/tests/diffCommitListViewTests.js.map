{"version":3,"sources":["diffCommitListViewTests.es6.js"],"names":[],"mappings":"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","file":"diffCommitListViewTests.js","sourcesContent":["suite('rb/diffviewer/views/DiffCommitListView', function() {\n    function testRows($rows, options) {\n        expect($rows.length).toEqual(options.rowOptions.length);\n\n        const linkIndex = (\n            (options.haveHistory ? 1 : 0) +\n            (options.haveInterCommitDiffControls ? 2 : 0)\n        );\n\n        const valueStartIndex = (\n            linkIndex +\n            (options.haveExpandCollapse ? 1 : 0)\n        );\n\n        for (let i = 0; i < $rows.length; i++) {\n            const $row = $rows.eq(i).find('td');\n\n            const rowOptions = options.rowOptions[i];\n            const values = rowOptions.values;\n\n            expect($row.length).toEqual(values.length + valueStartIndex);\n\n            if (options.haveHistory) {\n                expect($row.eq(0).text().trim()).toEqual(\n                    rowOptions.historySymbol.trim());\n            }\n\n            if (options.haveInterCommitDiffControls) {\n                const $baseSelector = $row.eq(0).find('input');\n                expect($baseSelector.length).toEqual(1);\n                expect($baseSelector.attr('value')).toEqual((i + 1).toString());\n                expect($baseSelector.prop('checked')).toEqual(\n                    !!rowOptions.baseSelected);\n                expect($baseSelector.prop('disabled')).toEqual(\n                    !!rowOptions.baseDisabled);\n\n                const $tipSelector = $row.eq(1).find('input');\n                expect($tipSelector.length).toEqual(1);\n                expect($tipSelector.attr('value')).toEqual((i + 1).toString());\n                expect($tipSelector.prop('checked')).toEqual(\n                    rowOptions.tipSelected ? true : false);\n                expect($tipSelector.prop('disabled')).toEqual(\n                    !!rowOptions.tipDisabled);\n            }\n\n            if (options.haveExpandCollapse) {\n                const $link = $row.eq(linkIndex).find('a');\n\n                if (rowOptions.haveExpandCollapse) {\n                    expect($link.length).toEqual(1);\n\n                    const $span = $link.find('span');\n\n                    if (rowOptions.expanded) {\n                        expect($span.attr('class')).toEqual('fa fa-minus');\n                        expect($span.attr('title'))\n                            .toEqual(gettext('Collapse commit message.'));\n                    } else {\n                        expect($span.attr('class')).toEqual('fa fa-plus');\n                        expect($span.attr('title'))\n                            .toEqual(gettext('Expand commit message.'));\n                    }\n                }\n            }\n\n            for (let j = 0; j < values; j++) {\n                expect($row.eq(valueStartIndex + j).text().trim()).toEqual(values[j]);\n            }\n        }\n    }\n\n    let view;\n    let $container;\n\n    beforeEach(function() {\n        $container = $('<div class=\"diff-commit-list\" />')\n            .appendTo($testsScratch);\n    });\n\n    afterEach(function() {\n        view.remove();\n        view = null;\n        $container = null;\n    });\n\n    describe('Render', function() {\n        let model;\n\n        beforeEach(function() {\n            let commits = new RB.DiffCommitCollection([\n                {\n                    id: 1,\n                    commit_id: 'r1',\n                    parent_id: 'r0',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 1',\n                },\n                {\n                    id: 2,\n                    commit_id: 'r2',\n                    parent_id: 'r1',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 2',\n                },\n            ], {parse: true});\n\n            model = new RB.DiffCommitList({\n                commits,\n                historyDiff: new RB.CommitHistoryDiffEntryCollection(),\n                isInterdiff: false,\n                baseCommitID: null,\n                tipCommitID: null,\n            });\n        });\n\n        it('Without expand/collapse column', function() {\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: false,\n                rowOptions: [\n                    {values: ['Commit message 1', 'Example Author']},\n                    {values: ['Commit message 2', 'Example Author']},\n                ],\n            });\n        });\n\n        it('With expand/collapse column', function() {\n            model.get('commits').models[0].set({\n                commitMessage: 'Long commit message\\n\\n' +\n                               'This is a long message.\\n',\n                summary: 'Long commit message',\n            });\n\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: false,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('Updates when collection reset', function() {\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            let $table = $container.find('table');\n\n            let $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: false,\n                rowOptions: [\n                    {values: ['Commit message 1', 'Example Author']},\n                    {values: ['Commit message 2', 'Example Author']},\n                ],\n            });\n\n            model.get('commits').reset([\n                {\n                    commit_id: 'r4',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 4\\n\\nIt is very long',\n                },\n            ], {parse: true});\n\n            $table = $container.find('table');\n\n            $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Commit message 4', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('Interdiff', function() {\n            model.get('historyDiff').reset([\n                {\n                    entry_type: RB.CommitHistoryDiffEntry.REMOVED,\n                    old_commit_id: 1,\n                },\n                {\n                    entry_type: RB.CommitHistoryDiffEntry.ADDED,\n                    new_commit_id: 2,\n                }\n            ], {parse: true});\n\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(3);\n            expect($cols.eq(0).text().trim()).toEqual('');\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: false,\n                haveHistory: true,\n                rowOptions: [\n                    {\n                        historySymbol: '-',\n                        values: ['Commit message 1', 'Example Author'],\n                    },\n                    {\n                        historySymbol: '+',\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('With Inter-Commit Diff Controls', function() {\n            view = new RB.DiffCommitListView({\n                el: $container,\n                model: model,\n                showInterCommitDiffControls: true,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(4);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('First'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Last'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(3).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveInterCommitDiffControls: true,\n                rowOptions: [\n                    {\n                        baseSelected: true,\n                        values: ['Commit message 1', 'Example Author'],\n                    },\n                    {\n                        tipSelected: true,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('With Inter-Commit Diff and Expand/Collapse Controls', function() {\n             model.get('commits').get(1).set({\n                commitMessage: 'Long commit message\\n' +\n                               '\\nThis is a long message.\\n',\n                summary: 'Long commit message',\n            });\n\n            view = new RB.DiffCommitListView({\n                el: $container,\n                model: model,\n                showInterCommitDiffControls: true,\n            });\n\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(4);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('First'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Last'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(3).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                haveInterCommitDiffControls: true,\n                rowOptions: [\n                    {\n                        baseSelected: true,\n                        haveExpandCollapse: true,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        tipSelected: true,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('With base and tip commit IDs set', function() {\n            const commits = model.get('commits');\n\n            commits.add([\n                {\n                    id: 3,\n                    commit_id: 'r3',\n                    parent_id: 'r2',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 3',\n\n                },\n                {\n                    id: 4,\n                    commit_id: 'r4',\n                    parent_id: 'r3',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 4',\n                },\n            ], {parse: true});\n\n            model.set({\n                'baseCommitID': commits.findWhere({commitID: 'r2'}).id,\n                'tipCommitID': commits.findWhere({commitID: 'r3'}).id,\n            });\n\n            view = new RB.DiffCommitListView({\n                el: $container,\n                model: model,\n                showInterCommitDiffControls: true,\n            });\n\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(4);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('First'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Last'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(3).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveInterCommitDiffControls: true,\n                rowOptions: [\n                    {\n                        tipDisabled: true,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        tipDisabled: true,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                    {\n                        baseSelected: true,\n                        tipSelected: true,\n                        values: ['Commit message 3', 'Example Author'],\n\n                    },\n                    {\n                        baseDisabled: true,\n                        values: ['Commit message 4', 'Example Author'],\n                    },\n                ],\n            });\n        });\n    });\n\n    describe('Event handlers', function() {\n        let model;\n\n        beforeEach(function() {\n            let commits = new RB.DiffCommitCollection([\n                {\n                    id: 1,\n                    commit_id: 'r1',\n                    parent_id: 'r0',\n                    author_name: 'Example Author',\n                    commit_message: 'Long commit message\\n\\n' +\n                                    'This is a long message.\\n',\n                },\n                {\n                    id: 2,\n                    commit_id: 'r2',\n                    parent_id: 'r1',\n                    author_name: 'Example Author',\n                    commit_message: 'Super long\\n\\nSo very long.',\n                },\n            ], {parse: true});\n\n            model = new RB.DiffCommitList({\n                commits,\n                isInterdiff: false,\n            });\n        });\n\n        it('Expand/collapse', function() {\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n\n            const $links = $table.find('a');\n\n            // Expand first row.\n            $links.eq(0).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: true,\n                        values: [\n                            'Long commit message\\n\\nThis is a long message.',\n                            'Example Author',\n                        ],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n\n            // Collapse first row.\n            $links.eq(0).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        iconClass: 'fa-plus',\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        iconClass: 'fa-plus',\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n\n            // Expand second row.\n            $links.eq(1).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: true,\n                        values: [\n                            'Super long\\n\\nSo very long.',\n                            'Example Author',\n                        ],\n                    },\n                ],\n            });\n\n            // Collapse second row.\n            $links.eq(1).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('Select base/tip', function() {\n            model.get('commits').add([\n                {\n                    id: 3,\n                    commit_id: 'r3',\n                    parent_id: 'r2',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 3',\n\n                },\n                {\n                    id: 4,\n                    commit_id: 'r4',\n                    parent_id: 'r3',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 4',\n                },\n            ], {parse: true});\n\n            view = new RB.DiffCommitListView({\n                el: $container,\n                showInterCommitDiffControls: true,\n                model: model,\n            });\n            view.render();\n\n            const $baseSelectors = $container.find('.base-commit-selector');\n            const $tipSelectors = $container.find('.tip-commit-selector');\n\n            expect($baseSelectors.length).toEqual(4);\n            expect($tipSelectors.length).toEqual(4);\n\n            // Select the interval (r4, r4].\n            $baseSelectors.eq(3).click();\n\n            expect($baseSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(1).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(3).prop('disabled')).toEqual(false);\n\n            expect($tipSelectors.eq(0).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(1).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(3).prop('disabled')).toEqual(false);\n\n            expect(model.get('baseCommitID')).toEqual(3);\n            expect(model.get('tipCommitID')).toEqual(null);\n\n            // Select the interval (r1, r4].\n            $baseSelectors.eq(0).click();\n\n            for (let i = 0; i < 4; i++) {\n                expect($baseSelectors.eq(i).prop('disabled')).toEqual(false);\n                expect($tipSelectors.eq(i).prop('disabled')).toEqual(false);\n            }\n\n            expect(model.get('baseCommitID')).toEqual(null);\n            expect(model.get('tipCommitID')).toEqual(null);\n\n            // Select the interval (r1, r1].\n            $tipSelectors.eq(0).click();\n\n            expect($baseSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(1).prop('disabled')).toEqual(true);\n            expect($baseSelectors.eq(2).prop('disabled')).toEqual(true);\n            expect($baseSelectors.eq(3).prop('disabled')).toEqual(true);\n\n            expect($tipSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(1).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(3).prop('disabled')).toEqual(false);\n\n            expect(model.get('baseCommitID')).toEqual(null);\n            expect(model.get('tipCommitID')).toEqual(1);\n\n            // Select the interval (r3, r3].\n            $tipSelectors.eq(2).click();\n            $baseSelectors.eq(2).click();\n\n            expect($baseSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(1).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(3).prop('disabled')).toEqual(true);\n\n            expect($tipSelectors.eq(0).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(1).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(false);\n\n            expect(model.get('baseCommitID')).toEqual(2);\n            expect(model.get('tipCommitID')).toEqual(3);\n        });\n    });\n});\n"]}