{"version":3,"sources":["extraDataTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,qBAAN,EAA6B,YAAW;AACpC,QAAI,cAAJ;;AAEA,eAAW,YAAW;AAClB,YAAM,WAAW,SAAS,KAAT,CAAe,MAAf,CAAsB,EAAE,QAAF,CAAW;AAC9C,oBAD8C,sBACnC;AACP,uBAAO;AACH,+BAAW;AADR,iBAAP;AAGH,aAL6C;AAO9C,sBAP8C,wBAOjC;AACT,qBAAK,eAAL;AACH;AAT6C,SAAX,EAUpC,GAAG,cAViC,CAAtB,CAAjB;;AAYA,gBAAQ,IAAI,QAAJ,EAAR;AACH,KAdD;;AAgBA,OAAG,qBAAH,EAA0B,YAAW;AACjC,YAAM,YAAY;AACd,sBAAU,kBAAW,CAAE,CADT;AAEd,gCAAoB,2BAAW,CAAE;AAFnB,SAAlB;;AAKA,cAAM,SAAN,EAAiB,QAAjB;AACA,cAAM,SAAN,EAAiB,kBAAjB;;AAEA,cAAM,EAAN,CAAS,QAAT,EAAmB,UAAU,MAA7B;AACA,cAAM,EAAN,CAAS,kBAAT,EAA6B,UAAU,kBAAV,CAA7B;;AAEA,cAAM,YAAN,CAAmB,KAAnB,EAA0B,CAA1B;;AAEA,eAAO,UAAU,MAAjB,EAAyB,gBAAzB;AACA,eAAO,UAAU,kBAAV,CAAP,EAAsC,gBAAtC;AACH,KAhBD;;AAkBA,OAAG,oBAAH,EAAyB,YAAW;AAChC,YAAM,eAAe,MAAM,UAAN,CAAiB,SAAtC;;AAEA,eAAO,MAAM,SAAN,CAAgB,UAAvB,EAAmC,IAAnC,CAAwC,YAAxC;;AAEA,cAAM,GAAN,CAAU;AACN,uBAAW;AACP,qBAAK;AADE;AADL,SAAV;;AAMA,eAAO,MAAM,UAAN,CAAiB,SAAxB,EAAmC,OAAnC,CAA2C,EAAC,KAAK,CAAN,EAA3C;AACA,eAAO,MAAM,SAAN,CAAgB,UAAvB,EAAmC,OAAnC,CAA2C,EAAC,KAAK,CAAN,EAA3C;;AAEA,eAAO,MAAM,SAAN,CAAgB,UAAvB,EAAmC,GAAnC,CAAuC,IAAvC,CAA4C,YAA5C;AACA,eAAO,MAAM,UAAN,CAAiB,SAAxB,EAAmC,GAAnC,CAAuC,IAAvC,CAA4C,YAA5C;;AAEA,eAAO,MAAM,SAAN,CAAgB,UAAvB,EAAmC,IAAnC,CAAwC,MAAM,UAAN,CAAiB,SAAzD;AACH,KAlBD;AAmBH,CAxDD","file":"extraDataTests.js","sourcesContent":["suite('rb/models/ExtraData', function() {\n    let model;\n\n    beforeEach(function() {\n        const Resource = Backbone.Model.extend(_.defaults({\n            defaults() {\n                return {\n                    extraData: {},\n                };\n            },\n\n            initialize() {\n                this._setupExtraData();\n            },\n        }, RB.ExtraDataMixin));\n\n        model = new Resource();\n    });\n\n    it('change events fired', function() {\n        const callbacks = {\n            'change': function() {},\n            'change:extraData': function() {},\n        };\n\n        spyOn(callbacks, 'change');\n        spyOn(callbacks, 'change:extraData');\n\n        model.on('change', callbacks.change);\n        model.on('change:extraData', callbacks['change:extraData']);\n\n        model.setExtraData('foo', 1);\n\n        expect(callbacks.change).toHaveBeenCalled();\n        expect(callbacks['change:extraData']).toHaveBeenCalled();\n    });\n\n    it('attributes updated', function() {\n        const oldExtraData = model.attributes.extraData;\n\n        expect(model.extraData.attributes).toBe(oldExtraData);\n\n        model.set({\n            extraData: {\n                foo: 1,\n            },\n        });\n\n        expect(model.attributes.extraData).toEqual({foo: 1});\n        expect(model.extraData.attributes).toEqual({foo: 1});\n\n        expect(model.extraData.attributes).not.toBe(oldExtraData);\n        expect(model.attributes.extraData).not.toBe(oldExtraData);\n\n        expect(model.extraData.attributes).toBe(model.attributes.extraData);\n    });\n});\n"]}