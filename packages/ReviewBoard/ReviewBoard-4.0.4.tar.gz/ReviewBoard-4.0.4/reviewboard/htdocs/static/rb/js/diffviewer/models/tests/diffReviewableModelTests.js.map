{"version":3,"sources":["diffReviewableModelTests.es6.js"],"names":[],"mappings":"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","file":"diffReviewableModelTests.js","sourcesContent":["suite('rb/diffviewer/models/DiffReviewable', function() {\n    let callbacks;\n    let reviewRequest;\n\n    beforeEach(function() {\n        callbacks = {\n            success: function() {},\n            error: function() {},\n            complete: function() {},\n        };\n\n        reviewRequest = new RB.ReviewRequest({\n            reviewURL: '/r/1/',\n        });\n\n        spyOn(callbacks, 'success');\n        spyOn(callbacks, 'error');\n        spyOn(callbacks, 'complete');\n    });\n\n    describe('getRenderedDiff', function() {\n        it('Without interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?index=4&' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiff(callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3/?index=4&' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiff(callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With base FileDiff', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                baseFileDiffID: 1,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?base-filediff-id=1&index=4&' +\n                    TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiff(callbacks);\n\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n    });\n\n    describe('getRenderedDiffFragment', function() {\n        it('Without interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe('/r/1/diff/2/fragment/3/chunk/4/');\n                expect(request.data.index).toBe(5);\n                expect(request.data['lines-of-context']).toBe(6);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            }, callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                interFileDiffID: 4,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe('/r/1/diff/2-3/fragment/3-4/chunk/4/');\n                expect(request.data.index).toBe(5);\n                expect(request.data['lines-of-context']).toBe(6);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            }, callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n    });\n});\n"]}