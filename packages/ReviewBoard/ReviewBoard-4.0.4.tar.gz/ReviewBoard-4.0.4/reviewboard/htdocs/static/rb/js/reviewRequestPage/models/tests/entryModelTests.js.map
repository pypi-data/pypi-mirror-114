{"version":3,"sources":["entryModelTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,mCAAN,EAA2C,YAAW;AAClD,QAAI,4BAAJ;AACA,QAAI,cAAJ;;AAEA,eAAW,YAAW;AAClB,8BAAsB,IAAI,GAAG,mBAAP,CAA2B;AAC7C,2BAAe,IAAI,GAAG,aAAP;AAD8B,SAA3B,CAAtB;;AAIA,gBAAQ,IAAI,GAAG,iBAAH,CAAqB,KAAzB,CAA+B;AACnC,iCAAqB,mBADc;AAEnC,gBAAI,KAF+B;AAGnC,oBAAQ,WAH2B;AAInC,4BAAgB,sBAJmB;AAKnC,8BAAkB,sBALiB;AAMnC,yBAAa;AANsB,SAA/B,EAOL;AACC,mBAAO;AADR,SAPK,CAAR;AAUH,KAfD;;AAiBA,OAAG,OAAH,EAAY,YAAW;AACnB,eAAO,MAAM,EAAb,EAAiB,IAAjB,CAAsB,KAAtB;AACA,eAAO,MAAM,GAAN,CAAU,qBAAV,CAAP,EAAyC,IAAzC,CAA8C,mBAA9C;AACA,eAAO,MAAM,GAAN,CAAU,gBAAV,CAAP,EACK,OADL,CACa,IAAI,IAAJ,CAAS,KAAK,GAAL,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CAAT,CADb;AAEA,eAAO,MAAM,GAAN,CAAU,kBAAV,CAAP,EACK,OADL,CACa,IAAI,IAAJ,CAAS,KAAK,GAAL,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,CAA9B,CAAT,CADb;AAEA,eAAO,MAAM,GAAN,CAAU,QAAV,CAAP,EAA4B,IAA5B,CAAiC,WAAjC;AACH,KARD;;AAUA,aAAS,WAAT,EAAsB,YAAW;AAC7B,WAAG,iCAAH,EAAsC,YAAW;AAC7C,gBAAM,WAAW;AACb,kCAAkB;AADL,aAAjB;;AAIA,mBAAO,MAAM,SAAN,CAAgB,QAAhB,CAAP,EAAkC,IAAlC,CAAuC,IAAvC;AACH,SAND;;AAQA,WAAG,iCAAH,EAAsC,YAAW;AAC7C,gBAAM,WAAW;AACb,kCAAkB;AADL,aAAjB;;AAIA,mBAAO,MAAM,SAAN,CAAgB,QAAhB,CAAP,EAAkC,IAAlC,CAAuC,KAAvC;AACH,SAND;;AAQA,WAAG,mBAAH,EAAwB,YAAW;AAC/B,gBAAM,WAAW;AACb,sBAAM,UADO;AAEb,kCAAkB;AAFL,aAAjB;;AAKA,mBAAO,MAAM,SAAN,CAAgB,QAAhB,CAAP,EAAkC,IAAlC,CAAuC,IAAvC;AACH,SAPD;;AASA,WAAG,oCAAH,EAAyC,YAAW;AAChD,kBAAM,GAAN,CAAU,MAAV,EAAkB,UAAlB;;AAEA,gBAAM,WAAW;AACb,sBAAM,UADO;AAEb,kCAAkB;AAFL,aAAjB;;AAKA,mBAAO,MAAM,SAAN,CAAgB,QAAhB,CAAP,EAAkC,IAAlC,CAAuC,KAAvC;AACH,SATD;AAUH,KApCD;AAqCH,CApED","file":"entryModelTests.js","sourcesContent":["suite('rb/reviewRequestPage/models/Entry', function() {\n    let reviewRequestEditor;\n    let entry;\n\n    beforeEach(function() {\n        reviewRequestEditor = new RB.ReviewRequestEditor({\n            reviewRequest: new RB.ReviewRequest(),\n        });\n\n        entry = new RB.ReviewRequestPage.Entry({\n            reviewRequestEditor: reviewRequestEditor,\n            id: '123',\n            typeID: 'some_type',\n            addedTimestamp: '2017-08-18T13:40:25Z',\n            updatedTimestamp: '2017-08-18T16:20:00Z',\n            ignoredAttr: 'ignored',\n        }, {\n            parse: true,\n        });\n    });\n\n    it('parse', function() {\n        expect(entry.id).toBe('123');\n        expect(entry.get('reviewRequestEditor')).toBe(reviewRequestEditor);\n        expect(entry.get('addedTimestamp'))\n            .toEqual(new Date(Date.UTC(2017, 7, 18, 13, 40, 25)));\n        expect(entry.get('updatedTimestamp'))\n            .toEqual(new Date(Date.UTC(2017, 7, 18, 16, 20, 0)));\n        expect(entry.get('typeID')).toBe('some_type');\n    });\n\n    describe('isUpdated', function() {\n        it('With newer updateTimestamp only', function() {\n            const metadata = {\n                updatedTimestamp: '2017-08-20T23:10:12Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(true);\n        });\n\n        it('With older updateTimestamp only', function() {\n            const metadata = {\n                updatedTimestamp: '2017-08-18T12:10:12Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(false);\n        });\n\n        it('With changed etag', function() {\n            const metadata = {\n                etag: 'new-etag',\n                updatedTimestamp: '2017-08-18T16:20:00Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(true);\n        });\n\n        it('With same updateTimestamp and etag', function() {\n            entry.set('etag', 'old-etag');\n\n            const metadata = {\n                etag: 'old-etag',\n                updatedTimestamp: '2017-08-18T16:20:00Z',\n            };\n\n            expect(entry.isUpdated(metadata)).toBe(false);\n        });\n    });\n});\n"]}