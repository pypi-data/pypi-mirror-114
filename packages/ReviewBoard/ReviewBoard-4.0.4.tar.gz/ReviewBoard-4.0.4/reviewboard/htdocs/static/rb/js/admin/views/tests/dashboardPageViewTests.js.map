{"version":3,"sources":["dashboardPageViewTests.es6.js"],"names":[],"mappings":"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","file":"dashboardPageViewTests.js","sourcesContent":["suite('rb/admin/views/DashboardPageView', function() {\n    const pageTemplate = dedent`\n        <div>\n         <div id=\"admin-dashboard\" style=\"visibility: hidden\">\n          <div class=\"rb-c-admin-widgets\">\n           <div class=\"rb-c-admin-widgets__sizer-gutter\"></div>\n           <div class=\"rb-c-admin-widgets__sizer-column\"></div>\n           <div class=\"rb-c-admin-widgets__main\"></div>\n          </div>\n         </div>\n        </div>\n    `;\n\n    const widgetTemplate = _.template(dedent`\n        <div class=\"rb-c-admin-widget <%- cssClasses %>\" id=\"<%- domID %>\"\n         <header class=\"rb-c-admin-widget__header\">\n          <h1><%- name %></h1>\n          <ul class=\"rb-c-admin-widget__actions\"></ul>\n         </header>\n         <div class=\"rb-c-admin-widget__content\"></div>\n         <footer class=\"rb-c-admin-widget__footer\">\n          <ul class=\"rb-c-admin-widget__actions\"></ul>\n         </footer>\n        </div>\n    `);\n\n    let page;\n    let pageView;\n\n    beforeEach(function() {\n        page = new RB.Admin.DashboardPage();\n        pageView = new RB.Admin.DashboardPageView({\n            el: $(pageTemplate).appendTo($testsScratch),\n            model: page,\n        });\n    });\n\n    describe('Widgets', function() {\n        it('Loading', function() {\n            const $main = pageView.$('.rb-c-admin-widgets__main');\n\n            $main.append(\n                widgetTemplate({\n                    domID: 'widget-1',\n                    name: 'Widget 1',\n                    cssClasses: '-is-small',\n                }),\n                widgetTemplate({\n                    domID: 'widget-2',\n                    name: 'Widget 2',\n                    cssClasses: '',\n                }),\n                widgetTemplate({\n                    domID: 'widget-3',\n                    name: 'Widget 3',\n                    cssClasses: '-is-large',\n                }),\n                widgetTemplate({\n                    domID: 'widget-4',\n                    name: 'Widget 4',\n                    cssClasses: '-is-small',\n                }),\n                widgetTemplate({\n                    domID: 'widget-5',\n                    name: 'Widget 5',\n                    cssClasses: '',\n                }),\n                widgetTemplate({\n                    domID: 'widget-6',\n                    name: 'Widget 6',\n                    cssClasses: '-is-full-size',\n                })\n            );\n\n            page.set('widgetsData', [\n                {\n                    id: 'widget-1',\n                    domID: 'widget-1',\n                    viewClass: 'RB.Admin.WidgetView',\n                    modelClass: 'RB.Admin.Widget',\n                },\n                {\n                    id: 'widget-2',\n                    domID: 'widget-2',\n                    viewClass: 'RB.Admin.WidgetView',\n                    modelClass: 'RB.Admin.Widget',\n                },\n                {\n                    id: 'widget-3',\n                    domID: 'widget-3',\n                    viewClass: 'RB.Admin.WidgetView',\n                    modelClass: 'RB.Admin.Widget',\n                },\n                {\n                    id: 'widget-4',\n                    domID: 'widget-4',\n                    viewClass: 'RB.Admin.WidgetView',\n                    modelClass: 'RB.Admin.Widget',\n                },\n                {\n                    id: 'widget-5',\n                    domID: 'widget-5',\n                    viewClass: 'RB.Admin.WidgetView',\n                    modelClass: 'RB.Admin.Widget',\n                },\n                {\n                    id: 'widget-6',\n                    domID: 'widget-6',\n                    viewClass: 'RB.Admin.WidgetView',\n                    modelClass: 'RB.Admin.Widget',\n                },\n            ]);\n\n            pageView.render();\n\n            const $widgets = pageView._$widgets;\n            expect($widgets.length).toBe(6);\n\n            expect($widgets[0].id).toBe('widget-1');\n            expect($widgets[1].id).toBe('widget-2');\n            expect($widgets[2].id).toBe('widget-3');\n            expect($widgets[3].id).toBe('widget-4');\n            expect($widgets[4].id).toBe('widget-5');\n            expect($widgets[5].id).toBe('widget-6');\n\n            expect($widgets[0]).toHaveClass('js-masonry-item');\n            expect($widgets[1]).toHaveClass('js-masonry-item');\n            expect($widgets[2]).toHaveClass('js-masonry-item');\n            expect($widgets[3]).toHaveClass('js-masonry-item');\n            expect($widgets[4]).toHaveClass('js-masonry-item');\n            expect($widgets[5]).toHaveClass('js-masonry-item');\n\n            const items = pageView._masonry.items;\n            expect(items.length).toBe(6);\n            expect(items[0].element).toBe($widgets[5]);\n            expect(items[1].element).toBe($widgets[2]);\n            expect(items[2].element).toBe($widgets[1]);\n            expect(items[3].element).toBe($widgets[4]);\n            expect(items[4].element).toBe($widgets[0]);\n            expect(items[5].element).toBe($widgets[3]);\n\n            expect(pageView.$el.css('visibility')).toBe('visible');\n        });\n\n        describe('sizeChanged event', function() {\n            let widgetView;\n\n            beforeEach(function() {\n                const $main = pageView.$('.rb-c-admin-widgets__main');\n\n                $main.append(widgetTemplate({\n                    domID: 'widget-1',\n                    name: 'Widget 1',\n                    cssClasses: '',\n                }));\n\n                page.set('widgetsData', [{\n                    id: 'widget-1',\n                    domID: 'widget-1',\n                    viewClass: 'RB.Admin.WidgetView',\n                    modelClass: 'RB.Admin.Widget',\n                }]);\n\n                pageView.render();\n\n                widgetView = pageView._widgetViews['widget-1'];\n                expect(widgetView).not.toBeUndefined();\n\n                spyOn(pageView._masonry, 'layout');\n            });\n\n            it('Causes re-layout on element size change', function () {\n                const $widget = widgetView.$el;\n\n                $widget.width($widget.width() + 100);\n                widgetView.trigger('sizeChanged');\n\n                expect(pageView._masonry.layout).toHaveBeenCalled();\n            });\n\n            it('Ignored when element size does not change', function () {\n                pageView._widgetWidths['widget-1'] = widgetView.$el.width();\n                widgetView.trigger('sizeChanged');\n\n                expect(pageView._masonry.layout).not.toHaveBeenCalled();\n            });\n        });\n    });\n});\n"]}