{"version":3,"sources":["userSessionModelTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,uBAAN,EAA+B,YAAW;AACtC,aAAS,QAAT,EAAmB,YAAW;AAC1B,WAAG,iBAAH,EAAsB,YAAW;AAC7B,eAAG,WAAH,CAAe,QAAf,GAA0B,IAA1B;AACA,gBAAM,UAAU,GAAG,WAAH,CAAe,MAAf,CAAsB;AAClC,0BAAU;AADwB,aAAtB,CAAhB;;AAIA,mBAAO,OAAP,EAAgB,IAAhB,CAAqB,GAAG,WAAH,CAAe,QAApC;AACH,SAPD;;AASA,WAAG,sBAAH,EAA2B,YAAW;AAClC,eAAG,WAAH,CAAe,QAAf,GAA0B,IAA1B;AACA,eAAG,WAAH,CAAe,MAAf,CAAsB;AAClB,0BAAU;AADQ,aAAtB;;AAIA,mBAAO,QAAQ,MAAf,EAAuB,gBAAvB;AACA,mBAAO,QAAQ,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAP,EAA2C,UAA3C;;AAEA,mBAAO;AAAA,uBAAM,GAAG,WAAH,CAAe,MAAf,CAAsB,EAAE,UAAU,KAAZ,EAAtB,CAAN;AAAA,aAAP,EAAyD,OAAzD;;AAEA,mBAAO,QAAQ,MAAf,EAAuB,gBAAvB;AACA,mBAAO,QAAQ,MAAR,CAAe,KAAf,CAAqB,OAArB,CAA6B,CAA7B,EAAgC,CAAhC,CAAP,EAA2C,SAA3C;AACH,SAbD;AAcH,KAxBD;;AA0BA,aAAS,YAAT,EAAuB,YAAW;AAC9B,YAAI,gBAAJ;;AAEA,mBAAW,YAAW;AAClB,sBAAU,GAAG,WAAH,CAAe,QAAzB;AACH,SAFD;;AAIA,iBAAS,0BAAT,EAAqC,YAAW;AAC5C,qBAAS,mBAAT,EAA8B,YAAW;AACrC,mBAAG,aAAH,EAAkB,YAAW;AACzB,0BAAM,CAAN,EAAS,QAAT,EAAmB,GAAnB,CAAuB,WAAvB,CAAmC,MAAnC;;AAEA,uBAAG,WAAH,CAAe,QAAf,GAA0B,IAA1B;AACA,8BAAU,GAAG,WAAH,CAAe,MAAf,CAAsB;AAC5B,kCAAU;AADkB,qBAAtB,CAAV;;AAIA,2BAAO,EAAE,MAAT,EAAiB,oBAAjB,CAAsC,SAAtC;AACA,2BAAO,QAAQ,GAAR,CAAY,0BAAZ,CAAP,EAAgD,IAAhD,CAAqD,IAArD;AACH,iBAVD;;AAYA,mBAAG,cAAH,EAAmB,YAAW;AAC1B,0BAAM,CAAN,EAAS,QAAT,EAAmB,GAAnB,CAAuB,WAAvB,CAAmC,OAAnC;;AAEA,uBAAG,WAAH,CAAe,QAAf,GAA0B,IAA1B;AACA,8BAAU,GAAG,WAAH,CAAe,MAAf,CAAsB;AAC5B,kCAAU;AADkB,qBAAtB,CAAV;;AAIA,2BAAO,EAAE,MAAT,EAAiB,oBAAjB,CAAsC,SAAtC;AACA,2BAAO,QAAQ,GAAR,CAAY,0BAAZ,CAAP,EAAgD,IAAhD,CAAqD,KAArD;AACH,iBAVD;AAWH,aAxBD;;AA0BA,qBAAS,aAAT,EAAwB,YAAW;AAC/B,2BAAW,YAAW;AAClB,0BAAM,CAAN,EAAS,QAAT;AACH,iBAFD;;AAIA,mBAAG,WAAH,EAAgB,YAAW;AACvB,4BAAQ,UAAR,CAAmB,wBAAnB,GAA8C,KAA9C;AACA,4BAAQ,GAAR,CAAY,0BAAZ,EAAwC,IAAxC;;AAEA,2BAAO,EAAE,MAAT,EAAiB,oBAAjB,CAAsC,SAAtC,EAAiD,MAAjD,EAAyD;AACrD,8BAAM;AAD+C,qBAAzD;AAGH,iBAPD;;AASA,mBAAG,YAAH,EAAiB,YAAW;AACxB,4BAAQ,UAAR,CAAmB,wBAAnB,GAA8C,IAA9C;AACA,4BAAQ,GAAR,CAAY,0BAAZ,EAAwC,KAAxC;;AAEA,2BAAO,EAAE,MAAT,EAAiB,oBAAjB,CAAsC,SAAtC,EAAiD,OAAjD,EAA0D;AACtD,8BAAM;AADgD,qBAA1D;AAGH,iBAPD;AAQH,aAtBD;AAuBH,SAlDD;AAmDH,KA1DD;AA2DH,CAtFD","file":"userSessionModelTests.js","sourcesContent":["suite('rb/models/UserSession', function() {\n    describe('create', function() {\n        it('Instance is set', function() {\n            RB.UserSession.instance = null;\n            const session = RB.UserSession.create({\n                username: 'testuser'\n            });\n\n            expect(session).toBe(RB.UserSession.instance);\n        });\n\n        it('Second attempt fails', function() {\n            RB.UserSession.instance = null;\n            RB.UserSession.create({\n                username: 'testuser'\n            });\n\n            expect(console.assert).toHaveBeenCalled();\n            expect(console.assert.calls.argsFor(0)[0]).toBeTruthy();\n\n            expect(() => RB.UserSession.create({ username: 'foo' })).toThrow();\n\n            expect(console.assert).toHaveBeenCalled();\n            expect(console.assert.calls.argsFor(1)[0]).toBeFalsy();\n        });\n    });\n\n    describe('Attributes', function() {\n        let session;\n\n        beforeEach(function() {\n            session = RB.UserSession.instance;\n        });\n\n        describe('diffsShowExtraWhitespace', function() {\n            describe('Loads from cookie', function() {\n                it('When \"true\"', function() {\n                    spyOn($, 'cookie').and.returnValue('true');\n\n                    RB.UserSession.instance = null;\n                    session = RB.UserSession.create({\n                        username: 'testuser'\n                    });\n\n                    expect($.cookie).toHaveBeenCalledWith('show_ew');\n                    expect(session.get('diffsShowExtraWhitespace')).toBe(true);\n                });\n\n                it('When \"false\"', function() {\n                    spyOn($, 'cookie').and.returnValue('false');\n\n                    RB.UserSession.instance = null;\n                    session = RB.UserSession.create({\n                        username: 'testuser'\n                    });\n\n                    expect($.cookie).toHaveBeenCalledWith('show_ew');\n                    expect(session.get('diffsShowExtraWhitespace')).toBe(false);\n                });\n            });\n\n            describe('Sets cookie', function() {\n                beforeEach(function() {\n                    spyOn($, 'cookie');\n                });\n\n                it('When true', function() {\n                    session.attributes.diffsShowExtraWhitespace = false;\n                    session.set('diffsShowExtraWhitespace', true);\n\n                    expect($.cookie).toHaveBeenCalledWith('show_ew', 'true', {\n                        path: SITE_ROOT\n                    });\n                });\n\n                it('When false', function() {\n                    session.attributes.diffsShowExtraWhitespace = true;\n                    session.set('diffsShowExtraWhitespace', false);\n\n                    expect($.cookie).toHaveBeenCalledWith('show_ew', 'false', {\n                        path: SITE_ROOT\n                    });\n                });\n            });\n        });\n    });\n});\n"]}