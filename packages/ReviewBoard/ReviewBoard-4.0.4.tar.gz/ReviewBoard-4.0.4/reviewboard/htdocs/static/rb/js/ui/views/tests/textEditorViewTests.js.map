{"version":3,"sources":["textEditorViewTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,4BAAN,EAAoC,YAAW;AAC3C,QAAI,aAAJ;;AAEA,eAAW,YAAW;AAClB,WAAG,WAAH,CAAe,MAAf;AACH,KAFD;;AAIA,cAAU,YAAW;AACjB,WAAG,WAAH,CAAe,QAAf,GAA0B,IAA1B;AACH,KAFD;;AAIA,aAAS,cAAT,EAAyB,YAAW;AAChC,WAAG,cAAH,EAAmB,YAAW;AAC1B,mBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,sBAAM;AADmB,aAAtB,CAAP;AAGA,iBAAK,MAAL;;AAEA,mBAAO,KAAK,OAAL,EAAP,EAAuB,IAAvB,CAA4B,MAA5B;AACH,SAPD;;AASA,iBAAS,oBAAT,EAA+B,YAAW;AACtC,eAAG,eAAH,EAAoB,YAAW;AAC3B,uBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,8BAAU;AADe,iBAAtB,CAAP;AAGA,qBAAK,MAAL;AACA,qBAAK,IAAL;;AAEA,uBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,KAA3B;AACA,uBAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,uBAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,aAVD;;AAYA,eAAG,aAAH,EAAkB,YAAW;AACzB,uBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,8BAAU;AADe,iBAAtB,CAAP;AAGA,qBAAK,MAAL;AACA,qBAAK,IAAL;;AAEA,uBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACA,uBAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,uBAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,aAVD;AAWH,SAxBD;;AA0BA,iBAAS,kBAAT,EAA6B,YAAW;AACpC,qBAAS,yBAAT,EAAoC,YAAW;AAC3C,2BAAW,YAAW;AAClB,uBAAG,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,oBAA5B,EAAkD,IAAlD;AACH,iBAFD;;AAIA,mBAAG,oBAAH,EAAyB,YAAW;AAChC,2BAAO,IAAI,GAAG,cAAP,EAAP;AACA,yBAAK,MAAL;AACA,yBAAK,IAAL;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBARD;;AAUA,mBAAG,mBAAH,EAAwB,YAAW;AAC/B,2BAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,kCAAU;AADe,qBAAtB,CAAP;AAGA,yBAAK,MAAL;AACA,yBAAK,IAAL;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBAVD;;AAYA,mBAAG,oBAAH,EAAyB,YAAW;AAChC,2BAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,kCAAU;AADe,qBAAtB,CAAP;AAGA,yBAAK,MAAL;AACA,yBAAK,IAAL;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBAVD;AAWH,aAtCD;;AAwCA,qBAAS,0BAAT,EAAqC,YAAW;AAC5C,2BAAW,YAAW;AAClB,uBAAG,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,oBAA5B,EAAkD,KAAlD;AACH,iBAFD;;AAIA,mBAAG,oBAAH,EAAyB,YAAW;AAChC,2BAAO,IAAI,GAAG,cAAP,EAAP;AACA,yBAAK,MAAL;AACA,yBAAK,IAAL;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,KAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBARD;;AAUA,mBAAG,mBAAH,EAAwB,YAAW;AAC/B,2BAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,kCAAU;AADe,qBAAtB,CAAP;AAGA,yBAAK,MAAL;AACA,yBAAK,IAAL;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBAVD;;AAYA,mBAAG,oBAAH,EAAyB,YAAW;AAChC,2BAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,kCAAU;AADe,qBAAtB,CAAP;AAGA,yBAAK,MAAL;AACA,yBAAK,IAAL;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,KAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBAVD;AAWH,aAtCD;AAuCH,SAhFD;AAiFH,KArHD;;AAuHA,aAAS,YAAT,EAAuB,YAAW;AAC9B,iBAAS,kBAAT,EAA6B,YAAW;AACpC,gBAAI,gBAAJ;;AAEA,uBAAW,YAAW;AAClB,0BAAU,IAAI,SAAS,KAAb,CAAmB;AACzB,8BAAU;AADe,iBAAnB,CAAV;;AAIA,uBAAO,IAAI,GAAG,cAAP,EAAP;AACH,aAND;;AAQA,eAAG,mBAAH,EAAwB,YAAW;AAC/B,qBAAK,gBAAL,CAAsB,OAAtB,EAA+B,UAA/B;AACA,uBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,KAA3B;;AAEA,wBAAQ,GAAR,CAAY,UAAZ,EAAwB,IAAxB;AACA,uBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACH,aAND;;AAQA,qBAAS,wBAAT,EAAmC,YAAW;AAC1C,mBAAG,MAAH,EAAW,YAAW;AAClB,4BAAQ,GAAR,CAAY,UAAZ,EAAwB,IAAxB;AACA,yBAAK,gBAAL,CAAsB,OAAtB,EAA+B,UAA/B;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACH,iBALD;;AAOA,mBAAG,OAAH,EAAY,YAAW;AACnB,4BAAQ,GAAR,CAAY,UAAZ,EAAwB,KAAxB;AACA,yBAAK,gBAAL,CAAsB,OAAtB,EAA+B,UAA/B;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,KAA3B;AACH,iBALD;AAMH,aAdD;AAeH,SAlCD;;AAoCA,iBAAS,sBAAT,EAAiC,YAAW;AACxC,gBAAI,kBAAJ;;AAEA,uBAAW,YAAW;AAClB,4BAAY,EAAE,yBAAF,CAAZ;;AAEA,uBAAO,IAAI,GAAG,cAAP,EAAP;AACA,qBAAK,WAAL,CAAiB,KAAjB;AACH,aALD;;AAOA,eAAG,4BAAH,EAAiC,YAAW;AACxC,qBAAK,oBAAL,CAA0B,SAA1B;AACA,uBAAO,UAAU,IAAV,CAAe,SAAf,CAAP,EAAkC,IAAlC,CAAuC,KAAvC;;AAEA,qBAAK,WAAL,CAAiB,IAAjB;AACA,uBAAO,UAAU,IAAV,CAAe,SAAf,CAAP,EAAkC,IAAlC,CAAuC,IAAvC;AACH,aAND;;AAQA,qBAAS,4BAAT,EAAuC,YAAW;AAC9C,mBAAG,SAAH,EAAc,YAAW;AACrB,yBAAK,WAAL,CAAiB,KAAjB;AACA,yBAAK,oBAAL,CAA0B,SAA1B;;AAEA,8BACK,IADL,CACU,SADV,EACqB,IADrB,EAEK,cAFL,CAEoB,QAFpB;;AAIA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACH,iBATD;;AAWA,mBAAG,WAAH,EAAgB,YAAW;AACvB,yBAAK,WAAL,CAAiB,IAAjB;AACA,yBAAK,oBAAL,CAA0B,SAA1B;;AAEA,8BACK,IADL,CACU,SADV,EACqB,KADrB,EAEK,cAFL,CAEoB,QAFpB;;AAIA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,KAA3B;AACH,iBATD;AAUH,aAtBD;;AAwBA,qBAAS,uBAAT,EAAkC,YAAW;AACzC,mBAAG,eAAH,EAAoB,YAAW;AAC3B,yBAAK,WAAL,CAAiB,IAAjB;AACA,yBAAK,oBAAL,CAA0B,SAA1B;;AAEA,2BAAO,UAAU,IAAV,CAAe,SAAf,CAAP,EAAkC,IAAlC,CAAuC,IAAvC;AACH,iBALD;;AAOA,mBAAG,gBAAH,EAAqB,YAAW;AAC5B,yBAAK,WAAL,CAAiB,KAAjB;AACA,yBAAK,oBAAL,CAA0B,SAA1B;;AAEA,2BAAO,UAAU,IAAV,CAAe,SAAf,CAAP,EAAkC,IAAlC,CAAuC,KAAvC;AACH,iBALD;AAMH,aAdD;AAeH,SAzDD;;AA2DA,iBAAS,wBAAT,EAAmC,YAAW;AAC1C,gBAAI,YAAJ;;AAEA,uBAAW,YAAW;AAClB,sBAAM,EAAE,OAAF,CAAN;;AAEA,uBAAO,IAAI,GAAG,cAAP,EAAP;AACA,qBAAK,WAAL,CAAiB,KAAjB;AACH,aALD;;AAOA,qBAAS,oBAAT,EAA+B,YAAW;AACtC,mBAAG,eAAH,EAAoB,YAAW;AAC3B,wBAAI,IAAJ;;AAEA,yBAAK,WAAL,CAAiB,IAAjB;AACA,yBAAK,sBAAL,CAA4B,GAA5B;;AAEA;;;;AAIA,wBAAM,UAAU,IAAI,GAAJ,CAAQ,SAAR,CAAhB;AACA,2BAAO,YAAY,OAAZ,IAAuB,YAAY,EAA1C,EAA8C,IAA9C,CAAmD,IAAnD;AACH,iBAZD;;AAcA,mBAAG,gBAAH,EAAqB,YAAW;AAC5B,yBAAK,sBAAL,CAA4B,GAA5B;;AAEA,2BAAO,IAAI,GAAJ,CAAQ,SAAR,CAAP,EAA2B,IAA3B,CAAgC,MAAhC;AACH,iBAJD;AAKH,aApBD;;AAsBA,qBAAS,8BAAT,EAAyC,YAAW;AAChD,mBAAG,eAAH,EAAoB,YAAW;AAC3B,wBAAI,IAAJ;;AAEA,yBAAK,sBAAL,CAA4B,GAA5B;AACA,2BAAO,IAAI,GAAJ,CAAQ,SAAR,CAAP,EAA2B,IAA3B,CAAgC,MAAhC;;AAEA,yBAAK,WAAL,CAAiB,IAAjB;AACA;;;;AAIA,wBAAM,UAAU,IAAI,GAAJ,CAAQ,SAAR,CAAhB;AACA,2BAAO,YAAY,OAAZ,IAAuB,YAAY,EAA1C,EAA8C,IAA9C,CAAmD,IAAnD;AACH,iBAbD;;AAeA,mBAAG,gBAAH,EAAqB,YAAW;AAC5B,yBAAK,WAAL,CAAiB,IAAjB;AACA,yBAAK,sBAAL,CAA4B,GAA5B;;AAEA;;;;AAIA,wBAAM,UAAU,IAAI,GAAJ,CAAQ,SAAR,CAAhB;AACA,2BAAO,YAAY,OAAZ,IAAuB,YAAY,EAA1C,EAA8C,IAA9C,CAAmD,IAAnD;;AAEA,yBAAK,WAAL,CAAiB,KAAjB;AACA,2BAAO,IAAI,GAAJ,CAAQ,SAAR,CAAP,EAA2B,IAA3B,CAAgC,MAAhC;AACH,iBAbD;AAcH,aA9BD;AA+BH,SA/DD;;AAiEA,iBAAS,aAAT,EAAwB,YAAW;AAC/B,eAAG,uBAAH,EAA4B,YAAW;AACnC,oBAAI,UAAU,KAAd;;AAEA,qBAAK,EAAL,CAAQ,iBAAR,EAA2B,YAAW;AAClC,8BAAU,IAAV;AACH,iBAFD;;AAIA,qBAAK,IAAL;AACA,qBAAK,QAAL,GAAgB,KAAhB;AACA,qBAAK,WAAL,CAAiB,IAAjB;;AAEA,uBAAO,OAAP,EAAgB,IAAhB,CAAqB,IAArB;AACH,aAZD;;AAcA,eAAG,cAAH,EAAmB,YAAW;AAC1B,oBAAI,UAAU,KAAd;;AAEA,qBAAK,EAAL,CAAQ,QAAR,EAAkB,YAAW;AACzB,8BAAU,IAAV;AACH,iBAFD;;AAIA,qBAAK,IAAL;AACA,qBAAK,QAAL,GAAgB,KAAhB;AACA,qBAAK,WAAL,CAAiB,IAAjB;;AAEA,uBAAO,OAAP,EAAgB,IAAhB,CAAqB,IAArB;AACH,aAZD;;AAcA,eAAG,aAAH,EAAkB,YAAW;AACzB,qBAAK,IAAL;AACA,qBAAK,QAAL,GAAgB,KAAhB;AACA,uBAAO,KAAK,OAAL,EAAP,EAAuB,IAAvB,CAA4B,KAA5B;;AAEA,qBAAK,WAAL,CAAiB,IAAjB;AACA,uBAAO,KAAK,OAAL,EAAP,EAAuB,IAAvB,CAA4B,IAA5B;AACH,aAPD;;AASA,qBAAS,kBAAT,EAA6B,YAAW;AACpC,2BAAW,YAAW;AAClB,2BAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,kCAAU;AADe,qBAAtB,CAAP;AAGA,yBAAK,MAAL;AACH,iBALD;;AAOA,mBAAG,UAAH,EAAe,YAAW;AACtB,yBAAK,IAAL;AACA,yBAAK,WAAL,CAAiB,KAAjB;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,KAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBAPD;;AASA,mBAAG,WAAH,EAAgB,YAAW;AACvB,yBAAK,WAAL,CAAiB,KAAjB;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,KAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBAND;AAOH,aAxBD;;AA0BA,qBAAS,kBAAT,EAA6B,YAAW;AACpC,2BAAW,YAAW;AAClB,2BAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,kCAAU;AADe,qBAAtB,CAAP;AAGA,yBAAK,MAAL;AACH,iBALD;;AAOA,mBAAG,UAAH,EAAe,YAAW;AACtB,yBAAK,IAAL;AACA,yBAAK,WAAL,CAAiB,IAAjB;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBAPD;;AASA,mBAAG,WAAH,EAAgB,YAAW;AACvB,yBAAK,WAAL,CAAiB,IAAjB;;AAEA,2BAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,EAA8B,MAArC,EAA6C,IAA7C,CAAkD,CAAlD;AACA,2BAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB,EAAiC,MAAxC,EAAgD,IAAhD,CAAqD,CAArD;AACH,iBAND;AAOH,aAxBD;AAyBH,SAzFD;;AA2FA,iBAAS,SAAT,EAAoB,YAAW;AAC3B,qBAAS,UAAT,EAAqB,YAAW;AAC5B,mBAAG,eAAH,EAAoB,YAAW;AAC3B,2BAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,kCAAU;AADe,qBAAtB,CAAP;AAGA,yBAAK,IAAL;AACA,yBAAK,OAAL,CAAa,MAAb;;AAEA,2BAAO,KAAK,CAAL,CAAO,UAAP,EAAmB,GAAnB,EAAP,EAAiC,IAAjC,CAAsC,MAAtC;AACH,iBARD;;AAUA,mBAAG,aAAH,EAAkB,YAAW;AACzB,2BAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,kCAAU;AADe,qBAAtB,CAAP;AAGA,yBAAK,IAAL;AACA,yBAAK,OAAL,CAAa,MAAb;;AAEA,2BAAO,KAAK,OAAL,CAAa,WAAb,CAAyB,QAAzB,EAAP,EAA4C,IAA5C,CAAiD,MAAjD;AACH,iBARD;AASH,aApBD;;AAsBA,eAAG,WAAH,EAAgB,YAAW;AACvB,uBAAO,IAAI,GAAG,cAAP,EAAP;AACA,qBAAK,OAAL,CAAa,MAAb;;AAEA,uBAAO,KAAK,OAAL,EAAP,EAAuB,IAAvB,CAA4B,MAA5B;AACH,aALD;AAMH,SA7BD;;AA+BA,iBAAS,SAAT,EAAoB,YAAW;AAC3B,eAAG,eAAH,EAAoB,YAAW;AAC3B,uBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,8BAAU;AADe,iBAAtB,CAAP;AAGA,qBAAK,IAAL;AACA,qBAAK,OAAL,CAAa,MAAb;;AAEA,uBAAO,KAAK,OAAL,EAAP,EAAuB,IAAvB,CAA4B,MAA5B;AACH,aARD;;AAUA,eAAG,aAAH,EAAkB,YAAW;AACzB,uBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,8BAAU;AADe,iBAAtB,CAAP;AAGA,qBAAK,IAAL;AACA,qBAAK,OAAL,CAAa,MAAb;;AAEA,uBAAO,KAAK,OAAL,EAAP,EAAuB,IAAvB,CAA4B,MAA5B;AACH,aARD;AASH,SApBD;;AAsBA,iBAAS,YAAT,EAAuB,YAAW;AAC9B,eAAG,eAAH,EAAoB,YAAW;AAC3B,uBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,8BAAU;AADe,iBAAtB,CAAP;AAGA,qBAAK,IAAL;AACA,qBAAK,OAAL,CAAa,MAAb;AACA,qBAAK,UAAL,CAAgB,MAAhB;;AAEA,uBAAO,KAAK,OAAL,EAAP,EAAuB,IAAvB,CAA4B,YAA5B;AACH,aATD;;AAWA,eAAG,aAAH,EAAkB,YAAW;AACzB,uBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,8BAAS;AADgB,iBAAtB,CAAP;AAGA,qBAAK,IAAL;AACA,qBAAK,OAAL,CAAa,MAAb;AACA,qBAAK,UAAL,CAAgB,MAAhB;;AAEA,uBAAO,KAAK,OAAL,EAAP,EAAuB,IAAvB,CAA4B,YAA5B;AACH,aATD;AAUH,SAtBD;;AAwBA,iBAAS,MAAT,EAAiB,YAAW;AACxB,eAAG,oCAAH,EAAyC,YAAW;AAChD,sBAAM,GAAG,WAAH,CAAe,QAArB,EAA+B,oBAA/B;;AAEA,uBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,8BAAU;AADe,iBAAtB,CAAP;AAGA,qBAAK,IAAL;;AAEA,uBAAO,GAAG,WAAH,CAAe,QAAf,CAAwB,kBAA/B,EACK,gBADL;AAEH,aAVD;;AAYA,eAAG,6CAAH,EAAkD,YAAW;AACzD,sBAAM,GAAG,WAAH,CAAe,QAArB,EAA+B,oBAA/B;;AAEA,uBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,8BAAU;AADe,iBAAtB,CAAP;AAGA,qBAAK,IAAL;;AAEA,uBAAO,GAAG,WAAH,CAAe,QAAf,CAAwB,kBAA/B,EACK,GADL,CACS,gBADT;AAEH,aAVD;AAWH,SAxBD;;AA0BA,iBAAS,MAAT,EAAiB,YAAW;AACxB,eAAG,sBAAH,EAA2B,YAAW;AAClC,sBAAM,GAAG,WAAH,CAAe,QAArB,EAA+B,sBAA/B;;AAEA,uBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,8BAAU;AADe,iBAAtB,CAAP;AAGA,qBAAK,IAAL;AACA,qBAAK,IAAL;;AAEA,uBAAO,GAAG,WAAH,CAAe,QAAf,CAAwB,oBAA/B,EACK,gBADL;AAEH,aAXD;AAYH,SAbD;AAcH,KAjXD;;AAmXA,aAAS,sBAAT,EAAiC,YAAW;AACxC,YAAI,YAAJ;AACA,YAAI,iBAAJ;AACA,YAAI,0BAAJ;;AAEA,iBAAS,WAAT,CAAqB,OAArB,EAA8B;AAC1B,kBAAM,EAAE,YAAF,EAAgB,YAAhB,CACF,GAAG,cAAH,CAAkB,sBAAlB,CAAyC,OAAzC,CADE,CAAN;AAEA,mBAAO,IAAI,YAAJ,CAAiB,OAAjB,EAA0B,IAA1B,CAA+B,aAA/B,CAAP;;AAEA,gBAAI,YAAJ,CAAiB,WAAjB;;AAEA,uBAAW,IAAI,YAAJ,CAAiB,SAAjB,CAAX;AACA,mBAAO,SAAS,MAAhB,EAAwB,IAAxB,CAA6B,CAA7B;;AAEA,gCAAoB,SAAS,IAAT,CAAc,sBAAd,CAApB;AACA,mBAAO,kBAAkB,MAAzB,EAAiC,IAAjC,CAAsC,CAAtC;AACH;;AAED,iBAAS,oBAAT,EAA+B,YAAW;AACtC,qBAAS,UAAT,CAAoB,OAApB,EAA6B;AACzB;;;AAGA,kCACK,KADL,GAEK,IAFL,CAEU,SAFV,EAEqB,OAFrB,EAGK,OAHL,CAGa,QAHb;AAIH;;AAED,eAAG,UAAH,EAAe,YAAW;AACtB,4BAAY;AACR,8BAAU;AADF,iBAAZ;;AAIA,uBAAO,kBAAkB,IAAlB,CAAuB,SAAvB,CAAP,EAA0C,IAA1C,CAA+C,KAA/C;;AAEA,2BAAW,IAAX;;AAEA,uBAAO,kBAAkB,IAAlB,CAAuB,SAAvB,CAAP,EAA0C,IAA1C,CAA+C,IAA/C;AACA,uBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACH,aAXD;;AAaA,eAAG,YAAH,EAAiB,YAAW;AACxB,4BAAY;AACR,8BAAU;AADF,iBAAZ;;AAIA,uBAAO,kBAAkB,IAAlB,CAAuB,SAAvB,CAAP,EAA0C,IAA1C,CAA+C,IAA/C;;AAEA,2BAAW,KAAX;;AAEA,uBAAO,kBAAkB,IAAlB,CAAuB,SAAvB,CAAP,EAA0C,IAA1C,CAA+C,KAA/C;AACA,uBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,KAA3B;AACH,aAXD;;AAaA,eAAG,qBAAH,EAA0B,YAAW;AACjC,4BAAY;AACR,8BAAU;AADF,iBAAZ;;AAIA,2BAAW,KAAX;;AAEA,oBAAI,YAAJ,CAAiB,QAAjB;;AAEA,uBAAO,kBAAkB,IAAlB,CAAuB,SAAvB,CAAP,EAA0C,IAA1C,CAA+C,IAA/C;AACA,uBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,IAA3B;AACA,uBAAO,KAAK,OAAL,EAAP,EAAuB,IAAvB,CAA4B,KAA5B;AACH,aAZD;;AAcA,qBAAS,eAAT,EAA0B,YAAW;AACjC,mBAAG,eAAH,EAAoB,YAAW;AAC3B,gCAAY;AACR,kCAAU;AADF,qBAAZ;;AAIA,2BAAO,kBAAkB,IAAlB,CAAuB,SAAvB,CAAP,EAA0C,IAA1C,CAA+C,KAA/C;AACH,iBAND;;AAQA,mBAAG,aAAH,EAAkB,YAAW;AACzB,gCAAY;AACR,kCAAU;AADF,qBAAZ;;AAIA,2BAAO,kBAAkB,IAAlB,CAAuB,SAAvB,CAAP,EAA0C,IAA1C,CAA+C,IAA/C;AACH,iBAND;AAOH,aAhBD;AAiBH,SApED;AAqEH,KAxFD;;AA0FA,aAAS,eAAT,EAA0B,YAAW;AACjC,mBAAW,YAAW;AAClB,mBAAO,IAAI,GAAG,cAAP,CAAsB;AACzB,0BAAU;AADe,aAAtB,CAAP;AAGH,SAJD;;AAMA,iBAAS,UAAT,EAAqB,YAAW;AAC5B,eAAG,2BAAH,EAAgC,YAAW;AACvC,oBAAM,OAAO;AACT,0BAAM,YADG;AAET,0BAAM;AAFG,iBAAb;;AAKA,uBAAO,KAAK,QAAL,CAAc,IAAd,CAAP,EAA4B,IAA5B,CAAiC,IAAjC;AACH,aAPD;;AASA,eAAG,2BAAH,EAAgC,YAAW;AACvC,oBAAM,OAAO;AACT,0BAAM;AADG,iBAAb;;AAIA,uBAAO,KAAK,QAAL,CAAc,IAAd,CAAP,EAA4B,IAA5B,CAAiC,IAAjC;AACH,aAND;;AAQA,eAAG,uCAAH,EAA4C,YAAW;AACnD,oBAAM,OAAO;AACT,0BAAM,kBADG;AAET,0BAAM;AAFG,iBAAb;;AAKA,uBAAO,KAAK,QAAL,CAAc,IAAd,CAAP,EAA4B,IAA5B,CAAiC,KAAjC;AACH,aAPD;AAQH,SA1BD;AA2BH,KAlCD;AAmCH,CAlnBD","file":"textEditorViewTests.js","sourcesContent":["suite('rb/ui/views/TextEditorView', function() {\n    let view;\n\n    beforeEach(function() {\n        RB.DnDUploader.create();\n    });\n\n    afterEach(function() {\n        RB.DnDUploader.instance = null;\n    });\n\n    describe('Construction', function() {\n        it('Initial text', function() {\n            view = new RB.TextEditorView({\n                text: 'Test',\n            });\n            view.render();\n\n            expect(view.getText()).toBe('Test');\n        });\n\n        describe('Text field wrapper', function() {\n            it('If plain text', function() {\n                view = new RB.TextEditorView({\n                    richText: false,\n                });\n                view.render();\n                view.show();\n\n                expect(view.richText).toBe(false);\n                expect(view.$el.children('textarea').length).toBe(1);\n                expect(view.$el.children('.CodeMirror').length).toBe(0);\n            });\n\n            it('If Markdown', function() {\n                view = new RB.TextEditorView({\n                    richText: true,\n                });\n                view.render();\n                view.show();\n\n                expect(view.richText).toBe(true);\n                expect(view.$el.children('textarea').length).toBe(0);\n                expect(view.$el.children('.CodeMirror').length).toBe(1);\n            });\n        });\n\n        describe('Default richText', function() {\n            describe('If user default is true', function() {\n                beforeEach(function() {\n                    RB.UserSession.instance.set('defaultUseRichText', true);\n                });\n\n                it('And richText unset', function() {\n                    view = new RB.TextEditorView();\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n\n                it('And richText=true', function() {\n                    view = new RB.TextEditorView({\n                        richText: true,\n                    });\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n\n                it('And richText=false', function() {\n                    view = new RB.TextEditorView({\n                        richText: false,\n                    });\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n            });\n\n            describe('If user default is false', function() {\n                beforeEach(function() {\n                    RB.UserSession.instance.set('defaultUseRichText', false);\n                });\n\n                it('And richText unset', function() {\n                    view = new RB.TextEditorView();\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(false);\n                    expect(view.$el.children('textarea').length).toBe(1);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n\n                it('And richText=true', function() {\n                    view = new RB.TextEditorView({\n                        richText: true,\n                    });\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n\n                it('And richText=false', function() {\n                    view = new RB.TextEditorView({\n                        richText: false,\n                    });\n                    view.render();\n                    view.show();\n\n                    expect(view.richText).toBe(false);\n                    expect(view.$el.children('textarea').length).toBe(1);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n            });\n        });\n    });\n\n    describe('Operations', function() {\n        describe('bindRichTextAttr', function() {\n            let myModel;\n\n            beforeEach(function() {\n                myModel = new Backbone.Model({\n                    richText: false,\n                });\n\n                view = new RB.TextEditorView();\n            });\n\n            it('Updates on change', function() {\n                view.bindRichTextAttr(myModel, 'richText');\n                expect(view.richText).toBe(false);\n\n                myModel.set('richText', true);\n                expect(view.richText).toBe(true);\n            });\n\n            describe('Initial richText value', function() {\n                it('true', function() {\n                    myModel.set('richText', true);\n                    view.bindRichTextAttr(myModel, 'richText');\n\n                    expect(view.richText).toBe(true);\n                });\n\n                it('false', function() {\n                    myModel.set('richText', false);\n                    view.bindRichTextAttr(myModel, 'richText');\n\n                    expect(view.richText).toBe(false);\n                });\n            });\n        });\n\n        describe('bindRichTextCheckbox', function() {\n            let $checkbox;\n\n            beforeEach(function() {\n                $checkbox = $('<input type=\"checkbox\">');\n\n                view = new RB.TextEditorView();\n                view.setRichText(false);\n            });\n\n            it('Checkbox reflects richText', function() {\n                view.bindRichTextCheckbox($checkbox);\n                expect($checkbox.prop('checked')).toBe(false);\n\n                view.setRichText(true);\n                expect($checkbox.prop('checked')).toBe(true);\n            });\n\n            describe('richText reflects checkbox', function() {\n                it('Checked', function() {\n                    view.setRichText(false);\n                    view.bindRichTextCheckbox($checkbox);\n\n                    $checkbox\n                        .prop('checked', true)\n                        .triggerHandler('change');\n\n                    expect(view.richText).toBe(true);\n                });\n\n                it('Unchecked', function() {\n                    view.setRichText(true);\n                    view.bindRichTextCheckbox($checkbox);\n\n                    $checkbox\n                        .prop('checked', false)\n                        .triggerHandler('change');\n\n                    expect(view.richText).toBe(false);\n                });\n            });\n\n            describe('Initial checked state', function() {\n                it('richText=true', function() {\n                    view.setRichText(true);\n                    view.bindRichTextCheckbox($checkbox);\n\n                    expect($checkbox.prop('checked')).toBe(true);\n                });\n\n                it('richText=false', function() {\n                    view.setRichText(false);\n                    view.bindRichTextCheckbox($checkbox);\n\n                    expect($checkbox.prop('checked')).toBe(false);\n                });\n            });\n        });\n\n        describe('bindRichTextVisibility', function() {\n            let $el;\n\n            beforeEach(function() {\n                $el = $('<div>');\n\n                view = new RB.TextEditorView();\n                view.setRichText(false);\n            });\n\n            describe('Initial visibility', function() {\n                it('richText=true', function() {\n                    $el.hide();\n\n                    view.setRichText(true);\n                    view.bindRichTextVisibility($el);\n\n                    /*\n                     * Chrome returns an empty string, while Firefox returns\n                     * \"block\".\n                     */\n                    const display = $el.css('display');\n                    expect(display === 'block' || display === '').toBe(true);\n                });\n\n                it('richText=false', function() {\n                    view.bindRichTextVisibility($el);\n\n                    expect($el.css('display')).toBe('none');\n                });\n            });\n\n            describe('Toggles visibility on change', function() {\n                it('richText=true', function() {\n                    $el.hide();\n\n                    view.bindRichTextVisibility($el);\n                    expect($el.css('display')).toBe('none');\n\n                    view.setRichText(true);\n                    /*\n                     * Chrome returns an empty string, while Firefox returns\n                     * \"block\".\n                     */\n                    const display = $el.css('display');\n                    expect(display === 'block' || display === '').toBe(true);\n                });\n\n                it('richText=false', function() {\n                    view.setRichText(true);\n                    view.bindRichTextVisibility($el);\n\n                    /*\n                     * Chrome returns an empty string, while Firefox returns\n                     * \"block\".\n                     */\n                    const display = $el.css('display');\n                    expect(display === 'block' || display === '').toBe(true);\n\n                    view.setRichText(false);\n                    expect($el.css('display')).toBe('none');\n                });\n            });\n        });\n\n        describe('setRichText', function() {\n            it('Emits change:richText', function() {\n                let emitted = false;\n\n                view.on('change:richText', function() {\n                    emitted = true;\n                });\n\n                view.show();\n                view.richText = false;\n                view.setRichText(true);\n\n                expect(emitted).toBe(true);\n            });\n\n            it('Emits change', function() {\n                let emitted = false;\n\n                view.on('change', function() {\n                    emitted = true;\n                });\n\n                view.show();\n                view.richText = false;\n                view.setRichText(true);\n\n                expect(emitted).toBe(true);\n            });\n\n            it('Marks dirty', function() {\n                view.show();\n                view.richText = false;\n                expect(view.isDirty()).toBe(false);\n\n                view.setRichText(true);\n                expect(view.isDirty()).toBe(true);\n            });\n\n            describe('Markdown to Text', function() {\n                beforeEach(function() {\n                    view = new RB.TextEditorView({\n                        richText: true,\n                    });\n                    view.render();\n                });\n\n                it('If shown', function() {\n                    view.show();\n                    view.setRichText(false);\n\n                    expect(view.richText).toBe(false);\n                    expect(view.$el.children('textarea').length).toBe(1);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n\n                it('If hidden', function() {\n                    view.setRichText(false);\n\n                    expect(view.richText).toBe(false);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n            });\n\n            describe('Text to Markdown', function() {\n                beforeEach(function() {\n                    view = new RB.TextEditorView({\n                        richText: false,\n                    });\n                    view.render();\n                });\n\n                it('If shown', function() {\n                    view.show();\n                    view.setRichText(true);\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(1);\n                });\n\n                it('If hidden', function() {\n                    view.setRichText(true);\n\n                    expect(view.richText).toBe(true);\n                    expect(view.$el.children('textarea').length).toBe(0);\n                    expect(view.$el.children('.CodeMirror').length).toBe(0);\n                });\n            });\n        });\n\n        describe('setText', function() {\n            describe('If shown', function() {\n                it('If plain text', function() {\n                    view = new RB.TextEditorView({\n                        richText: false,\n                    });\n                    view.show();\n                    view.setText('Test');\n\n                    expect(view.$('textarea').val()).toBe('Test');\n                });\n\n                it('If Markdown', function() {\n                    view = new RB.TextEditorView({\n                        richText: true,\n                    });\n                    view.show();\n                    view.setText('Test');\n\n                    expect(view._editor._codeMirror.getValue()).toBe('Test');\n                });\n            });\n\n            it('If hidden', function() {\n                view = new RB.TextEditorView();\n                view.setText('Test');\n\n                expect(view.getText()).toBe('Test');\n            });\n        });\n\n        describe('getText', function() {\n            it('If plain text', function() {\n                view = new RB.TextEditorView({\n                    richText: false,\n                });\n                view.show();\n                view.setText('Test');\n\n                expect(view.getText()).toBe('Test');\n            });\n\n            it('If Markdown', function() {\n                view = new RB.TextEditorView({\n                    richText: true,\n                });\n                view.show();\n                view.setText('Test');\n\n                expect(view.getText()).toBe('Test');\n            });\n        });\n\n        describe('insertLine', function() {\n            it('If plain text', function() {\n                view = new RB.TextEditorView({\n                    richText: false,\n                });\n                view.show();\n                view.setText('Test');\n                view.insertLine('Test');\n\n                expect(view.getText()).toBe('Test\\nTest');\n            });\n\n            it('If Markdown', function() {\n                view = new RB.TextEditorView({\n                    richText:true,\n                });\n                view.show();\n                view.setText('Test');\n                view.insertLine('Test');\n\n                expect(view.getText()).toBe('Test\\nTest');\n            });\n        });\n\n        describe('show', function() {\n            it('registers drop target if rich text', function() {\n                spyOn(RB.DnDUploader.instance, 'registerDropTarget');\n\n                view = new RB.TextEditorView({\n                    richText: true,\n                });\n                view.show();\n\n                expect(RB.DnDUploader.instance.registerDropTarget)\n                    .toHaveBeenCalled();\n            });\n\n            it('does not register drop target if plain text', function() {\n                spyOn(RB.DnDUploader.instance, 'registerDropTarget');\n\n                view = new RB.TextEditorView({\n                    richText: false,\n                });\n                view.show();\n\n                expect(RB.DnDUploader.instance.registerDropTarget)\n                    .not.toHaveBeenCalled();\n            });\n        });\n\n        describe('hide', function() {\n            it('disables drop target', function() {\n                spyOn(RB.DnDUploader.instance, 'unregisterDropTarget');\n\n                view = new RB.TextEditorView({\n                    richText: true,\n                });\n                view.show();\n                view.hide();\n\n                expect(RB.DnDUploader.instance.unregisterDropTarget)\n                    .toHaveBeenCalled();\n            });\n        });\n    });\n\n    describe('inlineEditor options', function() {\n        let $el;\n        let $buttons;\n        let $markdownCheckbox;\n\n        function setupEditor(options) {\n            $el = $('<textarea>').inlineEditor(\n                RB.TextEditorView.getInlineEditorOptions(options));\n            view = $el.inlineEditor('field').data('text-editor');\n\n            $el.inlineEditor('startEdit');\n\n            $buttons = $el.inlineEditor('buttons');\n            expect($buttons.length).toBe(1);\n\n            $markdownCheckbox = $buttons.find('input[type=checkbox]');\n            expect($markdownCheckbox.length).toBe(1);\n        }\n\n        describe('Rich text checkbox', function() {\n            function setChecked(checked) {\n                /*\n                 * All this is needed to get Firefox and Chrome to play nice.\n                 */\n                $markdownCheckbox\n                    .click()\n                    .prop('checked', checked)\n                    .trigger('change');\n            }\n\n            it('Checking', function() {\n                setupEditor({\n                    richText: false,\n                });\n\n                expect($markdownCheckbox.prop('checked')).toBe(false);\n\n                setChecked(true);\n\n                expect($markdownCheckbox.prop('checked')).toBe(true);\n                expect(view.richText).toBe(true);\n            });\n\n            it('Unchecking', function() {\n                setupEditor({\n                    richText: true,\n                });\n\n                expect($markdownCheckbox.prop('checked')).toBe(true);\n\n                setChecked(false);\n\n                expect($markdownCheckbox.prop('checked')).toBe(false);\n                expect(view.richText).toBe(false);\n            });\n\n            it('Resets after cancel', function() {\n                setupEditor({\n                    richText: true,\n                });\n\n                setChecked(false);\n\n                $el.inlineEditor('cancel');\n\n                expect($markdownCheckbox.prop('checked')).toBe(true);\n                expect(view.richText).toBe(true);\n                expect(view.isDirty()).toBe(false);\n            });\n\n            describe('Initial state', function() {\n                it('If plain text', function() {\n                    setupEditor({\n                        richText: false,\n                    });\n\n                    expect($markdownCheckbox.prop('checked')).toBe(false);\n                });\n\n                it('If Markdown', function() {\n                    setupEditor({\n                        richText: true,\n                    });\n\n                    expect($markdownCheckbox.prop('checked')).toBe(true);\n                });\n            });\n        });\n    });\n\n    describe('Drag and Drop', function() {\n        beforeEach(function() {\n            view = new RB.TextEditorView({\n                richText: true,\n            });\n        });\n\n        describe('_isImage', function() {\n            it('correctly checks mimetype', function() {\n                const file = {\n                    type: 'image/jpeg',\n                    name: 'testimage.jpg',\n                };\n\n                expect(view._isImage(file)).toBe(true);\n            });\n\n            it('checks filename extension', function() {\n                const file = {\n                    name: 'testimage.jpg',\n                };\n\n                expect(view._isImage(file)).toBe(true);\n            });\n\n            it('returns false when given invalid type', function() {\n                const file = {\n                    type: 'application/json',\n                    name: 'testimage.jps',\n                };\n\n                expect(view._isImage(file)).toBe(false);\n            });\n        });\n    });\n});\n"]}