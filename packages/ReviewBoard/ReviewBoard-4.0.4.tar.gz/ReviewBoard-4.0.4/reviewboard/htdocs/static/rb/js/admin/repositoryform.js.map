{"version":3,"sources":["repositoryform.es6.js"],"names":[],"mappings":"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","file":"repositoryform.js","sourcesContent":["(function() {\n\n\nconst prevTypes = {};\nconst origRepoTypes = [];\nconst powerPackTemplate = dedent`\n    <h3>${gettext('Power Pack Required')}</h3>\n    <p>\n    ${gettext('<span class=\"power-pack-advert-hosting-type\"></span> support is available with <a href=\"https://www.reviewboard.org/powerpack/\">Power Pack</a>, an extension which also offers powerful reports, document review, and more.')}\n    </p>\n`;\nconst gerritPluginRequiredTemplate = dedent`\n    <h3>\n    ${gettext('Plugin Required')}\n    </h3>\n    <p>\n    ${interpolate(\n        gettext('The <code>gerrit-reviewboard</code> plugin is required for Gerrit integration. See the <a href=\"%s\" target=\"_blank\">instructions</a> for installing the plugin on your server.'),\n        [MANUAL_URL + 'admin/configuration/repositories/gerrit/'])}\n    </p>\n`;\n\n\nfunction updatePlanEl($row, $plan, serviceType, isFake) {\n    const planTypes = HOSTING_SERVICES[serviceType].plans;\n    const selectedPlan = $plan.val();\n\n    $plan.empty();\n\n    if (planTypes.length === 1 || isFake) {\n        $row.hide();\n    } else {\n        for (let i = 0; i < planTypes.length; i++) {\n            const planType = planTypes[i];\n            const opt = $('<option/>')\n                .val(planType.type)\n                .text(planType.label)\n                .appendTo($plan);\n\n            if (planType.type === selectedPlan) {\n                opt.prop('selected', true);\n            }\n        }\n\n        $row.show();\n    }\n\n    $plan.triggerHandler('change');\n}\n\n\nfunction updateHostingForm($hostingType, formPrefix, $plan, $forms) {\n    const formID = `#${formPrefix}-${$hostingType.val()}-${$plan.val() || 'default'}`;\n\n    $forms.hide();\n    $(formID).show();\n}\n\n\nfunction updateRepositoryType() {\n    const hostingType = $('#id_hosting_type').val();\n    const newRepoTypes = (hostingType === 'custom'\n                          ? []\n                          : HOSTING_SERVICES[hostingType].scmtools);\n    const $repoTypes = $('#id_tool');\n    const currentRepoType = $repoTypes.val();\n\n    $repoTypes.empty();\n\n    origRepoTypes.forEach(repoType => {\n        if (newRepoTypes.length === 0 ||\n            newRepoTypes.indexOf(repoType.text) !== -1 ||\n            newRepoTypes.indexOf(repoType.value) !== -1) {\n            $('<option/>')\n                .text(repoType.text)\n                .val(repoType.value)\n                .appendTo($repoTypes);\n\n            if (repoType.value === currentRepoType) {\n                $repoTypes.val(currentRepoType);\n            }\n        }\n    });\n\n    $repoTypes.triggerHandler('change');\n}\n\n\nfunction updateAccountList() {\n    const hostingType = $('#id_hosting_type').val();\n    const $hostingAccount = $('#id_hosting_account');\n    const $authForm = $('#hosting-auth-form-' + hostingType);\n    const hostingInfo = HOSTING_SERVICES[hostingType];\n    const accounts = hostingInfo.accounts;\n    const selectedAccount = parseInt($hostingAccount.val(), 10);\n    let foundSelected = false;\n\n    /* Rebuild the list of accounts. */\n    $hostingAccount.find('option[value!=\"\"]').remove();\n\n    if (hostingInfo.needs_two_factor_auth_code ||\n        $authForm.find('.errorlist').length > 0) {\n        /*\n         * The first one will be selected automatically, which\n         * we want. Don't select any below.\n         */\n        foundSelected = true;\n    }\n\n    accounts.forEach(account => {\n        let text = account.username;\n\n        if (account.hosting_url) {\n            text += ` (${account.hosting_url})`;\n        }\n\n        const $opt = $('<option/>')\n            .val(account.pk)\n            .text(text)\n            .data('account', account)\n            .appendTo($hostingAccount);\n\n        if (account.pk === selectedAccount || !foundSelected) {\n            $opt.prop('selected', true);\n            foundSelected = true;\n            $hostingAccount.triggerHandler('change');\n        }\n    });\n}\n\n\n$(document).ready(function() {\n    const $hostingType = $('#id_hosting_type');\n    const $hostingAuthForms = $('.hosting-auth-form');\n    const $hostingRepoForms = $('.hosting-repo-form');\n    const $hostingAccount = $('#id_hosting_account');\n    const $hostingAccountRow = $('#row-hosting_account');\n    const $hostingAccountRelink = $('<p/>')\n        .text(gettext('The authentication requirements for this account have changed. You will need to re-authenticate.'))\n        .addClass('errornote')\n        .hide()\n        .appendTo($hostingAccountRow);\n    const $scmtoolAuthForms = $('.scmtool-auth-form');\n    const $scmtoolRepoForms = $('.scmtool-repo-form');\n    const $associateSshKeyFieldset =\n        $('#row-associate_ssh_key').parents('fieldset');\n    const $associateSshKey = $('#id_associate_ssh_key');\n    const associateSshKeyDisabled = $associateSshKey.prop('disabled');\n    const $bugTrackerUseHosting = $('#id_bug_tracker_use_hosting');\n    const $bugTrackerUseHostingRow = $('#row-bug_tracker_use_hosting');\n    const $bugTrackerType = $('#id_bug_tracker_type');\n    const $bugTrackerHostingURLRow = $('#row-bug_tracker_hosting_url');\n    const $bugTrackerTypeRow = $('#row-bug_tracker_type');\n    const $bugTrackerPlan = $('#id_bug_tracker_plan');\n    const $bugTrackerPlanRow = $('#row-bug_tracker_plan');\n    const $bugTrackerURLRow = $('#row-bug_tracker');\n    const $bugTrackerUsernameRow =\n        $('#row-bug_tracker_hosting_account_username');\n    const $repoPlanRow = $('#row-repository_plan');\n    const $repoPlan = $('#id_repository_plan');\n    const $publicAccess = $('#id_public');\n    const $tool = $('#id_tool');\n    const $toolRow = $('#row-tool');\n    const $showSshKey = $('#show-ssh-key-link');\n    const $publicKeyPopup = $('#ssh-public-key-popup');\n    const $bugTrackerForms = $('.bug-tracker-form');\n    const $submitButtons = $('input[type=\"submit\"]');\n    const $editHostingCredentials = $('#repo-edit-hosting-credentials');\n    const $editHostingCredentialsLabel =\n        $('#repo-edit-hosting-credentials-label');\n    const $forceAuth = $('#id_force_authorize');\n    const $powerPackAdvert = $('<div class=\"powerpack-advert\" />')\n        .html(powerPackTemplate)\n        .hide()\n        .appendTo($hostingType.closest('fieldset'));\n    const $gerritPluginInfo = $('<div class=\"gerrit-plugin-advert\" />')\n        .html(gerritPluginRequiredTemplate)\n        .hide()\n        .appendTo($('#row-hosting_type'));\n\n    prevTypes.bug_tracker_type = 'none';\n    prevTypes.hosting_type = 'custom';\n    prevTypes.tool = 'none';\n\n    $tool.find('option').each((i, el) => {\n        const $repoType = $(el);\n\n        origRepoTypes.push({\n            value: $repoType.val(),\n            text: $repoType.text(),\n        });\n    });\n\n    $bugTrackerUseHosting\n        .change(function() {\n            if (this.checked) {\n                $bugTrackerTypeRow.hide();\n                $bugTrackerPlanRow.hide();\n                $bugTrackerUsernameRow.hide();\n                $bugTrackerURLRow.hide();\n                $bugTrackerForms.hide();\n            } else {\n                $bugTrackerTypeRow.show();\n                $bugTrackerType.triggerHandler('change');\n            }\n        })\n        .triggerHandler('change');\n\n    $repoPlan.change(() => updateHostingForm($hostingType, 'repo-form-hosting',\n                                             $repoPlan, $hostingRepoForms));\n\n    $bugTrackerPlan.change(() => {\n        const plan = $bugTrackerPlan.val() || 'default';\n        const bugTrackerType = $bugTrackerType.val();\n        const planInfo = HOSTING_SERVICES[bugTrackerType].planInfo[plan];\n\n        updateHostingForm($bugTrackerType, 'bug-tracker-form-hosting',\n                          $bugTrackerPlan, $bugTrackerForms);\n\n        $bugTrackerUsernameRow.setVisible(\n            planInfo.bug_tracker_requires_username);\n    });\n\n    $hostingType\n        .change(() => {\n            const hostingType = $hostingType.val();\n            const isCustom = (hostingType === 'custom');\n            const isFake = (!isCustom &&\n                            HOSTING_SERVICES[hostingType].fake === true);\n\n            updateRepositoryType();\n\n            $gerritPluginInfo.toggle(hostingType === 'gerrit');\n\n            if (isCustom) {\n                $repoPlanRow.hide();\n            } else {\n                $scmtoolAuthForms.hide();\n                $scmtoolRepoForms.hide();\n\n                updatePlanEl($repoPlanRow, $repoPlan, hostingType, isFake);\n            }\n\n            $repoPlan.triggerHandler('change');\n\n            if (isCustom ||\n                isFake ||\n                !HOSTING_SERVICES[hostingType].supports_bug_trackers) {\n                $bugTrackerUseHostingRow.hide();\n                $bugTrackerUseHosting\n                    .prop({\n                        disabled: true,\n                        checked: false,\n                    })\n                    .triggerHandler('change');\n            } else {\n                $bugTrackerUseHosting.prop('disabled', false);\n                $bugTrackerUseHostingRow.show();\n            }\n\n            if (isCustom ||\n                !HOSTING_SERVICES[hostingType].supports_ssh_key_association) {\n                $associateSshKeyFieldset.hide();\n                $associateSshKey.prop({\n                    disabled: true,\n                    checked: false,\n                });\n            } else {\n                /*\n                 * Always use the original state of the checkbox (i.e. the\n                 * state on page load)\n                 */\n                $associateSshKey.prop('disabled', associateSshKeyDisabled);\n                $associateSshKeyFieldset.show();\n            }\n\n            if (isFake) {\n                $powerPackAdvert\n                    .find('.power-pack-advert-hosting-type')\n                    .text($hostingType.find(':selected').text());\n            }\n\n            $hostingAccountRow.setVisible(!isFake);\n            $toolRow.setVisible(!isFake);\n\n            $powerPackAdvert.setVisible(isFake);\n            $submitButtons.prop('disabled', isFake);\n\n            if (!isCustom) {\n                updateAccountList();\n            }\n        })\n        .triggerHandler('change');\n\n    $([$hostingType[0], $hostingAccount[0]])\n        .change(() => {\n            $hostingAuthForms.hide();\n            $hostingAccountRelink.hide();\n            $editHostingCredentials\n                .hide()\n                .val(gettext('Edit credentials'));\n            $forceAuth.val('false');\n\n            const hostingType = $hostingType.val();\n\n            if (hostingType === 'custom') {\n                $hostingAccountRow.hide();\n            } else {\n                const hostingInfo = HOSTING_SERVICES[hostingType];\n\n                if (hostingInfo.fake !== true) {\n                    $hostingAccountRow.show();\n\n                    const $authForm = $('#hosting-auth-form-' + hostingType);\n\n                    /*\n                     * Hide any fields required for 2FA unless explicitly\n                     * needed.\n                     */\n                    $authForm.find('[data-required-for-2fa]').closest('.form-row')\n                        .setVisible(hostingInfo.needs_two_factor_auth_code);\n\n                    if ($hostingAccount.val() === '') {\n                        /* Present fields for linking a new account. */\n                        $authForm.show();\n                    } else if (hostingInfo.needs_two_factor_auth_code) {\n                        /*\n                         * The user needs to enter a 2FA code. We need to\n                         * show the auth form, and ensure we will be forcing\n                         * authentication.\n                         */\n                        $forceAuth.val('true');\n                        $authForm.show();\n                    } else {\n                        /* An existing linked account has been selected. */\n                        const selectedIndex = $hostingAccount[0].selectedIndex;\n                        const $selectedOption =\n                            $($hostingAccount[0].options[selectedIndex]);\n                        const account = $selectedOption.data('account');\n\n                        if (account.is_authorized &&\n                            $authForm.find('.errorlist').length === 0) {\n                            $editHostingCredentials.show();\n                        } else {\n                            $authForm.show();\n                            $hostingAccountRelink.show();\n                        }\n                    }\n                }\n            }\n        })\n        .triggerHandler('change');\n\n    $tool\n        .change(() => {\n            if ($hostingType.val() === 'custom') {\n                var scmtoolID = $('#id_tool').val(),\n                    $authForm = $('#auth-form-scm-' + scmtoolID),\n                    $repoForm = $('#repo-form-scm-' + scmtoolID);\n\n                $scmtoolAuthForms.hide();\n                $scmtoolRepoForms.hide();\n\n                $authForm.show();\n                $repoForm.show();\n            }\n        })\n        .triggerHandler('change');\n\n    $bugTrackerType\n        .change(() => {\n            $bugTrackerForms.hide();\n\n            const bugTrackerType = $bugTrackerType.val();\n\n            if (bugTrackerType === 'custom' || bugTrackerType === 'none') {\n                $bugTrackerHostingURLRow.hide();\n                $bugTrackerPlanRow.hide();\n                $bugTrackerUsernameRow.hide();\n            }\n\n            if (bugTrackerType === 'custom') {\n                $bugTrackerURLRow.show();\n            } else if (bugTrackerType === 'none') {\n                $bugTrackerURLRow.hide();\n            } else {\n                $bugTrackerURLRow.hide();\n                updatePlanEl($bugTrackerPlanRow, $bugTrackerPlan,\n                             bugTrackerType, false);\n\n                $bugTrackerHostingURLRow.setVisible(\n                    HOSTING_SERVICES[bugTrackerType].self_hosted);\n            }\n        })\n        .triggerHandler('change');\n\n    $publicAccess\n        .change(function() {\n            var visible = !this.checked;\n            $('#row-users').setVisible(visible);\n            $('#row-review_groups').setVisible(visible);\n        })\n        .triggerHandler('change');\n\n    $showSshKey.on('click', () => {\n        if ($publicKeyPopup.is(':visible')) {\n            $showSshKey.text(gettext('Show your SSH public key'));\n            $publicKeyPopup.hide();\n        } else {\n            $showSshKey.text(gettext('Hide your SSH public key'));\n            $publicKeyPopup.show();\n        }\n\n        return false;\n    });\n\n    $editHostingCredentials.click(() => {\n        let $authForm = $('#hosting-auth-form-' + $hostingType.val());\n\n        if ($forceAuth.val() === 'true') {\n            $editHostingCredentialsLabel.text(gettext('Edit credentials'));\n            $authForm.hide();\n            $forceAuth.val('false');\n        } else {\n            $editHostingCredentialsLabel.text(\n                gettext('Cancel editing credentials'));\n            $authForm = $('#hosting-auth-form-' + $hostingType.val()).show();\n            $authForm.show();\n            $forceAuth.val('true');\n        }\n\n        return false;\n    });\n});\n\n\n})();\n"]}