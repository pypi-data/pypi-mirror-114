{"version":3,"sources":["diffRevisionModelTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,mCAAN,EAA2C,YAAW;AAClD,aAAS,OAAT,EAAkB,YAAW;AACzB,WAAG,cAAH,EAAmB,YAAW;AAC1B,gBAAM,OAAO,GAAG,YAAH,CAAgB,SAAhB,CAA0B,KAA1B,CAAgC,IAAhC,CAAqC,SAArC,EAAgD;AACzD,0BAAU,CAD+C;AAEzD,iCAAiB,CAFwC;AAGzD,oCAAoB,CAHqC;AAIzD,8BAAc,IAJ2C;AAKzD,+BAAe;AAL0C,aAAhD,CAAb;;AAQA,mBAAO,IAAP,EAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,mBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,CAA3B;AACA,mBAAO,KAAK,cAAZ,EAA4B,IAA5B,CAAiC,CAAjC;AACA,mBAAO,KAAK,iBAAZ,EAA+B,IAA/B,CAAoC,CAApC;AACA,mBAAO,KAAK,WAAZ,EAAyB,IAAzB,CAA8B,IAA9B;AACA,mBAAO,KAAK,WAAZ,EAAyB,IAAzB,CAA8B,IAA9B;AACA,mBAAO,KAAK,YAAZ,EAA0B,IAA1B,CAA+B,IAA/B;AACA,mBAAO,KAAK,WAAZ,EAAyB,IAAzB,CAA8B,IAA9B;AACH,SAjBD;;AAmBA,WAAG,uCAAH,EAA4C,YAAW;AACnD,gBAAM,OAAO,GAAG,YAAH,CAAgB,SAAhB,CAA0B,KAA1B,CAAgC,IAAhC,CAAqC,SAArC,EAAgD;AACzD,0BAAU,CAD+C;AAEzD,iCAAiB,CAFwC;AAGzD,oCAAoB,IAHqC;AAIzD,8BAAc,KAJ2C;AAKzD,+BAAe,KAL0C;AAMzD,gCAAgB,CANyC;AAOzD,+BAAe;AAP0C,aAAhD,CAAb;;AAUA,mBAAO,IAAP,EAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,mBAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,CAA3B;AACA,mBAAO,KAAK,cAAZ,EAA4B,IAA5B,CAAiC,CAAjC;AACA,mBAAO,KAAK,iBAAZ,EAA+B,IAA/B,CAAoC,IAApC;AACA,mBAAO,KAAK,WAAZ,EAAyB,IAAzB,CAA8B,KAA9B;AACA,mBAAO,KAAK,WAAZ,EAAyB,IAAzB,CAA8B,KAA9B;AACA,mBAAO,KAAK,YAAZ,EAA0B,IAA1B,CAA+B,CAA/B;AACA,mBAAO,KAAK,WAAZ,EAAyB,IAAzB,CAA8B,CAA9B;AACH,SAnBD;AAoBH,KAxCD;AAyCH,CA1CD","file":"diffRevisionModelTests.js","sourcesContent":["suite('rb/diffviewer/models/DiffRevision', function() {\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = RB.DiffRevision.prototype.parse.call(undefined, {\n                revision: 2,\n                latest_revision: 3,\n                interdiff_revision: 4,\n                is_interdiff: true,\n                is_draft_diff: true,\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.revision).toBe(2);\n            expect(data.latestRevision).toBe(3);\n            expect(data.interdiffRevision).toBe(4);\n            expect(data.isInterdiff).toBe(true);\n            expect(data.isDraftDiff).toBe(true);\n            expect(data.baseCommitID).toBe(null);\n            expect(data.tipCommitID).toBe(null);\n        });\n\n        it('API payloads with base/tip commit IDs', function() {\n            const data = RB.DiffRevision.prototype.parse.call(undefined, {\n                revision: 4,\n                latest_revision: 7,\n                interdiff_revision: null,\n                is_interdiff: false,\n                is_draft_diff: false,\n                base_commit_id: 3,\n                tip_commit_id: 4,\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.revision).toBe(4);\n            expect(data.latestRevision).toBe(7);\n            expect(data.interdiffRevision).toBe(null);\n            expect(data.isInterdiff).toBe(false);\n            expect(data.isDraftDiff).toBe(false);\n            expect(data.baseCommitID).toBe(3);\n            expect(data.tipCommitID).toBe(4);\n        });\n    });\n});\n"]}