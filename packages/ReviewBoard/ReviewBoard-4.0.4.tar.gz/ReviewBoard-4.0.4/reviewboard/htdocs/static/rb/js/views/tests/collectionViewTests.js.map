{"version":3,"sources":["collectionViewTests.es6.js"],"names":[],"mappings":"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","file":"collectionViewTests.js","sourcesContent":["suite('rb/views/CollectionView', function() {\n    let collection;\n    let view;\n\n    const TestModel = Backbone.Model.extend({\n        defaults: _.defaults({\n            data: '',\n        }),\n    });\n\n    const TestCollection = Backbone.Collection.extend({\n        model: TestModel,\n    });\n\n    const TestModelView = Backbone.View.extend({\n        className: 'test-class',\n        render() {\n            this.$el.text(this.model.get('data'));\n            return this;\n        },\n    });\n\n    const TestCollectionView = RB.CollectionView.extend({\n        itemViewType: TestModelView,\n    });\n\n    beforeEach(function() {\n        collection = new TestCollection();\n        view = new TestCollectionView({\n            collection: collection,\n        });\n    });\n\n    describe('Rendering', function() {\n        it('When empty', function() {\n            view.render();\n            expect(view.$el.children().length).toBe(0);\n        });\n\n        it('With items', function() {\n            collection.add([\n                { data: 'Item 1' },\n                { data: 'Item 2' },\n            ]);\n\n            view.render();\n            const $children = view.$el.children();\n            expect($children.length).toBe(2);\n            expect($children[0].innerHTML).toBe('Item 1');\n            expect($children[1].innerHTML).toBe('Item 2');\n        });\n\n        it('Item model type', function() {\n            collection.add([\n                { data: 'Item 1' },\n            ]);\n\n            view.render();\n            expect(view.$el.children().hasClass('test-class')).toBe(true);\n        });\n\n        it('With custom element container', function() {\n            const $container = $('<div class=\"rb-test-main-container\"/>')\n                .appendTo(view.$el);\n\n            view.$container = $container;\n\n            collection.add([\n                { data: 'Item 1' },\n                { data: 'Item 2' },\n            ]);\n\n            view.render();\n\n            const $viewChildren = view.$el.children();\n            expect($viewChildren.length).toBe(1);\n            expect($viewChildren[0].className).toBe('rb-test-main-container');\n\n            const $containerChildren = $viewChildren.eq(0).children();\n            expect($containerChildren.length).toBe(2);\n            expect($containerChildren[0].innerHTML).toBe('Item 1');\n            expect($containerChildren[1].innerHTML).toBe('Item 2');\n        });\n    });\n\n    describe('Live updating', function() {\n        it('Adding items after rendering', function() {\n            collection.add([\n                { data: 'Item 1' },\n            ]);\n\n            view.render();\n\n            expect(view.$el.children().length).toBe(1);\n\n            collection.add([\n                { data: 'Item 2' },\n                { data: 'Item 3' },\n            ]);\n\n            const $children = view.$el.children();\n            expect($children.length).toBe(3);\n            expect($children[2].innerHTML).toBe('Item 3');\n        });\n\n        it('Removing items after rendering', function() {\n            const model1 = new TestModel({ data: 'Item 1' });\n            const model2 = new TestModel({ data: 'Item 2' });\n            const model3 = new TestModel({ data: 'Item 3' });\n            collection.add([model1, model2, model3]);\n\n            view.render();\n\n            expect(view.$el.children().length).toBe(3);\n\n            collection.remove([model1, model3]);\n\n            const $children = view.$el.children();\n            expect($children.length).toBe(1);\n            expect($children[0].innerHTML).toBe('Item 2');\n        });\n\n        it('When reset', function() {\n            collection.add([\n                { data: 'Item 1' },\n                { data: 'Item 2' },\n            ]);\n\n            view.render();\n\n            let $children = view.$el.children();\n            expect($children.length).toBe(2);\n            expect($children[0].innerHTML).toBe('Item 1');\n            expect($children[1].innerHTML).toBe('Item 2');\n\n            collection.reset([\n                { data: 'Item 3' },\n                { data: 'Item 4' },\n                { data: 'Item 5' },\n            ]);\n\n            $children = view.$el.children();\n            expect($children.length).toBe(3);\n            expect($children[0].innerHTML).toBe('Item 3');\n            expect($children[1].innerHTML).toBe('Item 4');\n            expect($children[2].innerHTML).toBe('Item 5');\n        });\n\n        describe('Sorting', function() {\n            it('With order changed', function() {\n                collection.add([\n                    { data: 'Item 2' },\n                    { data: 'Item 3' },\n                    { data: 'Item 1' },\n                ]);\n\n                view.render();\n\n                let $children = view.$el.children();\n                expect($children.length).toBe(3);\n                expect($children[0].innerHTML).toBe('Item 2');\n                expect($children[1].innerHTML).toBe('Item 3');\n                expect($children[2].innerHTML).toBe('Item 1');\n\n                self.spyOn(view, '_addCollectionViews').and.callThrough();\n\n                collection.comparator = 'data';\n                collection.sort();\n\n                $children = view.$el.children();\n                expect($children[0].innerHTML).toBe('Item 1');\n                expect($children[1].innerHTML).toBe('Item 2');\n                expect($children[2].innerHTML).toBe('Item 3');\n\n                expect(view._addCollectionViews).toHaveBeenCalled();\n            });\n\n            it('With order unchanged', function() {\n                collection.add([\n                    { data: 'Item 1' },\n                    { data: 'Item 2' },\n                    { data: 'Item 3' },\n                ]);\n\n                view.render();\n\n                let $children = view.$el.children();\n                expect($children.length).toBe(3);\n                expect($children[0].innerHTML).toBe('Item 1');\n                expect($children[1].innerHTML).toBe('Item 2');\n                expect($children[2].innerHTML).toBe('Item 3');\n\n                collection.comparator = 'data';\n                collection.sort();\n\n                self.spyOn(view, '_addCollectionViews').and.callThrough();\n\n                $children = view.$el.children();\n                expect($children[0].innerHTML).toBe('Item 1');\n                expect($children[1].innerHTML).toBe('Item 2');\n                expect($children[2].innerHTML).toBe('Item 3');\n\n                expect(view._addCollectionViews).not.toHaveBeenCalled();\n            });\n        });\n    });\n});\n"]}