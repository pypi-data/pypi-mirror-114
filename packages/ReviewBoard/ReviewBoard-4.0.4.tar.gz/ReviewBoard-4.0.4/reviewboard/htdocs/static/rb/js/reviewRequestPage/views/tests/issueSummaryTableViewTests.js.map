{"version":3,"sources":["issueSummaryTableViewTests.es6.js"],"names":[],"mappings":"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","file":"issueSummaryTableViewTests.js","sourcesContent":["suite('rb/reviewRequestPage/views/IssueSummaryTable', function() {\n    const issueSummaryTableTemplate = _.template(dedent`\n        <div>\n         <div class=\"rb-c-review-request-field-tabular\n                     rb-c-issue-summary-table\">\n          <header class=\"rb-c-review-request-field-tabular__header\">\n           <div class=\"rb-c-review-request-field-tabular__filters\">\n            <select class=\"rb-c-issue-summary-table__reviewer-filter\">\n             <option value=\"all\"></option>\n            </select>\n           </div>\n           <ul class=\"rb-c-tabs\">\n            <li class=\"rb-c-tabs__tab -is-active\" data-issue-state=\"open\">\n             <label class=\"rb-c-tabs__tab-label\">\n              <span id=\"open-counter\"\n                    class=\"rb-c-issue-summary-table__counter\">2</span>\n             </label>\n            </li>\n            <li class=\"rb-c-tabs__tab\" data-issue-state=\"verifying\">\n             <label class=\"rb-c-tabs__tab-label\">\n              <span id=\"verifying-counter\"\n                    class=\"rb-c-issue-summary-table__counter\">3</span>\n             </label>\n            </li>\n            <li class=\"rb-c-tabs__tab\" data-issue-state=\"resolved\">\n             <label class=\"rb-c-tabs__tab-label\">\n              <span id=\"resolved-counter\"\n                    class=\"rb-c-issue-summary-table__counter\">3</span>\n             </label>\n            </li>\n            <li class=\"rb-c-tabs__tab\" data-issue-state=\"dropped\">\n             <label class=\"rb-c-tabs__tab-label\">\n              <span id=\"dropped-counter\"\n                    class=\"rb-c-issue-summary-table__counter\">1</span>\n             </label>\n            </li>\n            <li class=\"rb-c-tabs__tab\" data-issue-state=\"all\">\n             <label class=\"rb-c-tabs__tab-label\">\n              <span id=\"total-counter\"\n                    class=\"rb-c-issue-summary-table__counter\">6</span>\n             </label>\n            </li>\n           </ul>\n          </header>\n          <table class=\"rb-c-review-request-field-tabular__data\">\n           <thead>\n            <tr>\n             <th class=\"-is-sortable\"></th>\n             <th class=\"-is-sortable\"></th>\n             <th class=\"-is-sortable\"></th>\n            </tr>\n           </thead>\n           <tbody>\n            <tr class=\"-is-resolved -is-hidden\"\n                data-issue-id=\"1\"\n                data-reviewer=\"user1\"\n                data-comment-type=\"diff\"\n                data-comment-href=\"#comment1\">\n             <td>\n              <span class=\"rb-icon rb-icon-issue-resolved\"></span>\n              <p>Resolved comment 1</p>\n             </td>\n             <td>user1</td>\n             <td>\n              <time class=\"timesince\" datetime=\"2017-02-01T20:30:00-07:00\">\n               February 1, 2017, 8:30 p.m.\n              </time>\n             </td>\n            </tr>\n            <tr class=\"-is-resolved -is-hidden\"\n                data-issue-id=\"2\"\n                data-reviewer=\"user2\"\n                data-comment-type=\"diff\"\n                data-comment-href=\"#comment2\">\n             <td>\n              <span class=\"rb-icon rb-icon-issue-resolved\"></span>\n              <p>Resolved comment 2</p>\n             </td>\n             <td>user2</td>\n             <td>\n              <time class=\"timesince\" datetime=\"2017-02-02T20:30:00-07:00\">\n               February 2, 2017, 8:30 p.m.\n              </time>\n             </td>\n            </tr>\n            <tr class=\"-is-resolved -is-hidden\"\n                data-issue-id=\"3\"\n                data-reviewer=\"user3\"\n                data-comment-type=\"diff\"\n                data-comment-href=\"#comment3\">\n             <td>\n              <span class=\"rb-icon rb-icon-issue-resolved\"></span>\n              <p>Resolved comment 3</p>\n             </td>\n             <td>user3</td>\n             <td>\n              <time class=\"timesince\" datetime=\"2017-02-03T20:30:00-07:00\">\n               February 3, 2017, 8:30 p.m.\n              </time>\n             </td>\n            </tr>\n            <tr class=\"-is-open\"\n                data-issue-id=\"4\"\n                data-reviewer=\"user1\"\n                data-comment-type=\"diff\"\n                data-comment-href=\"#comment4\">\n             <td>\n              <span class=\"rb-icon rb-icon-issue-open\"></span>\n              <p>Open comment 4</p>\n             </td>\n             <td>user1</td>\n             <td>\n              <time class=\"timesince\" datetime=\"2017-02-01T20:30:00-07:00\">\n               February 1, 2017, 8:30 p.m.\n              </time>\n             </td>\n            </tr>\n            <tr class=\"-is-open\"\n                data-issue-id=\"5\"\n                data-reviewer=\"user2\"\n                data-comment-type=\"diff\"\n                data-comment-href=\"#comment5\">\n             <td>\n              <span class=\"rb-icon rb-icon-issue-open\"></span>\n              <p>Open comment 5</p>\n             </td>\n             <td>user2</td>\n             <td>\n              <time class=\"timesince\" datetime=\"2017-02-02T20:30:00-07:00\">\n               February 2, 2017, 8:30 p.m.\n              </time>\n             </td>\n            </tr>\n            <tr class=\"-is-dropped -is-hidden\"\n                data-issue-id=\"6\"\n                data-reviewer=\"user1\"\n                data-comment-type=\"diff\"\n                data-comment-href=\"#comment6\">\n             <td>\n              <span class=\"rb-icon rb-icon-issue-dropped\"></span>\n              <p>Dropped comment 6</p>\n             </td>\n             <td>user1</td>\n             <td>\n              <time class=\"timesince\" datetime=\"2017-02-01T20:30:00-07:00\">\n               February 1, 2017, 8:30 p.m.\n              </time>\n             </td>\n            </tr>\n            <tr class=\"-is-verifying-dropped -is-hidden\"\n                data-issue-id=\"7\"\n                data-reviewer=\"user3\"\n                data-comment-type=\"diff\"\n                data-comment-href=\"#comment7\">\n             <td>\n              <span class=\"rb-icon rb-icon-issue-dropped\"></span>\n              <p>Verifying comment 7</p>\n             </td>\n             <td>user3</td>\n             <td>\n              <time class=\"timesince\" datetime=\"2017-02-03T18:30:00-07:00\">\n               February 3, 2017, 6:30 p.m.\n              </time>\n             </td>\n            </tr>\n            <tr class=\"-is-verifying-resolved -is-hidden\"\n                data-issue-id=\"8\"\n                data-reviewer=\"user2\"\n                data-comment-type=\"diff\"\n                data-comment-href=\"#comment8\">\n             <td>\n              <span class=\"rb-icon rb-icon-issue-dropped\"></span>\n              <p>Verifying comment 8 - resolved</p>\n             </td>\n             <td>user2</td>\n             <td>\n              <time class=\"timesince\" datetime=\"2017-02-04T20:30:00-07:00\">\n               February 4, 2017, 8:30 p.m.\n              </time>\n             </td>\n            </tr>\n           </tbody>\n          </table>\n         </div>\n        </div>\n    `);\n    const TAB_SEL = '.rb-c-tabs__tab';\n    const NO_ISSUES_SEL = '.rb-c-issue-summary-table__no-issues';\n    const ISSUE_ROW_SEL = `tbody tr:not(${NO_ISSUES_SEL})`;\n    const DESCRIPTION_HEADER_SEL = 'th:nth-child(1)';\n    const REVIEWER_HEADER_SEL = 'th:nth-child(2)';\n    const LAST_UPDATED_HEADER_SEL = 'th:nth-child(3)';\n    const LAST_UPDATED_CELL_SEL = 'td:nth-child(3)';\n    let view;\n\n    function getTab(state) {\n        return view.$(`${TAB_SEL}[data-issue-state=\"${state}\"]`);\n    }\n\n    beforeEach(function() {\n        view = new RB.ReviewRequestPage.IssueSummaryTableView({\n            el: $(issueSummaryTableTemplate()),\n            model: new RB.CommentIssueManager(),\n        });\n        view.$el.appendTo($testsScratch);\n    });\n\n    describe('render', function() {\n        it('Initial state', function() {\n            view.render();\n\n            expect(view.statusFilterState).toBe('open');\n            expect(view.reviewerFilterState).toBe('all');\n            expect(view.reviewerToSelectorMap).toEqual({\n                all: '',\n                user1: '[data-reviewer=\"user1\"]',\n                user2: '[data-reviewer=\"user2\"]',\n                user3: '[data-reviewer=\"user3\"]',\n            });\n\n            const $reviewers = view._$reviewerFilter.children();\n            expect($reviewers.length).toBe(4);\n            expect($reviewers.eq(0).val()).toBe('all');\n            expect($reviewers.eq(1).val()).toBe('user1');\n            expect($reviewers.eq(2).val()).toBe('user2');\n            expect($reviewers.eq(3).val()).toBe('user3');\n        });\n\n        it('With existing state', function() {\n            view.render();\n\n            view.statusFilterState = 'dropped';\n            view.reviewerFilterState = 'user1';\n\n            /* Fully replace the element, like when an update is applied. */\n            const $oldEl = view.$el;\n            view.setElement($(issueSummaryTableTemplate()));\n            $oldEl.replaceWith(view.$el);\n            view.render();\n\n            expect(view.statusFilterState).toBe('dropped');\n            expect(view.reviewerFilterState).toBe('user1');\n            expect(view.reviewerToSelectorMap).toEqual({\n                all: '',\n                user1: '[data-reviewer=\"user1\"]',\n                user2: '[data-reviewer=\"user2\"]',\n                user3: '[data-reviewer=\"user3\"]',\n            });\n\n            const $activeTab = view.$('.rb-c-tabs__tab.-is-active');\n            expect($activeTab.length).toBe(1);\n            expect($activeTab.data('issue-state')).toBe('dropped');\n            expect($activeTab[0]).toBe(view._$currentTab[0]);\n\n            const $reviewer = view.$(\n                '.rb-c-issue-summary-table__reviewer-filter');\n            expect($reviewer.length).toBe(1);\n            expect($reviewer[0]).toBe(view._$reviewerFilter[0]);\n            expect($reviewer.val()).toBe('user1');\n\n            const $issues = view.$el.find(ISSUE_ROW_SEL).not('.-is-hidden');\n            expect($issues.length).toBe(1);\n\n            const $issue = $issues.eq(0);\n            expect($issue.hasClass('-is-dropped')).toBe(true);\n            expect($issue.data('reviewer')).toBe('user1');\n        });\n    });\n\n    describe('Filters', function() {\n        describe('Reviewer filter', function() {\n            describe('To all', function() {\n                it('With issues', function() {\n                    view.render();\n\n                    view._$reviewerFilter.val('user1');\n                    view._$reviewerFilter.trigger('change');\n\n                    view._$reviewerFilter.val('all');\n                    view._$reviewerFilter.trigger('change');\n\n                    const $issues =\n                        view.$el\n                        .find(ISSUE_ROW_SEL)\n                        .not('.-is-hidden');\n                    expect($issues.length).toBe(2);\n                    expect($issues.eq(0).data('issue-id')).toBe(4);\n                    expect($issues.eq(1).data('issue-id')).toBe(5);\n                });\n\n                it('Without issues', function() {\n                    view.$el.find(ISSUE_ROW_SEL).remove();\n                    view.render();\n\n                    view._$reviewerFilter.val('user1');\n                    view._$reviewerFilter.trigger('change');\n\n                    view._$reviewerFilter.val('all');\n                    view._$reviewerFilter.trigger('change');\n\n                    expect(view.$el\n                           .find(ISSUE_ROW_SEL)\n                           .not('.-is-hidden').length)\n                        .toBe(0);\n\n                    const $noIssues = view.$(NO_ISSUES_SEL);\n                    expect($noIssues.length).toBe(1);\n                });\n            });\n\n            describe('To user', function() {\n                it('With issues', function() {\n                    view.render();\n                    view._$reviewerFilter.val('user1');\n                    view._$reviewerFilter.trigger('change');\n\n                    const $issues =\n                        view.$el\n                        .find(ISSUE_ROW_SEL)\n                        .not('.-is-hidden');\n                    expect($issues.length).toBe(1);\n                    expect($issues.eq(0).data('issue-id')).toBe(4);\n                });\n\n                describe('Without issues', function() {\n                    function testByUserWithoutIssues(state) {\n                        it(`And filtered by ${state} issues`, function() {\n                            view.$el\n                                .find(`${ISSUE_ROW_SEL}.-is-${state}` +\n                                      '[data-reviewer=\"user1\"]')\n                                .remove();\n                            view.render();\n\n                            view._$reviewerFilter.val('user1');\n                            view._$reviewerFilter.trigger('change');\n\n                            const $tab = getTab(state);\n                            $tab.click();\n\n                            expect(view.$el\n                                   .find(ISSUE_ROW_SEL)\n                                   .not('.-is-hidden').length)\n                                .toBe(0);\n\n                            const $noIssues = view.$(NO_ISSUES_SEL);\n                            expect($noIssues.length).toBe(1);\n                            expect($noIssues.text().strip()).toBe(\n                                `There are no ${state} issues from user1`);\n                        });\n                    }\n\n                    testByUserWithoutIssues('open');\n                    testByUserWithoutIssues('resolved');\n                    testByUserWithoutIssues('dropped');\n                });\n            });\n        });\n\n        describe('Status filters', function() {\n            function testStatusFilters(options) {\n                const state = options.state;\n\n                describe(options.description, function() {\n                    it('With issues', function() {\n                        const expectedIDs = options.expectedIDs;\n\n                        view.render();\n\n                        const $tab = getTab(state);\n                        $tab.click();\n                        expect($tab.hasClass('-is-active')).toBe(true);\n\n                        const $allIssues = view.$el.find(ISSUE_ROW_SEL);\n                        const $issues = $allIssues.not('.-is-hidden');\n\n                        expect(view.$el\n                               .find(`${ISSUE_ROW_SEL}.-is-hidden`).length)\n                            .toBe($allIssues.length - expectedIDs.length);\n                        expect($issues.length).toBe(expectedIDs.length);\n                        expect(view.$(NO_ISSUES_SEL).length).toBe(0);\n\n                        for (let i = 0; i < expectedIDs.length; i++) {\n                            expect($issues.eq(i).data('issue-id'))\n                                .toBe(expectedIDs[i]);\n                        }\n                    });\n\n                    it('Without issues', function() {\n                        const stateSel = view.stateToSelectorMap[state];\n                        view.$el\n                            .find(`${ISSUE_ROW_SEL}${stateSel}`)\n                            .remove();\n                        view.render();\n\n                        const $tab = getTab(state);\n                        $tab.click();\n                        expect($tab.hasClass('-is-active')).toBe(true);\n\n                        expect(view.$el\n                               .find(ISSUE_ROW_SEL)\n                               .not('.-is-hidden').length)\n                            .toBe(0);\n\n                        const $noIssues = view.$(NO_ISSUES_SEL);\n                        expect($noIssues.length).toBe(1);\n                        expect($noIssues.text().strip())\n                            .toBe(options.noIssuesText);\n                    });\n                });\n            }\n\n            testStatusFilters({\n                description: 'All',\n                state: 'all',\n                expectedIDs: [1, 2, 3, 4, 5, 6, 7, 8],\n                noIssuesText: '',\n            });\n\n            testStatusFilters({\n                description: 'Verifying',\n                state: 'verifying',\n                expectedIDs: [7, 8],\n                noIssuesText: 'There are no issues waiting for verification',\n            });\n\n            testStatusFilters({\n                description: 'Open',\n                state: 'open',\n                expectedIDs: [4, 5],\n                noIssuesText: 'There are no open issues',\n            });\n\n            testStatusFilters({\n                description: 'Resolved',\n                state: 'resolved',\n                expectedIDs: [1, 2, 3],\n                noIssuesText: 'There are no resolved issues',\n            });\n\n            testStatusFilters({\n                description: 'Dropped',\n                state: 'dropped',\n                expectedIDs: [6],\n                noIssuesText: 'There are no dropped issues',\n            });\n        });\n    });\n\n    describe('Events', function() {\n        it('Issue clicked', function() {\n            const cb = jasmine.createSpy();\n\n            view.render();\n            view.on('issueClicked', cb);\n\n            view.commentIDToRowMap['4'].click();\n\n            expect(cb).toHaveBeenCalledWith({\n                commentType: 'diff',\n                commentID: 4,\n                commentURL: '#comment4',\n            });\n        });\n\n        describe('Issue status updated', function() {\n            const date = new Date(2017, 7, 6, 1, 4, 30);\n            let $issue;\n            let $icon;\n            let comment;\n\n            beforeEach(function() {\n                comment = new RB.DiffComment({\n                    id: 4,\n                });\n\n                view.render();\n                expect(view.$('#resolved-counter').text()).toBe('3');\n                expect(view.$('#open-counter').text()).toBe('2');\n                expect(view.$('#dropped-counter').text()).toBe('1');\n                expect(view.$('#total-counter').text()).toBe('6');\n\n                $issue = view.commentIDToRowMap['4'];\n                $icon = $issue.find('.rb-icon');\n            });\n\n            it('To dropped', function() {\n                comment.set('issueStatus', 'dropped');\n                view.model.trigger('issueStatusUpdated', comment, 'open', date);\n\n                expect(view.$('#open-counter').text()).toBe('1');\n                expect(view.$('#dropped-counter').text()).toBe('2');\n                expect(view.$('#total-counter').text()).toBe('6');\n\n                expect($icon.hasClass('rb-icon-issue-open')).toBe(false);\n                expect($icon.hasClass('rb-icon-issue-dropped')).toBe(true);\n            });\n\n            it('To resolved', function() {\n                comment.set('issueStatus', 'resolved');\n                view.model.trigger('issueStatusUpdated', comment, 'open', date);\n\n                expect(view.$('#resolved-counter').text()).toBe('4');\n                expect(view.$('#open-counter').text()).toBe('1');\n                expect(view.$('#total-counter').text()).toBe('6');\n\n                expect($icon.hasClass('rb-icon-issue-open')).toBe(false);\n                expect($icon.hasClass('rb-icon-issue-resolved')).toBe(true);\n            });\n\n            it('To open', function() {\n                comment.set({\n                    issueStatus: 'open',\n                    id: 1,\n                });\n                view.model.trigger('issueStatusUpdated', comment, 'resolved',\n                                   date);\n\n                $issue = view.commentIDToRowMap['1'];\n                $icon = $issue.find('.rb-icon');\n\n                expect(view.$('#resolved-counter').text()).toBe('2');\n                expect(view.$('#open-counter').text()).toBe('3');\n                expect(view.$('#total-counter').text()).toBe('6');\n\n                expect($icon.hasClass('rb-icon-issue-resolved')).toBe(false);\n                expect($icon.hasClass('rb-icon-issue-open')).toBe(true);\n            });\n\n            it('After re-renders', function() {\n                view.render();\n                view.render();\n\n                comment.set('issueStatus', 'resolved');\n                view.model.trigger('issueStatusUpdated', comment, 'open',\n                                   date);\n\n                expect(view.$('#resolved-counter').text()).toBe('4');\n                expect(view.$('#open-counter').text()).toBe('1');\n                expect(view.$('#total-counter').text()).toBe('6');\n\n                expect($icon.hasClass('rb-icon-issue-open')).toBe(false);\n                expect($icon.hasClass('rb-icon-issue-resolved')).toBe(true);\n            });\n\n            afterEach(function() {\n                expect($issue.find(`${LAST_UPDATED_CELL_SEL} time`)\n                       .attr('datetime'))\n                    .toBe(date.toISOString());\n            });\n        });\n\n        describe('Header clicked', function() {\n            function testHeaderSorting(options) {\n                it(options.description, function() {\n                    view.render();\n\n                    const event = $.Event('click');\n                    event.shiftKey = !!options.shiftKey;\n\n                    const $header = view.$(options.headerSel);\n                    console.assert($header.length === 1);\n\n                    $header.trigger(event);\n\n                    const $issues = view.$(ISSUE_ROW_SEL);\n                    expect($issues.length).toBe(8);\n\n                    const foundIDs = [];\n\n                    for (let i = 0; i < $issues.length; i++) {\n                        foundIDs.push($issues.eq(i).data('issue-id'));\n                    }\n\n                    expect(foundIDs).toEqual(options.expectedIDs);\n                });\n            }\n\n            describe('Ascending', function() {\n                testHeaderSorting({\n                    description: 'Description',\n                    headerSel: DESCRIPTION_HEADER_SEL,\n                    expectedIDs: [6, 4, 5, 1, 2, 3, 7, 8],\n                });\n\n                testHeaderSorting({\n                    description: 'From',\n                    headerSel: REVIEWER_HEADER_SEL,\n                    expectedIDs: [1, 4, 6, 2, 5, 8, 3, 7],\n                });\n\n                testHeaderSorting({\n                    description: 'Last Updated',\n                    headerSel: LAST_UPDATED_HEADER_SEL,\n                    expectedIDs: [8, 3, 7, 2, 5, 1, 4, 6],\n                });\n            });\n\n            describe('Descending', function() {\n                testHeaderSorting({\n                    description: 'Description',\n                    headerSel: DESCRIPTION_HEADER_SEL,\n                    expectedIDs: [8, 7, 3, 2, 1, 5, 4, 6],\n                    shiftKey: true,\n                });\n\n                testHeaderSorting({\n                    description: 'From',\n                    headerSel: REVIEWER_HEADER_SEL,\n                    expectedIDs: [3, 7, 2, 5, 8, 1, 4, 6],\n                    shiftKey: true,\n                });\n\n                testHeaderSorting({\n                    description: 'Last Updated',\n                    headerSel: LAST_UPDATED_HEADER_SEL,\n                    expectedIDs: [1, 4, 6, 2, 5, 7, 3, 8],\n                    shiftKey: true,\n                });\n            });\n        });\n    });\n});\n"]}