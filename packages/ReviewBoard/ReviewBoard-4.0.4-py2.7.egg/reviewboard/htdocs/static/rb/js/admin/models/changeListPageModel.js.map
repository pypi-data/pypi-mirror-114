{"version":3,"sources":["changeListPageModel.es6.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA,GAAG,KAAH,CAAS,cAAT,GAA0B,GAAG,IAAH,CAAQ,MAAR,CAAe;AACrC,cAAU,EAAE,QAAF,CAAW,GAAG,IAAH,CAAQ,SAAR,CAAkB,QAA7B,EAAuC;AAC7C,iBAAS,EADoC;AAE7C,wBAAgB;AAF6B,KAAvC,CAD2B;;AAMrC;;;AAGA,cATqC,wBASxB;AAAA;;AACT,WAAG,IAAH,CAAQ,SAAR,CAAkB,UAAlB,CAA6B,KAA7B,CAAmC,IAAnC,EAAyC,SAAzC;;AAEA,aAAK,SAAL,GAAiB,IAAI,SAAS,UAAb,EAAjB;AACA,aAAK,QAAL,CAAc,KAAK,SAAnB,EAA8B,kBAA9B,EACc;AAAA,mBAAM,MAAK,GAAL,CAAS,gBAAT,EAA2B,MAAK,SAAL,CAAe,MAA1C,CAAN;AAAA,SADd;AAEH,KAfoC;;;AAiBrC;;;;;;;AAOA,UAxBqC,kBAwB9B,EAxB8B,EAwB1B;AACP,aAAK,SAAL,CAAe,GAAf,CAAmB;AACf,gBAAI;AADW,SAAnB;AAGH,KA5BoC;;;AA8BrC;;;;;;;AAOA,YArCqC,oBAqC5B,EArC4B,EAqCxB;AACT,aAAK,SAAL,CAAe,MAAf,CAAsB,KAAK,SAAL,CAAe,GAAf,CAAmB,EAAnB,CAAtB;AACH;AAvCoC,CAAf,CAA1B","file":"changeListPageModel.js","sourcesContent":["/**\n * The model for the Administration UI's Change List page.\n *\n * This manages the selection state for the rows in the page.\n *\n * Attributes:\n *     selection (Backbone.Collection of Backbone.Model):\n *         The collection managing selected items. Each is a basic model with\n *         an ID corresponding to the item's ID.\n *\n * Model Attributes:\n *     actions (Array of object):\n *         The actions that are enabled for items on the page. Each is an\n *         object with the following keys:\n *\n *         ``id`` (:js:class:`string`):\n *             The action's identifier.\n *\n *         ``label`` (:js:class:`string`):\n *             The human-readable label.\n */\nRB.Admin.ChangeListPage = RB.Page.extend({\n    defaults: _.defaults(RB.Page.prototype.defaults, {\n        actions: [],\n        selectionCount: 0,\n    }),\n\n    /**\n     * Initialize the page model.\n     */\n    initialize() {\n        RB.Page.prototype.initialize.apply(this, arguments);\n\n        this.selection = new Backbone.Collection();\n        this.listenTo(this.selection, 'add remove reset',\n                      () => this.set('selectionCount', this.selection.length));\n    },\n\n    /**\n     * Mark an item as selected.\n     *\n     * Args:\n     *     id (number):\n     *         The ID of the item to mark as selected.\n     */\n    select(id) {\n        this.selection.add({\n            id: id,\n        });\n    },\n\n    /**\n     * Mark an item as no longer being selected.\n     *\n     * Args:\n     *     id (number):\n     *         The ID of the item to unselect.\n     */\n    unselect(id) {\n        this.selection.remove(this.selection.get(id));\n    },\n});\n"]}