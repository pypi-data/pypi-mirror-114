{"version":3,"sources":["diffFileIndexView.es6.js"],"names":[],"mappings":"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","file":"diffFileIndexView.js","sourcesContent":["/**\n * Displays the file index for the diffs on a page.\n *\n * The file page lists the names of the files, as well as a little graph\n * icon showing the relative size and complexity of a file, a list of chunks\n * (and their types), and the number of lines added and removed.\n */\nRB.DiffFileIndexView = Backbone.View.extend({\n    chunkTemplate: _.template(\n        '<a href=\"#<%= chunkID %>\" class=\"<%= className %>\"> </a>'\n    ),\n\n    _itemTemplate: _.template(dedent`\n        <tr class=\"loading\n         <% if (newfile) { %>new-file<% } %>\n         <% if (binary) { %>binary-file<% } %>\n         <% if (deleted) { %>deleted-file<% } %>\n         <% if (destFilename !== depotFilename) { %>renamed-file<% } %>\n         \">\n         <td class=\"diff-file-icon\">\n          <span class=\"fa fa-spinner fa-pulse\"></span>\n         </td>\n         <td class=\"diff-file-info\">\n          <a href=\"#<%- index %>\"><%- destFilename %></a>\n          <% if (destFilename !== depotFilename) { %>\n          <span class=\"diff-file-rename\"><%- wasText %></span>\n          <% } %>\n         </td>\n         <td class=\"diff-chunks-cell\">\n          <% if (binary) { %>\n           <%- binaryFileText %>\n          <% } else if (deleted) { %>\n           <%- deletedFileText %>\n          <% } else { %>\n           <div class=\"diff-chunks\"></div>\n          <% } %>\n         </td>\n        </tr>\n    `),\n\n    events: {\n        'click a': '_onAnchorClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     collection (RB.DiffFileCollection):\n     *         The collection containing the files.\n     */\n    initialize(options) {\n        this.options = options;\n        this._$items = null;\n        this._$itemsTable = null;\n\n        this.collection = this.options.collection;\n        this.listenTo(this.collection, 'reset update', this.update);\n    },\n\n    /**\n     * Render the view to the page.\n     *\n     * Returns:\n     *     RB.DiffFileIndexView:\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.empty();\n\n        this._$itemsTable = $('<table/>').appendTo(this.$el);\n        this._$items = this.$('tr');\n\n        // Add the files from the collection\n        this.update();\n\n        return this;\n    },\n\n    /**\n     * Update the list of files in the index view.\n     */\n    update() {\n        this._$itemsTable.empty();\n\n        this.collection.each(file => {\n            this._$itemsTable.append(this._itemTemplate(\n                _.defaults({\n                    binaryFileText: gettext('Binary file'),\n                    deletedFileText: gettext('Deleted'),\n                    wasText: interpolate(gettext('Was %s'),\n                                         [file.get('depotFilename')]),\n                }, file.attributes)\n            ));\n        });\n\n        this._$items = this.$('tr');\n    },\n\n    /**\n     * Add a loaded diff to the index.\n     *\n     * The reserved entry for the diff will be populated with a link to the\n     * diff, and information about the diff.\n     *\n     * Args:\n     *     index (number):\n     *         The array index at which to add the new diff.\n     *\n     *     diffReviewableView (RB.DiffReviewableView):\n     *         The view corresponding to the diff file being added.\n     */\n    addDiff(index, diffReviewableView) {\n        const $item = $(this._$items[index])\n            .removeClass('loading');\n\n        if (diffReviewableView.$el.hasClass('diff-error')) {\n            this._renderDiffError($item);\n        } else {\n            this._renderDiffEntry($item, diffReviewableView);\n        }\n    },\n\n    /**\n     * Render a diff loading error.\n     *\n     * An error icon will be displayed in place of the typical complexity\n     * icon.\n     *\n     * Args:\n     *     $item (jQuery):\n     *         The item in the file index which encountered the error.\n     */\n    _renderDiffError($item) {\n        $item.find('.diff-file-icon')\n            .html('<div class=\"rb-icon rb-icon-warning\" />')\n            .attr('title',\n                  gettext('There was an error loading this diff. See the details below.'));\n    },\n\n    /**\n     * Render the display of a loaded diff.\n     *\n     * Args:\n     *     $item (jQuery):\n     *         The item in the file index which was loaded.\n     *\n     *     diffReviewableView (RB.DiffReviewableView):\n     *         The view corresponding to the diff file which was loaded.\n     */\n    _renderDiffEntry($item, diffReviewableView) {\n        const $table = diffReviewableView.$el;\n        const fileDeleted = $item.hasClass('deleted-file');\n        const fileAdded = $item.hasClass('new-file');\n        const linesEqual = $table.data('lines-equal');\n        let numDeletes = 0;\n        let numInserts = 0;\n        let numReplaces = 0;\n        let tooltip = '';\n        const tooltipParts = [];\n        const chunksList = [];\n\n        if (fileAdded) {\n            numInserts = 1;\n        } else if (fileDeleted) {\n            numDeletes = 1;\n        } else if ($item.hasClass('binary-file')) {\n            numReplaces = 1;\n        } else {\n            $table.children('tbody').each((i, chunk) => {\n                const numRows = chunk.rows.length;\n                const $chunk = $(chunk);\n\n                if ($chunk.hasClass('delete')) {\n                    numDeletes += numRows;\n                } else if ($chunk.hasClass('insert')) {\n                    numInserts += numRows;\n                } else if ($chunk.hasClass('replace')) {\n                    numReplaces += numRows;\n                } else {\n                    return;\n                }\n\n                chunksList.push(this.chunkTemplate({\n                    chunkID: chunk.id.substr(5),\n                    className: chunk.className,\n                }));\n            });\n\n            /* Add clickable blocks for each diff chunk. */\n            $item.find('.diff-chunks').html(chunksList.join(''));\n        }\n\n        /* Render the complexity icon. */\n        const iconView = new RB.DiffComplexityIconView({\n            numInserts: numInserts,\n            numDeletes: numDeletes,\n            numReplaces: numReplaces,\n            totalLines: linesEqual + numDeletes + numInserts + numReplaces,\n        });\n\n        const $fileIcon = $item.find('.diff-file-icon');\n        $fileIcon\n            .empty()\n            .append(iconView.$el);\n\n        iconView.render();\n\n        /* Add tooltip for icon */\n        if (fileAdded) {\n            tooltip = gettext('New file');\n        } else if (fileDeleted) {\n            tooltip = gettext('Deleted file');\n        } else {\n            if (numInserts > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s new line', '%s new lines', numInserts),\n                    [numInserts]));\n            }\n\n            if (numReplaces > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s line changed', '%s lines changed', numReplaces),\n                    [numReplaces]));\n            }\n\n            if (numDeletes > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s line removed', '%s lines removed', numDeletes),\n                    [numDeletes]));\n            }\n\n            tooltip = tooltipParts.join(', ');\n        }\n\n        $fileIcon.attr('title', tooltip);\n\n        this.listenTo(\n            diffReviewableView,\n            'chunkDimmed chunkUndimmed',\n            chunkID => {\n                this.$(`a[href=\"#${chunkID}\"]`).toggleClass('dimmed');\n            });\n    },\n\n    /**\n     * Handler for when an anchor is clicked.\n     *\n     * Gets the name of the target and emits anchorClicked.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _onAnchorClicked: function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.trigger('anchorClicked', e.target.href.split('#')[1]);\n    },\n});\n"]}