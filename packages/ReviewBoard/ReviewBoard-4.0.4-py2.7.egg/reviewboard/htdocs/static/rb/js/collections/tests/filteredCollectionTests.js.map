{"version":3,"sources":["filteredCollectionTests.es6.js"],"names":[],"mappings":"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","file":"filteredCollectionTests.js","sourcesContent":["suite('rb/collections/FilteredCollection', function() {\n    let mainCollection;\n\n    beforeEach(function() {\n        mainCollection = new Backbone.Collection([\n            {\n                id: 1,\n                label: 'One',\n                bool: true,\n            },\n            {\n                id: 2,\n                label: 'Two',\n                bool: false,\n            },\n            {\n                id: 3,\n                label: 'Three',\n                bool: true,\n            },\n        ]);\n    });\n\n    describe('Initialization', function() {\n        it('Defaults to full contents', function() {\n            const filteredCollection = new RB.FilteredCollection(null, {\n                collection: mainCollection,\n            });\n\n            expect(filteredCollection.length).toBe(mainCollection.length);\n        });\n\n        it('Respects provided filter', function() {\n            const filteredCollection = new RB.FilteredCollection(null, {\n                collection: mainCollection,\n                filters: {\n                    label: 'T',\n                },\n            });\n\n            expect(filteredCollection.length).toBe(2);\n            expect(filteredCollection.at(0).id).toBe(2);\n            expect(filteredCollection.at(1).id).toBe(3);\n        });\n    });\n\n    describe('Methods', function() {\n        let filteredCollection;\n\n        beforeEach(function() {\n            filteredCollection = new RB.FilteredCollection(null, {\n                collection: mainCollection,\n                filters: {\n                    label: 'T',\n                },\n            });\n\n            expect(filteredCollection.length).toBe(2);\n        });\n\n        describe('setFilters', function() {\n            it('With new filter', function() {\n                filteredCollection.setFilters({\n                    label: 'O',\n                });\n\n                expect(filteredCollection.length).toBe(1);\n                expect(filteredCollection.at(0).id).toBe(1);\n            });\n\n            it('With multiple filters', function() {\n                filteredCollection.setFilters({\n                    label: 'T',\n                    bool: false,\n                });\n\n                expect(filteredCollection.length).toBe(1);\n                expect(filteredCollection.at(0).id).toBe(2);\n            });\n\n            it('{}', function() {\n                filteredCollection.setFilters({});\n\n                expect(filteredCollection.length).toBe(3);\n            });\n\n            it('null', function() {\n                filteredCollection.setFilters(null);\n\n                expect(filteredCollection.length).toBe(3);\n            });\n\n            it('undefined', function() {\n                filteredCollection.setFilters();\n\n                expect(filteredCollection.length).toBe(3);\n            });\n        });\n    });\n\n    describe('Main collection events', function() {\n        describe('With filters', function() {\n            let filteredCollection;\n\n            beforeEach(function() {\n                filteredCollection = new RB.FilteredCollection(null, {\n                    collection: mainCollection,\n                    filters: {\n                        label: 'T',\n                    },\n                });\n\n                expect(filteredCollection.length).toBe(2);\n            });\n\n            it('reset', function() {\n                mainCollection.reset([\n                    {\n                        id: 10,\n                        label: 'Monday',\n                    },\n                    {\n                        id: 11,\n                        label: 'Tuesday',\n                    },\n                ]);\n\n                expect(filteredCollection.length).toBe(1);\n                expect(filteredCollection.at(0).id).toBe(11);\n            });\n\n            describe('add', function() {\n                it('Matching filter', function() {\n                    mainCollection.add({\n                        id: 4,\n                        label: 'Test',\n                    });\n\n                    expect(filteredCollection.length).toBe(3);\n                    expect(filteredCollection.at(2).id).toBe(4);\n                });\n\n                it('Not matching filter', function() {\n                    mainCollection.add({\n                        id: 4,\n                        label: 'Four',\n                    });\n\n                    expect(filteredCollection.length).toBe(2);\n                });\n            });\n\n            describe('remove', function() {\n                it('Matching filter', function() {\n                    mainCollection.remove(mainCollection.get(2));\n\n                    expect(filteredCollection.length).toBe(1);\n                });\n\n                it('Not matching filter', function() {\n                    mainCollection.remove(mainCollection.get(0));\n\n                    expect(filteredCollection.length).toBe(2);\n                });\n            });\n        });\n\n        describe('Without filters', function() {\n            let filteredCollection;\n\n            beforeEach(function() {\n                filteredCollection = new RB.FilteredCollection(null, {\n                    collection: mainCollection,\n                });\n\n                expect(filteredCollection.length).toBe(3);\n            });\n\n            it('reset', function() {\n                mainCollection.reset([\n                    {\n                        id: 10,\n                        label: 'Monday',\n                    },\n                    {\n                        id: 11,\n                        label: 'Tuesday',\n                    },\n                ]);\n\n                expect(filteredCollection.length).toBe(2);\n            });\n\n            it('add', function() {\n                mainCollection.add({\n                    id: 4,\n                    label: 'Four',\n                });\n\n                expect(filteredCollection.length).toBe(4);\n                expect(filteredCollection.at(3).id).toBe(4);\n            });\n\n            it('remove', function() {\n                mainCollection.remove(mainCollection.get(1));\n                expect(filteredCollection.length).toBe(2);\n            });\n        });\n    });\n});\n"]}