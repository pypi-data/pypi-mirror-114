{"version":3,"sources":["postCommitViewTests.es6.js"],"names":[],"mappings":"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","file":"postCommitViewTests.js","sourcesContent":["suite('rb/newReviewRequest/views/PostCommitView', function() {\n    let repository;\n    let commits;\n    let model;\n    let view;\n\n    beforeEach(function() {\n        repository = new RB.Repository({\n            name: 'Repo',\n            supportsPostCommit: true,\n        });\n\n        spyOn(repository.branches, 'sync').and.callFake(\n            (method, collection, options) => {\n                options.success({\n                    stat: 'ok',\n                    branches: [\n                        {\n                            name: 'master',\n                            commit: '859d4e148ce3ce60bbda6622cdbe5c2c2f8d9817',\n                            'default': true,\n                        },\n                        {\n                            name: 'release-1.7.x',\n                            commit: '92463764015ef463b4b6d1a1825fee7aeec8cb15',\n                            'default': false,\n                        },\n                        {\n                            name: 'release-1.6.x',\n                            commit: 'a15d0e635064a2e1929ce1bf3bc8d4aa65738b64',\n                            'default': false,\n                        },\n                    ],\n                });\n            }\n        );\n\n        spyOn(repository, 'getCommits').and.callFake(options => {\n            commits = new RB.RepositoryCommits([], {\n                urlBase: _.result(this, 'url') + 'commits/',\n                start: options.start,\n                branch: options.branch,\n            });\n\n            spyOn(commits, 'sync').and.callFake(\n                (method, collection, options) => {\n                    options.success({\n                        stat: 'ok',\n                        commits: [\n                            {\n                                authorName: 'Author 1',\n                                date: '2013-07-22T03:51:50Z',\n                                id: '3',\n                                message: 'Summary 1\\n\\nMessage 1',\n                                parent: '2',\n                            },\n                            {\n                                authorName: 'Author 2',\n                                date: '2013-07-22T03:50:46Z',\n                                id: '2',\n                                message: 'Summary 2\\n\\nMessage 2',\n                                parent: '1',\n                            },\n                            {\n                                authorName: 'Author 3',\n                                date: '2013-07-21T08:05:45Z',\n                                id: '1',\n                                message: 'Summary 3\\n\\nMessage 3',\n                                parent: '',\n                            },\n                        ],\n                    });\n                }\n            );\n\n            return commits;\n        });\n\n        model = new RB.PostCommitModel({ repository: repository });\n        view = new RB.PostCommitView({\n            model: model,\n            $scrollContainer: $('<div>'),\n        });\n\n        spyOn(RB.PostCommitView.prototype, '_onCreateReviewRequest')\n            .and.callThrough();\n\n        expect(repository.branches.sync).toHaveBeenCalled();\n    });\n\n    it('Render', function() {\n        view.render();\n\n        expect(commits.sync).toHaveBeenCalled();\n\n        expect(view._branchesView.$el.children().length).toBe(3);\n        expect(view._commitsView.$el.children().length).toBe(3);\n    });\n\n    it('Create', function() {\n        view.render();\n\n        spyOn(RB.ReviewRequest.prototype, 'save').and.returnValue();\n\n        const commit = commits.models[1];\n        commit.trigger('create', commit);\n\n        expect(RB.PostCommitView.prototype._onCreateReviewRequest).toHaveBeenCalled();\n        expect(RB.ReviewRequest.prototype.save).toHaveBeenCalled();\n\n        expect(RB.ReviewRequest.prototype.save.calls.count()).toBe(1);\n\n        const call = RB.ReviewRequest.prototype.save.calls.mostRecent();\n        expect(call.object.get('commitID')).toBe(commit.get('id'));\n    });\n\n    describe('Error handling', function() {\n        describe('Branches', function() {\n            const xhr = { errorText: 'Oh no' };\n            let returnError;\n\n            beforeEach(function() {\n                spyOn(repository.branches, 'fetch').and.callFake(\n                    (options, context) => {\n                        if (returnError) {\n                            options.error.call(context, repository.branches,\n                                               xhr);\n                        } else {\n                            options.success.call(context);\n                        }\n                    });\n\n                returnError = true;\n\n                spyOn(RB.PostCommitView.prototype, '_showLoadError')\n                    .and.callThrough();\n\n                view._loadBranches();\n            });\n\n            it('UI state', function() {\n                expect(repository.branches.fetch).toHaveBeenCalled();\n                expect(view._showLoadError).toHaveBeenCalledWith(\n                    'branches', xhr);\n                expect(view._branchesView.$el.css('display')).toBe('none');\n                expect(view._$error).toBeTruthy();\n                expect(view._$error.length).toBe(1);\n                expect(view._commitsView).toBeFalsy();\n                expect(view._$error.find('.error-text').text().strip())\n                    .toBe('Oh no');\n                expect(view._$error.find('a')[0].id).toBe('reload_branches');\n            });\n\n            it('Reloading', function() {\n                spyOn(view, '_loadBranches').and.callThrough();\n\n                /* Make sure the spy is called from the event handler. */\n                view.delegateEvents();\n\n                returnError = false;\n\n                expect(view._$error).toBeTruthy();\n                const $reload = view._$error.find('#reload_branches');\n                expect($reload.length).toBe(1);\n                $reload.click();\n\n                expect(view._loadBranches).toHaveBeenCalled();\n\n                expect(view._$error).toBe(null);\n                expect(view._branchesView.$el.css('display')).not.toBe('none');\n            });\n        });\n\n        describe('Commits', function() {\n            const xhr = { errorText: 'Oh no' };\n            let returnError;\n\n            beforeEach(function() {\n                view.render();\n\n                spyOn(RB.RepositoryCommits.prototype, 'fetch').and.callFake(\n                    (options, context) => {\n                        if (returnError) {\n                            options.error.call(context, repository.commits,\n                                               xhr);\n                        } else {\n                            options.success.call(context);\n                        }\n                    });\n\n                returnError = true;\n\n                spyOn(RB.PostCommitView.prototype, '_showLoadError')\n                    .and.callThrough();\n\n                view._loadCommits();\n            });\n\n            it('UI state', function() {\n                expect(view._commitsCollection.fetch).toHaveBeenCalled();\n                expect(view._showLoadError).toHaveBeenCalledWith(\n                    'commits', xhr);\n                expect(view._commitsView.$el.css('display')).toBe('none');\n                expect(view._$error).toBeTruthy();\n                expect(view._$error.length).toBe(1);\n                expect(view._commitsView).toBeTruthy();\n                expect(view._commitsView.$el.css('display')).toBe('none');\n                expect(view._$error.find('.error-text').text().strip())\n                    .toBe('Oh no');\n                expect(view._$error.find('a')[0].id).toBe('reload_commits');\n            });\n\n            it('Reloading', function() {\n                spyOn(view, '_loadCommits').and.callThrough();\n\n                /* Make sure the spy is called from the event handler. */\n                view.delegateEvents();\n\n                returnError = false;\n\n                expect(view._$error).toBeTruthy();\n                const $reload = view._$error.find('#reload_commits');\n                expect($reload.length).toBe(1);\n                $reload.click();\n\n                expect(view._loadCommits).toHaveBeenCalled();\n\n                expect(view._$error).toBe(null);\n\n                /*\n                 * Chrome returns an empty string, while Firefox returns\n                 * \"block\".\n                 */\n                const display = view._commitsView.$el.css('display');\n                expect(display === 'block' || display === '').toBe(true);\n            });\n        });\n    });\n});\n"]}