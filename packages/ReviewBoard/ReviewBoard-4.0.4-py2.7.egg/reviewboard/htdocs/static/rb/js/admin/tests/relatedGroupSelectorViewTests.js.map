{"version":3,"sources":["relatedGroupSelectorViewTests.es6.js"],"names":[],"mappings":"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","file":"relatedGroupSelectorViewTests.js","sourcesContent":["suite('rb/admin/views/relatedGroupSelectorView', function() {\n    describe('Rendering', function() {\n        it('when empty', function() {\n            let view = new RB.RelatedGroupSelectorView({\n                $input: $('<input id=\"id_groups\" type=\"hidden\">'),\n                initialOptions: [],\n                multivalued: true,\n                inviteOnly: false,\n            });\n            expect(view.options.multivalued).toBe(true);\n            expect(view.options.inviteOnly).toBe(false);\n            view.render();\n\n            expect(view.$el.find('.related-object-selected li').length)\n                .toBe(0);\n\n        });\n    });\n\n    describe('Rendering', function() {\n        it('with inital options', function() {\n            let view = new RB.RelatedGroupSelectorView({\n                $input: $('<input id=\"id_groups\" type=\"hidden\">'),\n                initialOptions: [{\n                    id: 1,\n                    display_name: \"Test Repository 1\",\n                    name: \"test_repo_1\",\n                    invite_only: false,\n                }, {\n                    id: 2,\n                    display_name: \"Test Repository 2\",\n                    name: \"test_repo_2\",\n                    invite_only: true,\n                }],\n                multivalued: true,\n                inviteOnly: true,\n            });\n            view.render();\n            expect(view.options.multivalued).toBe(true);\n            expect(view.options.inviteOnly).toBe(true);\n\n            expect(view.$el.find('.related-object-selected li').length)\n                .toBe(2);\n            expect(view.$el.siblings('#id_groups').val()).toBe('');\n            /* The input element value should be empty, since the widget will\n               not fill in the values from the objects if the objects are\n               passed through initialOptions. */\n            expect(view._selectedIDs.size).toBe(2);\n\n        });\n    });\n\n    describe('Select item', function() {\n        let view;\n\n        beforeEach(function(done) {\n            $testsScratch.append('<input id=\"id_groups\" type=\"hidden\">');\n            view = new RB.RelatedGroupSelectorView({\n                $input: $('#id_groups'),\n                initialOptions: [],\n                multivalued: true\n            });\n            view.render();\n\n            /* These are the fake users, that will be displayed in the\n               dropdown */\n            spyOn(view, 'loadOptions').and.callFake(function(query, callback) {\n                callback([{\n                    id: 1,\n                    display_name: \"Test Repository 1\",\n                    name: \"test_repo_1\",\n                    invite_only: false,\n                }, {\n                    id: 2,\n                    display_name: \"Test Repository 2\",\n                    name: \"test_repo_2\",\n                    invite_only: true,\n                }]);\n            });\n\n            $('select')[0].selectize.focus();\n            /* The focus() method is being called asynchronously, so it\n              doesn't actually call the loadOptions() method here\n              instantly. That's why I use setTimeout to wait for it to\n              finish. */\n            setTimeout(function() {\n                $testsScratch.find('div .selectize-input.items.not-full input').click();\n                done();\n            }, 4000);\n            /* I probably shouldn't be doing this, but I\n            don't know how else to get it to work. */\n        });\n\n        it('from dropdown', function(done) {\n            expect(view.loadOptions).toHaveBeenCalled();\n            $(\"div[data-value='test_repo_1']\").click();\n            $(\"div[data-value='test_repo_2']\").click();\n            expect(view.$el.siblings('#id_groups').val()).toBe('1,2');\n            done();\n        });\n    });\n\n\n});"]}