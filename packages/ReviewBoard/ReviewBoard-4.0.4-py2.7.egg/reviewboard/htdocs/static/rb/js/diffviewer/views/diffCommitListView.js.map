{"version":3,"sources":["diffCommitListView.es6.js"],"names":[],"mappings":"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","file":"diffCommitListView.js","sourcesContent":["/*\n * The templates should be kept in sync with:\n *\n * - templates/reviews/changedesc_commit_list.html\n * - templates/reviews/commit_list_field.html\n *\n * so that they render items identically.\n */\n(function() {\n\n\nconst itemTemplate = _.template(dedent`\n    <tr<% if (rowClass) { %> class=\"<%- rowClass %>\"<% } %>>\n     <% if (showHistorySymbol) { %>\n      <td class=\"marker\">\n       <%- historyDiffEntry.getSymbol() %>\n      </td>\n     <% } else if (showInterCommitDiffControls) { %>\n      <td class=\"select-base\">\n       <input type=\"radio\"\n              class=\"base-commit-selector\"\n              name=\"base-commit-id\"\n              <% if (baseSelected) { %>checked<% } %>\n              <% if (baseDisabled) { %>disabled<% } %>\n              value=\"<%- commit.id %>\">\n      </td>\n      <td class=\"select-tip\">\n       <input type=\"radio\"\n              class=\"tip-commit-selector\"\n              name=\"tip-commit-id\"\n              <% if (tipSelected) { %>checked<% } %>\n              <% if (tipDisabled) { %>disabled<% } %>\n              value=\"<%- commit.id %>\">\n      </td>\n     <% } %>\n     <% if (showExpandCollapse) { %>\n      <td>\n       <% if (commit && commit.hasSummary()) { %>\n        <a href=\"#\"\n           class=\"expand-commit-message\"\n           data-commit-id=\"<%- commit.id %>\"\n           aria-role=\"button\">\n         <span class=\"fa fa-plus\" title=\"<%- expandText %>\"></span>\n        </a>\n       <% } %>\n      </td>\n     <% } %>\n     <td<% if (showHistorySymbol) { %> class=\"value\"<% } %>>\n      <% if (commit !== null) { %>\n       <pre><%- commit.get('summary') %></pre>\n      <% } %>\n     </td>\n     <td<% if (showHistorySymbol) { %> class=\"value\"<% } %>>\n      <% if (commit !== null) { %>\n       <%- commit.get('authorName') %>\n      <% } %>\n     </td>\n    </tr>\n`);\n\nconst headerTemplate = _.template(dedent`\n    <thead>\n     <tr>\n      <% if (showHistorySymbol) { %>\n       <th></th>\n      <% } else if (showInterCommitDiffControls) { %>\n       <th><%- firstText %></th>\n       <th><%- lastText %></th>\n      <% } %>\n      <th<% if (showExpandCollapse) { %> colspan=\"2\"<% } %>>\n       <%- summaryText %>\n       </th>\n      <th><%- authorText %></th>\n     </tr>\n    </thead>\n`);\n\nconst tableTemplate = _.template(dedent`\n    <form>\n     <table class=\"commit-list\">\n      <colgroup>\n       <% if (showHistorySymbol) { %>\n        <col>\n       <% } else if (showInterCommitDiffControls) { %>\n         <col>\n         <col>\n       <% } %>\n       <% if (showExpandCollapse) { %>\n        <col class=\"expand-collapse-control\">\n       <% } %>\n       <col>\n       <col>\n      </colgroup>\n     </table>\n    </form>\n`);\n\n/**\n * A view for displaying a list of commits and their metadata.\n */\nRB.DiffCommitListView = Backbone.View.extend({\n    events: {\n        'change .base-commit-selector': '_onBaseChanged',\n        'change .tip-commit-selector': '_onTipChanged',\n        'click .collapse-commit-message': '_collapseCommitMessage',\n        'click .expand-commit-message': '_expandCommitMessage',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options that control how this view behaves.\n     *\n     * Option Args:\n     *     showInterCommitDiffControls (boolean):\n     *         Whether or not to show interdiff controls.\n     */\n    initialize(options) {\n        this.listenTo(this.model.get('commits'), 'reset', this.render);\n\n        this._showInterCommitDiffControls =\n            !!options.showInterCommitDiffControls;\n\n        this._$baseSelectors = $();\n        this._$tipSelectors = $();\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.DiffCommitListView:\n     *     This view, for chaining.\n     */\n    render() {\n        const commits = this.model.get('commits');\n        const isInterdiff = this.model.isInterdiff();\n\n        const commonContext = {\n            showExpandCollapse: commits.some(commit => commit.hasSummary()),\n            showHistorySymbol: isInterdiff,\n            showInterCommitDiffControls:\n                this._showInterCommitDiffControls,\n        };\n\n        const $content = $(tableTemplate(commonContext))\n        const $table = $content\n            .find('table')\n            .toggleClass('changed', isInterdiff)\n            .append(headerTemplate(_.extend(\n                {\n                    authorText: gettext('Author'),\n                    firstText: gettext('First'),\n                    lastText: gettext('Last'),\n                    summaryText: gettext('Summary'),\n                },\n                commonContext\n            )));\n\n        const $tbody = $('<tbody />');\n\n        commonContext.expandText = gettext('Expand commit message.');\n\n        if (isInterdiff) {\n            this.model.get('historyDiff').each(historyDiffEntry => {\n                const entryType = historyDiffEntry.get('entryType');\n\n                let key;\n                let rowClass;\n\n                switch (entryType) {\n                    case RB.CommitHistoryDiffEntry.ADDED:\n                        rowClass = 'new-value';\n                        key = 'newCommitID';\n                        break;\n\n                    case RB.CommitHistoryDiffEntry.REMOVED:\n                        rowClass = 'old-value';\n                        key = 'oldCommitID';\n                        break;\n\n                    case RB.CommitHistoryDiffEntry.UNMODIFIED:\n                    case RB.CommitHistoryDiffEntry.MODIFIED:\n                        key = 'newCommitID';\n                        break;\n\n                    default:\n                        console.error('Invalid history entry type: %s',\n                                      entryType);\n                        break;\n                }\n\n                const commit = commits.get(historyDiffEntry.get(key));\n\n                $tbody.append(itemTemplate(_.extend(\n                    {\n                        commit: commit,\n                        historyDiffEntry: historyDiffEntry,\n                        rowClass: rowClass,\n                    },\n                    commonContext\n                )));\n            });\n        } else {\n            commonContext.rowClass = '';\n\n            const baseCommitID = this.model.get('baseCommitID');\n            const tipCommitID = this.model.get('tipCommitID');\n            const lastIndex = commits.size() - 1;\n\n            const baseIndex = (\n                baseCommitID === null\n                ? 0\n                : commits.indexOf(commits.getChild(commits.get(baseCommitID)))\n            );\n\n            const tipIndex = (tipCommitID === null\n                              ? lastIndex\n                              : commits.indexOf(commits.get(tipCommitID)));\n\n            commits.each((commit, i) => {\n                $tbody.append(itemTemplate(_.extend(\n                    {\n                        commit: commit,\n                        baseSelected: i === baseIndex,\n                        tipSelected: i === tipIndex,\n                        baseDisabled: i > tipIndex,\n                        tipDisabled: i < baseIndex,\n                    },\n                    commonContext\n                )));\n            });\n        }\n\n        $table.append($tbody);\n\n        this.$el\n            .empty()\n            .append($content);\n\n        this._$baseSelectors = this.$('.base-commit-selector');\n        this._$tipSelectors = this.$('.tip-commit-selector');\n\n        return this;\n    },\n\n    /**\n     * Handle the expand button being clicked.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The click event.\n     */\n    _expandCommitMessage(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._expandOrCollapse(\n            $(e.target).closest('.expand-commit-message'),\n            true);\n    },\n\n    /**\n     * Handle the collapse button being clicked.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The click event.\n     */\n    _collapseCommitMessage(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._expandOrCollapse(\n            $(e.target).closest('.collapse-commit-message'),\n            false);\n    },\n\n    /**\n     * Expand or collapse the commit message on the same row as the link.\n     *\n     * Args:\n     *     $link (jQuery):\n     *         The expand or collapse link that was clicked.\n     *\n     *     expand (boolean):\n     *         Whether we are expanding (``true``) or collapsing (``false``).\n     */\n    _expandOrCollapse($link, expand) {\n        const $icon = $link.find('.fa');\n        const commitID = $link.data('commitId');\n\n        const commit = this.model.get('commits').get(commitID);\n        const newText = commit.get(expand ? 'commitMessage' : 'summary');\n\n        $link.closest('tr')\n            .find('pre')\n            .text(newText);\n\n        $link.attr(\n            'class',\n            expand ? 'collapse-commit-message' : 'expand-commit-message');\n\n        $icon.attr({\n            'class': expand ? 'fa fa-minus' : 'fa fa-plus',\n            'title': expand ? gettext('Collapse commit message.')\n                            : gettext('Expand commit message.'),\n        });\n    },\n\n    /**\n     * Handle the base commit selection changing.\n     *\n     * The view's model will be updated to reflect this change.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The change event.\n     */\n    _onBaseChanged(e) {\n        const $target = $(e.target);\n        const commits = this.model.get('commits');\n        const commit = commits.get(parseInt($target.val(), 10));\n        const index = commits.indexOf(commit);\n\n        this.model.set('baseCommitID',\n                       index === 0\n                       ? null\n                       : commits.getParent(commit).id);\n\n        this._$tipSelectors\n            .slice(0, index)\n            .prop('disabled', true);\n\n        this._$tipSelectors\n            .slice(index)\n            .prop('disabled', false);\n    },\n\n    /**\n     * Handle the tip commit selection changing.\n     *\n     * The view's model will be updated to reflect this change.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The change event.\n     */\n    _onTipChanged(e) {\n        const $target = $(e.target);\n        const commits = this.model.get('commits');\n        const commit = commits.get(parseInt($target.val(), 10));\n        const index = commits.indexOf(commit);\n\n        this.model.set('tipCommitID',\n                       index === commits.size() - 1\n                       ? null\n                       : commit.id);\n\n        this._$baseSelectors\n            .slice(0, index + 1)\n            .prop('disabled', false);\n\n        this._$baseSelectors\n            .slice(index + 1)\n            .prop('disabled', true);\n    },\n});\n\n\n})();\n"]}