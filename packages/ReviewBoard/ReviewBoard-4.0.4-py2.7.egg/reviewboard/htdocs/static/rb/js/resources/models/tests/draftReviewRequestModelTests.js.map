{"version":3,"sources":["draftReviewRequestModelTests.es6.js"],"names":[],"mappings":"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","file":"draftReviewRequestModelTests.js","sourcesContent":["suite('rb/resources/models/DraftReviewRequest', function() {\n    let draft;\n    let callbacks;\n\n    beforeEach(function() {\n        const reviewRequest = new RB.ReviewRequest({\n            id: 1,\n            links: {\n                draft: {\n                    href: '/api/review-requests/123/draft/',\n                },\n            },\n        });\n\n        draft = reviewRequest.draft;\n\n        callbacks = {\n            success: function() {},\n            error: function() {},\n        };\n\n        spyOn(callbacks, 'success');\n        spyOn(callbacks, 'error');\n\n        spyOn(reviewRequest, 'ready').and.callFake(\n            (options, context) => options.ready.call(context));\n\n        spyOn(reviewRequest, 'ensureCreated').and.callFake(\n            (options, context) => options.success.call(context));\n\n        spyOn(draft, 'ready').and.callFake(\n            (options, context) => options.ready.call(context));\n    });\n\n    it('url', function() {\n        expect(draft.url()).toBe('/api/review-requests/123/draft/');\n    });\n\n    it('publish', function() {\n        spyOn(RB, 'apiCall').and.callThrough();\n        spyOn($, 'ajax').and.callFake(request => {\n            expect(request.data.public).toBe(1);\n\n            request.success({\n                stat: 'ok',\n                draft: {\n                    id: 1,\n                    links: {},\n                },\n            });\n        });\n\n        /* Set some fields in order to pass validation. */\n        draft.set({\n            targetGroups: [{\n                name: 'mygroup',\n                url: '/groups/mygroup',\n            }],\n            summary: 'My summary',\n            description: 'My description',\n        });\n\n        draft.publish({\n            success: callbacks.success,\n            error: callbacks.error,\n        });\n\n        expect(callbacks.error).not.toHaveBeenCalled();\n        expect(callbacks.success).toHaveBeenCalled();\n        expect(RB.apiCall).toHaveBeenCalled();\n        expect($.ajax).toHaveBeenCalled();\n    });\n\n    it('parse', function() {\n        const data = draft.parse({\n            stat: 'ok',\n            draft: {\n                id: 1,\n                branch: 'branch',\n                bugs_closed: 'bugsClosed',\n                changedescription: 'changeDescription',\n                changedescription_text_type: 'markdown',\n                description: 'description',\n                'public': 'public',\n                description_text_type: 'markdown',\n                summary: 'summary',\n                target_groups: 'targetGroups',\n                target_people: 'targetPeople',\n                testing_done: 'testingDone',\n                testing_done_text_type: 'plain',\n                links: {\n                    submitter: 'submitter',\n                },\n            },\n        });\n\n        expect(data).not.toBe(undefined);\n        expect(data.id).toBe(1);\n        expect(data.branch).toBe('branch');\n        expect(data.bugsClosed).toBe('bugsClosed');\n        expect(data.changeDescription).toBe('changeDescription');\n        expect(data.changeDescriptionRichText).toBe(true);\n        expect(data.description).toBe('description');\n        expect(data.descriptionRichText).toBe(true);\n        expect(data.public).toBe('public');\n        expect(data.summary).toBe('summary');\n        expect(data.submitter).toBe('submitter');\n        expect(data.targetGroups).toBe('targetGroups');\n        expect(data.targetPeople).toBe('targetPeople');\n        expect(data.testingDone).toBe('testingDone');\n        expect(data.testingDoneRichText).toBe(false);\n    });\n});\n"]}