Metadata-Version: 2.1
Name: ml-tracking-api
Version: 1.0.3
Summary: REST ML-AI API
Home-page: https://github.com/EimantasN/Equusight_BackEnd
Author: Eimantas Noreika
Author-email: noreika.eimantas@gmail.com
License: UNKNOWN
Description: # ml-tracking-api
        No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
        
        This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:
        
        - API version: v1
        - Package version: 1.0.2
        - Build package: org.openapitools.codegen.languages.PythonClientCodegen
        
        ## Requirements.
        
        Python >= 3.6
        
        ## Installation & Usage
        ### pip install
        
        If the python package is hosted on a repository, you can install directly using:
        
        ```sh
        pip install git+https:////.git
        ```
        (you may need to run `pip` with root permission: `sudo pip install git+https:////.git`)
        
        Then import the package:
        ```python
        import ml_tracking
        ```
        
        ### Setuptools
        
        Install via [Setuptools](http://pypi.python.org/pypi/setuptools).
        
        ```sh
        python setup.py install --user
        ```
        (or `sudo python setup.py install` to install the package for all users)
        
        Then import the package:
        ```python
        import ml_tracking
        ```
        
        ## Getting Started
        
        Please follow the [installation procedure](#installation--usage) and then run the following:
        
        ```python
        
        import time
        import ml_tracking
        from pprint import pprint
        from ml_tracking.api import data_rows_api
        from ml_tracking.model.create_data_row_command import CreateDataRowCommand
        from ml_tracking.model.data_row_dto_paginated_list import DataRowDtoPaginatedList
        from ml_tracking.model.update_data_row_command import UpdateDataRowCommand
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = ml_tracking.Configuration(
            host = "http://localhost"
        )
        
        
        
        # Enter a context with an instance of the API client
        with ml_tracking.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = data_rows_api.DataRowsApi(api_client)
            page_number = 1 # int |  (optional)
        page_size = 1 # int |  (optional)
        
            try:
                api_response = api_instance.api_data_rows_get(page_number=page_number, page_size=page_size)
                pprint(api_response)
            except ml_tracking.ApiException as e:
                print("Exception when calling DataRowsApi->api_data_rows_get: %s\n" % e)
        ```
        
        ## Documentation for API Endpoints
        
        All URIs are relative to *http://localhost*
        
        Class | Method | HTTP request | Description
        ------------ | ------------- | ------------- | -------------
        *DataRowsApi* | [**api_data_rows_get**](docs/DataRowsApi.md#api_data_rows_get) | **GET** /api/DataRows | 
        *DataRowsApi* | [**api_data_rows_id_delete**](docs/DataRowsApi.md#api_data_rows_id_delete) | **DELETE** /api/DataRows/{id} | 
        *DataRowsApi* | [**api_data_rows_id_put**](docs/DataRowsApi.md#api_data_rows_id_put) | **PUT** /api/DataRows/{id} | 
        *DataRowsApi* | [**api_data_rows_limit_get**](docs/DataRowsApi.md#api_data_rows_limit_get) | **GET** /api/DataRows/{limit} | 
        *DataRowsApi* | [**api_data_rows_post**](docs/DataRowsApi.md#api_data_rows_post) | **POST** /api/DataRows | 
        *HostedServiceApi* | [**api_hosted_service_get**](docs/HostedServiceApi.md#api_hosted_service_get) | **GET** /api/HostedService | 
        *PyTorchApi* | [**api_py_torch_post**](docs/PyTorchApi.md#api_py_torch_post) | **POST** /api/PyTorch | 
        
        
        ## Documentation For Models
        
         - [CreateDataRowCommand](docs/CreateDataRowCommand.md)
         - [DataRowDto](docs/DataRowDto.md)
         - [DataRowDtoPaginatedList](docs/DataRowDtoPaginatedList.md)
         - [HostedServiceDto](docs/HostedServiceDto.md)
         - [UpdateDataRowCommand](docs/UpdateDataRowCommand.md)
        
        
        ## Documentation For Authorization
        
         All endpoints do not require authorization.
        
        ## Author
        
        
        
        
        ## Notes for Large OpenAPI documents
        If the OpenAPI document is large, imports in ml_tracking.apis and ml_tracking.models may fail with a
        RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:
        
        Solution 1:
        Use specific imports for apis and models like:
        - `from ml_tracking.api.default_api import DefaultApi`
        - `from ml_tracking.model.pet import Pet`
        
        Solution 2:
        Before importing the package, adjust the maximum recursion limit as shown below:
        ```
        import sys
        sys.setrecursionlimit(1500)
        import ml_tracking
        from ml_tracking.apis import *
        from ml_tracking.models import *
        ```
        
        
Keywords: OpenAPI,OpenAPI-Generator,REST ML-AI API
Platform: UNKNOWN
Requires-Python: >=3.6
Description-Content-Type: text/markdown
