# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AssetRunningSpeedChild(Model):
    """AssetRunningSpeedChild.

    :param running_speed_min: The minimum running speed in Hz
    :type running_speed_min: float
    :param running_speed_max: The maximum running speed in Hz
    :type running_speed_max: float
    :param running_speed_type: The running speed type : "Fixed" |
     "Autotracking"
    :type running_speed_type: str
    :param running_speed_unit: The running speed unit: "CyclesperMin" |
     "Hertz"
    :type running_speed_unit: str
    :param running_speed_reference_monitoring_point_id: The id of the
     reference monitoring point
    :type running_speed_reference_monitoring_point_id: str
    :param running_speed_sensor_role_type: The sensor role type code. Possible
     values include: 'Invalid', 'CurrentPhaseA', 'PeakCurrentPhaseA',
     'CurrentPhaseB', 'PeakCurrentPhaseB', 'CurrentPhaseC',
     'PeakCurrentPhaseC', 'DifferentialPressure', 'Flow', 'Humidity',
     'NodeTemperature', 'NodeVoltage', 'PeakVibration', 'Pressure',
     'RmsVibration', 'SignalStrength', 'StandardAirVelocity', 'SupplyVoltage',
     'Temperature', 'TotalCurrent', 'VibrationXAxis', 'VibrationYAxis',
     'Voltage', 'Current', 'AtoDChannel1', 'AtoDChannel2', 'AtoDChannel3',
     'AtoDChannel4', 'AtoDChannel5', 'AtoDChannel6', 'OilTemperature',
     'OilHumidity', 'X', 'Y', 'Z', 'Custom', 'WirelessEfficiency',
     'PacketSuccessRate', 'NodeHumidity', 'BurstSuccessRate'
    :type running_speed_sensor_role_type: str or
     ~smartdiagnostics_sdk.models.enum
    :param running_speed_harmonic: The harmonic value in hz
    :type running_speed_harmonic: float
    """

    _attribute_map = {
        'running_speed_min': {'key': 'RunningSpeedMin', 'type': 'float'},
        'running_speed_max': {'key': 'RunningSpeedMax', 'type': 'float'},
        'running_speed_type': {'key': 'RunningSpeedType', 'type': 'str'},
        'running_speed_unit': {'key': 'RunningSpeedUnit', 'type': 'str'},
        'running_speed_reference_monitoring_point_id': {'key': 'RunningSpeedReferenceMonitoringPointId', 'type': 'str'},
        'running_speed_sensor_role_type': {'key': 'RunningSpeedSensorRoleType', 'type': 'str'},
        'running_speed_harmonic': {'key': 'RunningSpeedHarmonic', 'type': 'float'},
    }

    def __init__(self, **kwargs):
        super(AssetRunningSpeedChild, self).__init__(**kwargs)
        self.running_speed_min = kwargs.get('running_speed_min', None)
        self.running_speed_max = kwargs.get('running_speed_max', None)
        self.running_speed_type = kwargs.get('running_speed_type', None)
        self.running_speed_unit = kwargs.get('running_speed_unit', None)
        self.running_speed_reference_monitoring_point_id = kwargs.get('running_speed_reference_monitoring_point_id', None)
        self.running_speed_sensor_role_type = kwargs.get('running_speed_sensor_role_type', None)
        self.running_speed_harmonic = kwargs.get('running_speed_harmonic', None)
