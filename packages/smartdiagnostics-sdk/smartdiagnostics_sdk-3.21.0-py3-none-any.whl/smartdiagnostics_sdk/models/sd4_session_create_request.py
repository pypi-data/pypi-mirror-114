# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Sd4SessionCreateRequest(Model):
    """Sd4SessionCreateRequest.

    All required parameters must be populated in order to send to Azure.

    :param system_id: Required.
    :type system_id: str
    :param custom_filter_ids:
    :type custom_filter_ids: list[str]
    :param indicator_types:
    :type indicator_types: list[str]
    :param measure_ofs:
    :type measure_ofs: list[str]
    :param group_ids:
    :type group_ids: list[str]
    :param selected_indicator_ids:
    :type selected_indicator_ids: list[str]
    :param selected_point:
    :type selected_point:
     ~smartdiagnostics_sdk.models.SessionSelectedPointChild
    :param time_range:
    :type time_range: ~smartdiagnostics_sdk.models.SessionTimeRangeChild
    """

    _validation = {
        'system_id': {'required': True},
    }

    _attribute_map = {
        'system_id': {'key': 'SystemId', 'type': 'str'},
        'custom_filter_ids': {'key': 'CustomFilterIds', 'type': '[str]'},
        'indicator_types': {'key': 'IndicatorTypes', 'type': '[str]'},
        'measure_ofs': {'key': 'MeasureOfs', 'type': '[str]'},
        'group_ids': {'key': 'GroupIds', 'type': '[str]'},
        'selected_indicator_ids': {'key': 'SelectedIndicatorIds', 'type': '[str]'},
        'selected_point': {'key': 'SelectedPoint', 'type': 'SessionSelectedPointChild'},
        'time_range': {'key': 'TimeRange', 'type': 'SessionTimeRangeChild'},
    }

    def __init__(self, **kwargs):
        super(Sd4SessionCreateRequest, self).__init__(**kwargs)
        self.system_id = kwargs.get('system_id', None)
        self.custom_filter_ids = kwargs.get('custom_filter_ids', None)
        self.indicator_types = kwargs.get('indicator_types', None)
        self.measure_ofs = kwargs.get('measure_ofs', None)
        self.group_ids = kwargs.get('group_ids', None)
        self.selected_indicator_ids = kwargs.get('selected_indicator_ids', None)
        self.selected_point = kwargs.get('selected_point', None)
        self.time_range = kwargs.get('time_range', None)
