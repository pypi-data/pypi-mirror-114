# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ActivityEventUpdateRequest(Model):
    """ActivityEventUpdateRequest.

    :param clear_existing_binds:
    :type clear_existing_binds: bool
    :param clear_end_date_time: Clear any current EndDateTime value.  Reset to
     null.
     Ignored if endDateTime is supplied in the update request
    :type clear_end_date_time: bool
    :param title:
    :type title: str
    :param description:
    :type description: str
    :param note:
    :type note: str
    :param start_date_time:
    :type start_date_time: datetime
    :param end_date_time:
    :type end_date_time: datetime
    :param document:
    :type document: ~smartdiagnostics_sdk.models.ActivityEventDocumentRequest
    :param subcategories:
    :type subcategories:
     list[~smartdiagnostics_sdk.models.ActivityEventSubcategoryEntryRequest]
    :param binds:
    :type binds: list[~smartdiagnostics_sdk.models.ActivityEventBindRequest]
    :param fields:
    :type fields:
     list[~smartdiagnostics_sdk.models.ActivityEventFieldEntryRequest]
    """

    _validation = {
        'title': {'max_length': 50, 'min_length': 0},
        'description': {'max_length': 1000, 'min_length': 0},
        'note': {'max_length': 1000, 'min_length': 0},
    }

    _attribute_map = {
        'clear_existing_binds': {'key': 'ClearExistingBinds', 'type': 'bool'},
        'clear_end_date_time': {'key': 'ClearEndDateTime', 'type': 'bool'},
        'title': {'key': 'Title', 'type': 'str'},
        'description': {'key': 'Description', 'type': 'str'},
        'note': {'key': 'Note', 'type': 'str'},
        'start_date_time': {'key': 'StartDateTime', 'type': 'iso-8601'},
        'end_date_time': {'key': 'EndDateTime', 'type': 'iso-8601'},
        'document': {'key': 'Document', 'type': 'ActivityEventDocumentRequest'},
        'subcategories': {'key': 'Subcategories', 'type': '[ActivityEventSubcategoryEntryRequest]'},
        'binds': {'key': 'Binds', 'type': '[ActivityEventBindRequest]'},
        'fields': {'key': 'Fields', 'type': '[ActivityEventFieldEntryRequest]'},
    }

    def __init__(self, *, clear_existing_binds: bool=None, clear_end_date_time: bool=None, title: str=None, description: str=None, note: str=None, start_date_time=None, end_date_time=None, document=None, subcategories=None, binds=None, fields=None, **kwargs) -> None:
        super(ActivityEventUpdateRequest, self).__init__(**kwargs)
        self.clear_existing_binds = clear_existing_binds
        self.clear_end_date_time = clear_end_date_time
        self.title = title
        self.description = description
        self.note = note
        self.start_date_time = start_date_time
        self.end_date_time = end_date_time
        self.document = document
        self.subcategories = subcategories
        self.binds = binds
        self.fields = fields
