# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ActivityEventCategoryResponse(Model):
    """ActivityEventCategoryResponse.

    All required parameters must be populated in order to send to Azure.

    :param id: Required.
    :type id: int
    :param code: Required.
    :type code: str
    :param name:
    :type name: str
    :param description:
    :type description: str
    :param activity_line_enabled:
    :type activity_line_enabled: bool
    :param category_flag: Possible values include: 'None', 'Alarm', 'Warning',
     'Manual', 'Automatic', 'MachineIQ'
    :type category_flag: str or ~smartdiagnostics_sdk.models.enum
    :param asset_card_enabled:
    :type asset_card_enabled: bool
    :param owner:
    :type owner: ~smartdiagnostics_sdk.models.ActivityEventCategoryOwnerChild
    :param internal:
    :type internal: bool
    :param subcategories:
    :type subcategories:
     list[~smartdiagnostics_sdk.models.ActivityEventSubcategoryChild]
    :param fields:
    :type fields: list[~smartdiagnostics_sdk.models.ActivityEventFieldChild]
    """

    _validation = {
        'id': {'required': True},
        'code': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'Id', 'type': 'int'},
        'code': {'key': 'Code', 'type': 'str'},
        'name': {'key': 'Name', 'type': 'str'},
        'description': {'key': 'Description', 'type': 'str'},
        'activity_line_enabled': {'key': 'ActivityLineEnabled', 'type': 'bool'},
        'category_flag': {'key': 'CategoryFlag', 'type': 'str'},
        'asset_card_enabled': {'key': 'AssetCardEnabled', 'type': 'bool'},
        'owner': {'key': 'Owner', 'type': 'ActivityEventCategoryOwnerChild'},
        'internal': {'key': 'Internal', 'type': 'bool'},
        'subcategories': {'key': 'Subcategories', 'type': '[ActivityEventSubcategoryChild]'},
        'fields': {'key': 'Fields', 'type': '[ActivityEventFieldChild]'},
    }

    def __init__(self, *, id: int, code: str, name: str=None, description: str=None, activity_line_enabled: bool=None, category_flag=None, asset_card_enabled: bool=None, owner=None, internal: bool=None, subcategories=None, fields=None, **kwargs) -> None:
        super(ActivityEventCategoryResponse, self).__init__(**kwargs)
        self.id = id
        self.code = code
        self.name = name
        self.description = description
        self.activity_line_enabled = activity_line_enabled
        self.category_flag = category_flag
        self.asset_card_enabled = asset_card_enabled
        self.owner = owner
        self.internal = internal
        self.subcategories = subcategories
        self.fields = fields
