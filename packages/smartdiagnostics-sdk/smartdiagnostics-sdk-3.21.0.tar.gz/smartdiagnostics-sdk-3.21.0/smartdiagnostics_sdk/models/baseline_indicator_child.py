# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class BaselineIndicatorChild(Model):
    """BaselineIndicatorChild.

    :param baseline_value: Baseline Value (aka Baseline Number) for a given
     Damage indicator
    :type baseline_value: float
    :param baseline_range_end_date: The ending date of the baseline.
     Will be null when the BaselineType is Single
    :type baseline_range_end_date: datetime
    :param baseline_range_start_date: The starting date for the baseline
    :type baseline_range_start_date: datetime
    :param baseline_error: Description of the error, if any occurred
    :type baseline_error: str
    :param baseline_type: The type of baseline taken being either single,
     range, or none
    :type baseline_type: str
    :param baseline_state: The state of the baseline. Whether the baseline is
     complete, has an error, or does not exist.
    :type baseline_state: str
    :param baseline_sampling_frequency: Defines how often the number of
     samples are taken for the baseline
    :type baseline_sampling_frequency: int
    """

    _attribute_map = {
        'baseline_value': {'key': 'BaselineValue', 'type': 'float'},
        'baseline_range_end_date': {'key': 'BaselineRangeEndDate', 'type': 'iso-8601'},
        'baseline_range_start_date': {'key': 'BaselineRangeStartDate', 'type': 'iso-8601'},
        'baseline_error': {'key': 'BaselineError', 'type': 'str'},
        'baseline_type': {'key': 'BaselineType', 'type': 'str'},
        'baseline_state': {'key': 'BaselineState', 'type': 'str'},
        'baseline_sampling_frequency': {'key': 'BaselineSamplingFrequency', 'type': 'int'},
    }

    def __init__(self, **kwargs):
        super(BaselineIndicatorChild, self).__init__(**kwargs)
        self.baseline_value = kwargs.get('baseline_value', None)
        self.baseline_range_end_date = kwargs.get('baseline_range_end_date', None)
        self.baseline_range_start_date = kwargs.get('baseline_range_start_date', None)
        self.baseline_error = kwargs.get('baseline_error', None)
        self.baseline_type = kwargs.get('baseline_type', None)
        self.baseline_state = kwargs.get('baseline_state', None)
        self.baseline_sampling_frequency = kwargs.get('baseline_sampling_frequency', None)
