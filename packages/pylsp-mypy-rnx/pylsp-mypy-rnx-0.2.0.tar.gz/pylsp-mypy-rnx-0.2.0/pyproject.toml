[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
bump = true

[tool.poetry]
name = "pylsp-mypy-rnx"
version = "0.2.0"  # https://github.com/mtkennerly/poetry-dynamic-versioning
description = "mypy-ls fork"
authors = ["Guillaume Jeusel <guillaume.jeusel@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage ="https://github.com/gjeusel/pylsp-mypy-rnx"
keywords = ["lsp", "mypy", "python-lsp-server"]
repository = "https://github.com/gjeusel/pylsp-mypy-rnx"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/gjeusel/pylsp-mypy-rnx/issues"
"Source" = "https://github.com/gjeusel/pylsp-mypy-rnx"


[tool.poetry.dependencies]
python = "^3.7"
python-lsp-server = "^1.0"
setuptools = "*"

[tool.poetry.dev-dependencies]
# Linting / Formatters
pre-commit = "2.13.0"

flake8 = "3.9.*"
flake8-bugbear = "21.4.*"
flake8-builtins = "1.5.*"
mypy = "0.902"

black = "21.6b0"
isort = "5.8.*"

# test
pytest = "*"
pytest-cov = "*"
codecov = "*"


[tool.pytest.ini_options]
addopts = '--cov --no-cov-on-fail'

[tool.coverage.run]
branch = true
include = ['tests/*', 'pylsp_mypy_rnx/*']

[tool.coverage.report]
exclude_lines = ['pragma: no cover', 'def __repr__', 'raise NotImplementedError']
omit = ['.*']

[tool.poetry.plugins.pylsp]
pylsp_mypy_rnx = "pylsp_mypy_rnx.plugin"

[tool.isort]
line_length = 88
profile = "black"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | htmlcov
    | build
  )/
)
'''

# Waiting for: https://github.com/PyCQA/flake8/issues/234
# [tool.flake8]
# # https://www.flake8rules.com/
# exclude = ['.git', '__pycache__', 'build', 'dist', '.eggs']
# max-line-length = 88
# ignore = [
#   'W503', # W503: line break before binary operator
#   'W504', # W504: line break after binary operator
#
#   'A001', # A001 "id" is a python builtin and is being shadowed, consider renaming the variable
#   'A002', # A002 "type" is used as an argument and thus shadows a python builtin, consider renaming the argument
#   'A003', # A003 "id" is a python builtin, consider renaming the class attribute
#
#   'B008', # B008 Do not perform function calls in argument defaults
#
#   'C901', # C901: is too complex
#
#   'E203', # E203: whitespace before ':'
#   'E266', # E266: too many leading '#' for block comment
#   'E402', # E402: Module level import not at top of file
#   'E731', # E731: Do not assign a lambda expression, use a def
# ]

[tool.mypy]
python_version = 3.9

# strict by default
# follow_imports = 'normal'
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_configs = true
show_column_numbers = true

disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false

no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = ['tests.*']
disallow_subclassing_any = false
disallow_untyped_defs = false
disallow_untyped_calls = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
